"use strict";(self.webpackChunkring_docs=self.webpackChunkring_docs||[]).push([[9624],{88369:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"api/info","title":"Platform Information","description":"Overview","source":"@site/docs/api/info.md","sourceDirName":"api","slug":"/api/info","permalink":"/ring/uk/docs/api/info","draft":false,"unlisted":false,"editUrl":"https://github.com/connectplatform/ring/ring-docs/tree/main/docs/api/info.md","tags":[],"version":"current","lastUpdatedAt":1750259184000,"frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"File Upload API","permalink":"/ring/uk/docs/api/upload"},"next":{"title":"Add","permalink":"/ring/uk/docs/api/add-entity"}}');var s=t(74848),r=t(28453);const a={},o="Platform Information",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Endpoint Details",id:"endpoint-details",level:2},{value:"Response",id:"response",level:2},{value:"Success Response (200)",id:"success-response-200",level:3},{value:"Code Examples",id:"code-examples",level:2},{value:"JavaScript/TypeScript",id:"javascripttypescript",level:3},{value:"React Component Example",id:"react-component-example",level:3},{value:"cURL Example",id:"curl-example",level:3},{value:"Python Example",id:"python-example",level:3},{value:"Health Check Integration",id:"health-check-integration",level:2},{value:"Docker Health Check",id:"docker-health-check",level:3},{value:"Kubernetes Liveness Probe",id:"kubernetes-liveness-probe",level:3},{value:"Monitoring Integration",id:"monitoring-integration",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Service Unavailable (503)",id:"service-unavailable-503",level:3},{value:"Rate Limit Exceeded (429)",id:"rate-limit-exceeded-429",level:3},{value:"Response Fields",id:"response-fields",level:2},{value:"Platform Information",id:"platform-information-1",level:3},{value:"Status Information",id:"status-information",level:3},{value:"Statistics",id:"statistics",level:3},{value:"Caching",id:"caching",level:2},{value:"Response Caching",id:"response-caching",level:3},{value:"Implementation",id:"implementation",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Information Disclosure",id:"information-disclosure",level:3},{value:"Monitoring",id:"monitoring",level:3},{value:"Related Endpoints",id:"related-endpoints",level:2},{value:"Testing",id:"testing",level:2},{value:"Unit Tests",id:"unit-tests",level:3},{value:"Integration Tests",id:"integration-tests",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"platform-information",children:"Platform Information"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"/api/info"})," endpoint provides general platform information, health status, and system metrics. This is a public endpoint that doesn't require authentication and is useful for monitoring and integration purposes."]}),"\n",(0,s.jsx)(n.h2,{id:"endpoint-details",children:"Endpoint Details"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"GET /api/info\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Authentication"}),": None required (public endpoint)\n",(0,s.jsx)(n.strong,{children:"Rate Limit"}),": 60 requests per minute per IP"]}),"\n",(0,s.jsx)(n.h2,{id:"response",children:"Response"}),"\n",(0,s.jsx)(n.h3,{id:"success-response-200",children:"Success Response (200)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "platform": {\n    "name": "Ring Platform",\n    "version": "1.0.0",\n    "description": "Revolutionary platform for professional networking and collaboration",\n    "environment": "production",\n    "region": "eu-central-1"\n  },\n  "status": {\n    "healthy": true,\n    "uptime": 2592000,\n    "timestamp": "2024-12-14T16:00:00Z",\n    "services": {\n      "database": "healthy",\n      "storage": "healthy",\n      "authentication": "healthy",\n      "notifications": "healthy",\n      "search": "healthy"\n    }\n  },\n  "statistics": {\n    "users": {\n      "total": 15420,\n      "active": 8934,\n      "verified": 12156,\n      "roles": {\n        "visitor": 2456,\n        "subscriber": 6789,\n        "member": 4321,\n        "confidential": 1234,\n        "admin": 12\n      }\n    },\n    "entities": {\n      "total": 3456,\n      "verified": 2890,\n      "categories": {\n        "startup": 1234,\n        "enterprise": 567,\n        "nonprofit": 234,\n        "government": 89,\n        "other": 1332\n      }\n    },\n    "opportunities": {\n      "total": 8765,\n      "active": 4321,\n      "types": {\n        "job": 5432,\n        "project": 2109,\n        "partnership": 876,\n        "investment": 348\n      }\n    },\n    "content": {\n      "news": 234,\n      "notifications": 45678\n    }\n  },\n  "features": {\n    "authentication": {\n      "providers": ["google", "apple", "metamask", "credentials"],\n      "web3": true,\n      "multiProvider": true\n    },\n    "content": {\n      "news": true,\n      "notifications": true,\n      "fileUpload": true,\n      "richText": true\n    },\n    "admin": {\n      "userManagement": true,\n      "contentManagement": true,\n      "analytics": true,\n      "roleManagement": true\n    },\n    "api": {\n      "endpoints": 38,\n      "rateLimit": true,\n      "documentation": true,\n      "versioning": "v1"\n    }\n  },\n  "limits": {\n    "fileUpload": {\n      "maxSize": "10MB",\n      "allowedTypes": ["image/jpeg", "image/png", "image/webp", "application/pdf", "text/plain"]\n    },\n    "rateLimit": {\n      "default": "60/minute",\n      "authenticated": "120/minute",\n      "admin": "300/minute"\n    },\n    "content": {\n      "maxBioLength": 500,\n      "maxSkills": 20,\n      "maxInterests": 10,\n      "maxNewsLength": 10000\n    }\n  },\n  "contact": {\n    "support": "support@ring.ck.ua",\n    "admin": "admin@ring.ck.ua",\n    "website": "https://ring.ck.ua",\n    "documentation": "https://docs.ring.ck.ua"\n  },\n  "legal": {\n    "termsOfService": "https://ring.ck.ua/terms",\n    "privacyPolicy": "https://ring.ck.ua/privacy",\n    "dataProtection": "GDPR compliant",\n    "lastUpdated": "2024-12-01T00:00:00Z"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,s.jsx)(n.h3,{id:"javascripttypescript",children:"JavaScript/TypeScript"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Get platform information\nasync function getPlatformInfo() {\n  try {\n    const response = await fetch('/api/info', {\n      headers: {\n        'Accept': 'application/json'\n      }\n    })\n    \n    if (!response.ok) {\n      throw new Error('Failed to fetch platform info')\n    }\n    \n    const info = await response.json()\n    return info\n  } catch (error) {\n    console.error('Error fetching platform info:', error)\n    throw error\n  }\n}\n\n// Check platform health\nasync function checkPlatformHealth() {\n  try {\n    const info = await getPlatformInfo()\n    return {\n      isHealthy: info.status.healthy,\n      services: info.status.services,\n      uptime: info.status.uptime\n    }\n  } catch (error) {\n    return {\n      isHealthy: false,\n      error: error.message\n    }\n  }\n}\n\n// Get platform statistics\nasync function getPlatformStats() {\n  try {\n    const info = await getPlatformInfo()\n    return info.statistics\n  } catch (error) {\n    console.error('Error fetching platform stats:', error)\n    return null\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"react-component-example",children:"React Component Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { useState, useEffect } from 'react'\n\ninterface PlatformInfo {\n  platform: {\n    name: string\n    version: string\n    environment: string\n  }\n  status: {\n    healthy: boolean\n    uptime: number\n    services: Record<string, string>\n  }\n  statistics: {\n    users: { total: number; active: number }\n    entities: { total: number }\n    opportunities: { total: number; active: number }\n  }\n}\n\nexport function PlatformStatus() {\n  const [info, setInfo] = useState<PlatformInfo | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  \n  useEffect(() => {\n    fetchPlatformInfo()\n    \n    // Refresh every 30 seconds\n    const interval = setInterval(fetchPlatformInfo, 30000)\n    return () => clearInterval(interval)\n  }, [])\n  \n  const fetchPlatformInfo = async () => {\n    try {\n      const response = await fetch('/api/info')\n      if (!response.ok) throw new Error('Failed to fetch')\n      \n      const data = await response.json()\n      setInfo(data)\n      setError(null)\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error')\n    } finally {\n      setLoading(false)\n    }\n  }\n  \n  if (loading) return <div>Loading platform status...</div>\n  if (error) return <div>Error: {error}</div>\n  if (!info) return <div>No data available</div>\n  \n  return (\n    <div className=\"platform-status\">\n      <h2>{info.platform.name} Status</h2>\n      <div className={`status ${info.status.healthy ? 'healthy' : 'unhealthy'}`}>\n        Status: {info.status.healthy ? '\u2705 Healthy' : '\u274c Issues Detected'}\n      </div>\n      \n      <div className=\"stats\">\n        <div>Users: {info.statistics.users.total.toLocaleString()}</div>\n        <div>Entities: {info.statistics.entities.total.toLocaleString()}</div>\n        <div>Opportunities: {info.statistics.opportunities.total.toLocaleString()}</div>\n      </div>\n      \n      <div className=\"services\">\n        <h3>Services</h3>\n        {Object.entries(info.status.services).map(([service, status]) => (\n          <div key={service} className={`service ${status}`}>\n            {service}: {status}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"curl-example",children:"cURL Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Get platform information\ncurl -X GET "https://ring.ck.ua/api/info" \\\n  -H "Accept: application/json"\n\n# Check only health status\ncurl -X GET "https://ring.ck.ua/api/info" \\\n  -H "Accept: application/json" | jq \'.status.healthy\'\n\n# Get user statistics\ncurl -X GET "https://ring.ck.ua/api/info" \\\n  -H "Accept: application/json" | jq \'.statistics.users\'\n'})}),"\n",(0,s.jsx)(n.h3,{id:"python-example",children:"Python Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests\nimport json\n\ndef get_platform_info():\n    """Get platform information and status"""\n    try:\n        response = requests.get(\'https://ring.ck.ua/api/info\')\n        response.raise_for_status()\n        return response.json()\n    except requests.RequestException as e:\n        print(f"Error fetching platform info: {e}")\n        return None\n\ndef check_platform_health():\n    """Check if platform is healthy"""\n    info = get_platform_info()\n    if not info:\n        return False\n    \n    return info.get(\'status\', {}).get(\'healthy\', False)\n\ndef get_platform_stats():\n    """Get platform statistics"""\n    info = get_platform_info()\n    if not info:\n        return None\n    \n    return info.get(\'statistics\', {})\n\n# Usage examples\nif __name__ == "__main__":\n    # Check health\n    is_healthy = check_platform_health()\n    print(f"Platform healthy: {is_healthy}")\n    \n    # Get statistics\n    stats = get_platform_stats()\n    if stats:\n        print(f"Total users: {stats.get(\'users\', {}).get(\'total\', 0)}")\n        print(f"Active opportunities: {stats.get(\'opportunities\', {}).get(\'active\', 0)}")\n'})}),"\n",(0,s.jsx)(n.h2,{id:"health-check-integration",children:"Health Check Integration"}),"\n",(0,s.jsx)(n.h3,{id:"docker-health-check",children:"Docker Health Check"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dockerfile",children:"# Dockerfile health check\nHEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n  CMD curl -f http://localhost:3000/api/info || exit 1\n"})}),"\n",(0,s.jsx)(n.h3,{id:"kubernetes-liveness-probe",children:"Kubernetes Liveness Probe"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# kubernetes deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: ring-platform\nspec:\n  template:\n    spec:\n      containers:\n      - name: ring-app\n        image: ring-platform:latest\n        livenessProbe:\n          httpGet:\n            path: /api/info\n            port: 3000\n          initialDelaySeconds: 30\n          periodSeconds: 10\n        readinessProbe:\n          httpGet:\n            path: /api/info\n            port: 3000\n          initialDelaySeconds: 5\n          periodSeconds: 5\n"})}),"\n",(0,s.jsx)(n.h3,{id:"monitoring-integration",children:"Monitoring Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Prometheus metrics endpoint integration\nimport { register, collectDefaultMetrics, Gauge, Counter } from 'prom-client'\n\n// Collect default metrics\ncollectDefaultMetrics()\n\n// Custom metrics\nconst healthGauge = new Gauge({\n  name: 'ring_platform_health',\n  help: 'Platform health status (1 = healthy, 0 = unhealthy)'\n})\n\nconst userCountGauge = new Gauge({\n  name: 'ring_platform_users_total',\n  help: 'Total number of users'\n})\n\n// Update metrics in /api/info handler\nexport async function updateMetrics() {\n  const info = await getPlatformInfo()\n  \n  healthGauge.set(info.status.healthy ? 1 : 0)\n  userCountGauge.set(info.statistics.users.total)\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.h3,{id:"service-unavailable-503",children:"Service Unavailable (503)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "error": "SERVICE_UNAVAILABLE",\n  "message": "Platform is temporarily unavailable",\n  "status": {\n    "healthy": false,\n    "services": {\n      "database": "unhealthy",\n      "storage": "healthy",\n      "authentication": "degraded"\n    }\n  },\n  "retryAfter": 60\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"rate-limit-exceeded-429",children:"Rate Limit Exceeded (429)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "error": "RATE_LIMIT_EXCEEDED",\n  "message": "Too many requests",\n  "retryAfter": 60\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"response-fields",children:"Response Fields"}),"\n",(0,s.jsx)(n.h3,{id:"platform-information-1",children:"Platform Information"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"name"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Platform name"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"version"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Current platform version"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"description"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Platform description"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"environment"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Environment (production, staging, development)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"region"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Deployment region"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"status-information",children:"Status Information"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"healthy"})}),(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"Overall platform health"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"uptime"})}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"Uptime in seconds"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"timestamp"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Current server timestamp"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"services"})}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"Individual service health status"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"statistics",children:"Statistics"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"users.total"})}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"Total registered users"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"users.active"})}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"Active users (last 30 days)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"users.verified"})}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"Verified users"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"entities.total"})}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"Total entities"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"opportunities.total"})}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"Total opportunities"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"opportunities.active"})}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"Active opportunities"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"caching",children:"Caching"}),"\n",(0,s.jsx)(n.h3,{id:"response-caching",children:"Response Caching"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cache Duration"}),": 60 seconds"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cache Key"}),": ",(0,s.jsx)(n.code,{children:"platform:info"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Invalidation"}),": On service status change"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"implementation",children:"Implementation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { Redis } from 'ioredis'\n\nconst redis = new Redis(process.env.REDIS_URL)\n\nexport async function getCachedPlatformInfo() {\n  const cacheKey = 'platform:info'\n  \n  // Try to get from cache\n  const cached = await redis.get(cacheKey)\n  if (cached) {\n    return JSON.parse(cached)\n  }\n  \n  // Generate fresh data\n  const info = await generatePlatformInfo()\n  \n  // Cache for 60 seconds\n  await redis.setex(cacheKey, 60, JSON.stringify(info))\n  \n  return info\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,s.jsx)(n.h3,{id:"information-disclosure",children:"Information Disclosure"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Public Data Only"}),": No sensitive information exposed"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Aggregated Statistics"}),": Individual user data not revealed"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rate Limiting"}),": Prevents abuse and DoS attacks"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"No Authentication"}),": Reduces attack surface"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"monitoring",children:"Monitoring"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Access Logging"}),": All requests logged for monitoring"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Anomaly Detection"}),": Unusual request patterns flagged"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance Tracking"}),": Response times monitored"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"related-endpoints",children:"Related Endpoints"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/ring/uk/docs/api/auth-nextauth",children:(0,s.jsx)(n.code,{children:"/api/auth/[...nextauth]"})})," - Authentication status"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/ring/uk/docs/api/profile",children:(0,s.jsx)(n.code,{children:"/api/profile"})})," - User profile information"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/ring/uk/docs/api/entities-list",children:(0,s.jsx)(n.code,{children:"/api/entities"})})," - Entity statistics"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/ring/uk/docs/api/opportunities",children:(0,s.jsx)(n.code,{children:"/api/opportunities"})})," - Opportunity statistics"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,s.jsx)(n.h3,{id:"unit-tests",children:"Unit Tests"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"describe('Platform Info API', () => {\n  test('should return platform information', async () => {\n    const response = await request(app)\n      .get('/api/info')\n      .expect(200)\n    \n    expect(response.body).toHaveProperty('platform')\n    expect(response.body).toHaveProperty('status')\n    expect(response.body).toHaveProperty('statistics')\n    expect(response.body.status).toHaveProperty('healthy')\n  })\n  \n  test('should include all required fields', async () => {\n    const response = await request(app)\n      .get('/api/info')\n      .expect(200)\n    \n    const { body } = response\n    \n    // Platform info\n    expect(body.platform.name).toBe('Ring Platform')\n    expect(body.platform.version).toMatch(/^\\d+\\.\\d+\\.\\d+$/)\n    \n    // Status\n    expect(typeof body.status.healthy).toBe('boolean')\n    expect(typeof body.status.uptime).toBe('number')\n    \n    // Statistics\n    expect(typeof body.statistics.users.total).toBe('number')\n    expect(typeof body.statistics.entities.total).toBe('number')\n  })\n})\n"})}),"\n",(0,s.jsx)(n.h3,{id:"integration-tests",children:"Integration Tests"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"describe('Platform Info Integration', () => {\n  test('should reflect actual system state', async () => {\n    // Create test data\n    await createTestUser()\n    await createTestEntity()\n    \n    const response = await request(app)\n      .get('/api/info')\n      .expect(200)\n    \n    expect(response.body.statistics.users.total).toBeGreaterThan(0)\n    expect(response.body.statistics.entities.total).toBeGreaterThan(0)\n  })\n})\n"})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Issue"}),': "Service unavailable"\n',(0,s.jsx)(n.strong,{children:"Solution"}),": Check individual service health in response"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Issue"}),': "Outdated statistics"\n',(0,s.jsx)(n.strong,{children:"Solution"}),": Statistics are cached for 60 seconds, wait for refresh"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Issue"}),': "Rate limit exceeded"\n',(0,s.jsx)(n.strong,{children:"Solution"}),": Reduce request frequency, current limit is 60/minute"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(96540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);