"use strict";(self.webpackChunkring_docs=self.webpackChunkring_docs||[]).push([[3692],{13714:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"api/wallet/create","title":"Wallet Creation API","description":"Overview","source":"@site/docs/uk/api/wallet/create.md","sourceDirName":"api/wallet","slug":"/api/wallet/create","permalink":"/ring/uk/api/wallet/create","draft":false,"unlisted":false,"editUrl":"https://github.com/connectplatform/ring/ring-docs/tree/main/docs/uk/api/wallet/create.md","tags":[],"version":"current","lastUpdatedAt":1750331037000,"frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"List User Wallets API","permalink":"/ring/uk/api/wallet/list"},"next":{"title":"Set Primary Wallet API","permalink":"/ring/uk/api/wallet/set-primary"}}');var s=r(74848),t=r(28453);const a={},i="Wallet Creation API",o={},c=[{value:"Overview",id:"overview",level:2},{value:"Endpoint",id:"endpoint",level:2},{value:"Request",id:"request",level:2},{value:"Response",id:"response",level:2},{value:"Errors",id:"errors",level:2},{value:"Example",id:"example",level:2},{value:"Endpoint Details",id:"endpoint-details",level:2},{value:"Authentication Requirements",id:"authentication-requirements",level:2},{value:"Request Format",id:"request-format",level:2},{value:"Headers",id:"headers",level:3},{value:"Request Body Schema",id:"request-body-schema",level:3},{value:"Example Request Body",id:"example-request-body",level:3},{value:"Response Format",id:"response-format",level:2},{value:"Success Response (200 OK)",id:"success-response-200-ok",level:3},{value:"Error Responses",id:"error-responses",level:2},{value:"401 Unauthorized",id:"401-unauthorized",level:3},{value:"403 Forbidden",id:"403-forbidden",level:3},{value:"500 Internal Server Error",id:"500-internal-server-error",level:3},{value:"Code Examples",id:"code-examples",level:2},{value:"JavaScript/TypeScript",id:"javascripttypescript",level:3},{value:"React Hook Example",id:"react-hook-example",level:3},{value:"cURL Example",id:"curl-example",level:3},{value:"Python Example",id:"python-example",level:3},{value:"Response Schema",id:"response-schema",level:2},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Business Logic",id:"business-logic",level:2},{value:"Validation Rules",id:"validation-rules",level:2},{value:"Optional Fields",id:"optional-fields",level:3},{value:"Automatic Validation",id:"automatic-validation",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Common Error Scenarios",id:"common-error-scenarios",level:3},{value:"Testing Examples",id:"testing-examples",level:2},{value:"Unit Test Example",id:"unit-test-example",level:3},{value:"Related Endpoints",id:"related-endpoints",level:2},{value:"Changelog",id:"changelog",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"wallet-creation-api",children:"Wallet Creation API"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"Create new cryptocurrency wallets for authenticated users."}),"\n",(0,s.jsx)(n.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"URL"}),": ",(0,s.jsx)(n.code,{children:"/api/wallet/create"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Method"}),": ",(0,s.jsx)(n.code,{children:"POST"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Auth"}),": Required (SUBSCRIBER+ role)"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"request",children:"Request"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "label": "My Wallet"  // Optional\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"response",children:"Response"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "wallet": {\n    "id": "wallet_123",\n    "address": "0x742d35Cc...",\n    "label": "My Wallet",\n    "balance": "0",\n    "isActive": true\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"errors",children:"Errors"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"401"})," - Unauthorized"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"403"})," - Insufficient permissions (VISITOR role)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"500"})," - Server error"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const response = await fetch('/api/wallet/create', {\n  method: 'POST',\n  headers: {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({ label: 'My Wallet' })\n});\n\nconst { wallet } = await response.json();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"endpoint-details",children:"Endpoint Details"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"URL"}),": ",(0,s.jsx)(n.code,{children:"/api/wallet/create"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Method"}),": ",(0,s.jsx)(n.code,{children:"POST"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Authentication"}),": Required (JWT Token)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rate Limit"}),": 10 requests per minute"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Content-Type"}),": ",(0,s.jsx)(n.code,{children:"application/json"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"authentication-requirements",children:"Authentication Requirements"}),"\n",(0,s.jsx)(n.p,{children:"This endpoint requires authentication with minimum role:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SUBSCRIBER"})," - Can create basic wallets"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MEMBER"})," - Can create standard wallets"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"CONFIDENTIAL"})," - Can create advanced wallets"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ADMIN"})," - Full wallet creation access"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),": VISITOR role cannot create wallets."]}),"\n",(0,s.jsx)(n.h2,{id:"request-format",children:"Request Format"}),"\n",(0,s.jsx)(n.h3,{id:"headers",children:"Headers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"POST /api/wallet/create\nContent-Type: application/json\nAuthorization: Bearer <jwt_token>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"request-body-schema",children:"Request Body Schema"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface CreateWalletRequest {\n  label?: string;  // Optional wallet label/name\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"example-request-body",children:"Example Request Body"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "label": "My Primary Wallet"\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"response-format",children:"Response Format"}),"\n",(0,s.jsx)(n.h3,{id:"success-response-200-ok",children:"Success Response (200 OK)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "wallet": {\n    "id": "wallet_123456789",\n    "address": "0x742d35Cc6634C0532925a3b8D4C2C4e4C4C4C4C4",\n    "label": "My Primary Wallet",\n    "balance": "0",\n    "currency": "ETH",\n    "network": "ethereum",\n    "isActive": true,\n    "isPrimary": false,\n    "createdAt": "2025-01-14T17:30:00Z",\n    "updatedAt": "2025-01-14T17:30:00Z",\n    "userId": "user_987654321"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"error-responses",children:"Error Responses"}),"\n",(0,s.jsx)(n.h3,{id:"401-unauthorized",children:"401 Unauthorized"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Unauthorized"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"403-forbidden",children:"403 Forbidden"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Forbidden: Insufficient permissions"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"500-internal-server-error",children:"500 Internal Server Error"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Failed to create wallet"\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Server configuration error"\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,s.jsx)(n.h3,{id:"javascripttypescript",children:"JavaScript/TypeScript"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"async function createWallet(label?: string): Promise<Wallet> {\n  const response = await fetch('/api/wallet/create', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({ label })\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to create wallet');\n  }\n\n  const result = await response.json();\n  return result.wallet;\n}\n\n// Usage examples\nconst wallet1 = await createWallet('My Trading Wallet');\nconst wallet2 = await createWallet(); // No label\n"})}),"\n",(0,s.jsx)(n.h3,{id:"react-hook-example",children:"React Hook Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { useState } from 'react';\n\nfunction useCreateWallet() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const createWallet = async (label?: string) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('/api/wallet/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ label }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error);\n      }\n\n      const result = await response.json();\n      return result.wallet;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { createWallet, loading, error };\n}\n\n// Usage in component\nfunction WalletCreator() {\n  const { createWallet, loading, error } = useCreateWallet();\n  const [label, setLabel] = useState('');\n\n  const handleCreate = async () => {\n    try {\n      const newWallet = await createWallet(label);\n      console.log('Wallet created:', newWallet);\n    } catch (error) {\n      console.error('Failed to create wallet:', error);\n    }\n  };\n\n  return (\n    <div>\n      <input \n        value={label} \n        onChange={(e) => setLabel(e.target.value)}\n        placeholder=\"Wallet label (optional)\"\n      />\n      <button onClick={handleCreate} disabled={loading}>\n        {loading ? 'Creating...' : 'Create Wallet'}\n      </button>\n      {error && <div>Error: {error}</div>}\n    </div>\n  );\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"curl-example",children:"cURL Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Create wallet with label\ncurl -X POST https://ring.ck.ua/api/wallet/create \\\n  -H "Content-Type: application/json" \\\n  -H "Authorization: Bearer YOUR_JWT_TOKEN" \\\n  -d \'{\n    "label": "My Primary Wallet"\n  }\'\n\n# Create wallet without label\ncurl -X POST https://ring.ck.ua/api/wallet/create \\\n  -H "Content-Type: application/json" \\\n  -H "Authorization: Bearer YOUR_JWT_TOKEN" \\\n  -d \'{}\'\n'})}),"\n",(0,s.jsx)(n.h3,{id:"python-example",children:"Python Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests\n\ndef create_wallet(token: str, label: str = None) -> dict:\n    """Create a new wallet"""\n    url = "https://ring.ck.ua/api/wallet/create"\n    headers = {\n        "Content-Type": "application/json",\n        "Authorization": f"Bearer {token}"\n    }\n    \n    data = {}\n    if label:\n        data["label"] = label\n    \n    response = requests.post(url, headers=headers, json=data)\n    \n    if response.status_code == 200:\n        return response.json()["wallet"]\n    elif response.status_code == 401:\n        raise PermissionError("Unauthorized")\n    elif response.status_code == 403:\n        raise PermissionError("Insufficient permissions")\n    else:\n        response.raise_for_status()\n\n# Usage\ntry:\n    wallet = create_wallet("your_jwt_token", "My Trading Wallet")\n    print(f"Created wallet: {wallet[\'address\']}")\nexcept Exception as e:\n    print(f"Error: {e}")\n'})}),"\n",(0,s.jsx)(n.h2,{id:"response-schema",children:"Response Schema"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'interface Wallet {\n  id: string;                     // Unique wallet identifier\n  address: string;                // Blockchain wallet address\n  label?: string;                 // User-defined wallet label\n  balance: string;                // Current balance (as string for precision)\n  currency: string;               // Currency type (e.g., "ETH", "BTC")\n  network: string;                // Blockchain network\n  isActive: boolean;              // Whether wallet is active\n  isPrimary: boolean;             // Whether this is the primary wallet\n  createdAt: string;              // Creation timestamp (ISO 8601)\n  updatedAt: string;              // Last update timestamp (ISO 8601)\n  userId: string;                 // ID of wallet owner\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Role-Based Access"}),": Only authenticated users with appropriate roles can create wallets"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Encryption"}),": All wallet private keys are encrypted using server-side encryption"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rate Limiting"}),": Prevents abuse with 10 requests per minute limit"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Audit Logging"}),": All wallet creation events are logged for security monitoring"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Key Management"}),": Private keys are never exposed in API responses"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"business-logic",children:"Business Logic"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Automatic Fields"}),": ",(0,s.jsx)(n.code,{children:"id"}),", ",(0,s.jsx)(n.code,{children:"address"}),", ",(0,s.jsx)(n.code,{children:"balance"}),", ",(0,s.jsx)(n.code,{children:"isActive"}),", ",(0,s.jsx)(n.code,{children:"isPrimary"}),", ",(0,s.jsx)(n.code,{children:"createdAt"}),", ",(0,s.jsx)(n.code,{children:"updatedAt"}),", and ",(0,s.jsx)(n.code,{children:"userId"})," are automatically generated"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Address Generation"}),": Secure blockchain address generation using cryptographic libraries"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Default Settings"}),": New wallets start with zero balance and inactive primary status"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Label Validation"}),": Optional labels are validated for length and content"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"User Association"}),": Wallets are automatically associated with the authenticated user"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"validation-rules",children:"Validation Rules"}),"\n",(0,s.jsx)(n.h3,{id:"optional-fields",children:"Optional Fields"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"label"}),": Maximum 50 characters, alphanumeric and spaces allowed"]}),"\n",(0,s.jsx)(n.li,{children:"No special characters except hyphens and underscores"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"automatic-validation",children:"Automatic Validation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"User must be authenticated"}),"\n",(0,s.jsx)(n.li,{children:"User role must be SUBSCRIBER or higher"}),"\n",(0,s.jsx)(n.li,{children:"Server encryption key must be configured"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.h3,{id:"common-error-scenarios",children:"Common Error Scenarios"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Unauthenticated User"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Status: 401"}),"\n",(0,s.jsx)(n.li,{children:'Message: "Unauthorized"'}),"\n",(0,s.jsx)(n.li,{children:"Solution: Ensure valid JWT token is provided"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Insufficient Permissions"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Status: 403"}),"\n",(0,s.jsx)(n.li,{children:'Message: "Forbidden: Insufficient permissions"'}),"\n",(0,s.jsx)(n.li,{children:"Solution: User needs minimum SUBSCRIBER role"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Server Configuration Error"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Status: 500"}),"\n",(0,s.jsx)(n.li,{children:'Message: "Server configuration error"'}),"\n",(0,s.jsx)(n.li,{children:"Solution: Contact system administrator"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"General Creation Failure"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Status: 500"}),"\n",(0,s.jsx)(n.li,{children:'Message: "Failed to create wallet"'}),"\n",(0,s.jsx)(n.li,{children:"Solution: Retry request or contact support"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"testing-examples",children:"Testing Examples"}),"\n",(0,s.jsx)(n.h3,{id:"unit-test-example",children:"Unit Test Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"describe('POST /api/wallet/create', () => {\n  it('should create wallet successfully with label', async () => {\n    const response = await request(app)\n      .post('/api/wallet/create')\n      .set('Authorization', `Bearer ${validToken}`)\n      .send({ label: 'Test Wallet' })\n      .expect(200);\n\n    expect(response.body).toHaveProperty('wallet');\n    expect(response.body.wallet).toHaveProperty('id');\n    expect(response.body.wallet).toHaveProperty('address');\n    expect(response.body.wallet.label).toBe('Test Wallet');\n  });\n\n  it('should create wallet without label', async () => {\n    const response = await request(app)\n      .post('/api/wallet/create')\n      .set('Authorization', `Bearer ${validToken}`)\n      .send({})\n      .expect(200);\n\n    expect(response.body.wallet.label).toBeUndefined();\n  });\n\n  it('should return 401 for unauthenticated requests', async () => {\n    const response = await request(app)\n      .post('/api/wallet/create')\n      .send({ label: 'Test' })\n      .expect(401);\n\n    expect(response.body.error).toBe('Unauthorized');\n  });\n\n  it('should return 403 for visitor role', async () => {\n    const response = await request(app)\n      .post('/api/wallet/create')\n      .set('Authorization', `Bearer ${visitorToken}`)\n      .send({})\n      .expect(403);\n\n    expect(response.body.error).toContain('Insufficient permissions');\n  });\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"related-endpoints",children:"Related Endpoints"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/wallet/list",children:"List Wallets"})," - Get user's wallets"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/wallet/balance",children:"Wallet Balance"})," - Check wallet balance"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/wallet/transfer",children:"Wallet Transfer"})," - Send transactions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/wallet/set-primary",children:"Set Primary Wallet"})," - Set primary wallet"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/wallet/transaction-history",children:"Transaction History"})," - Transaction history"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"changelog",children:"Changelog"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"v1.0.0"})," - Initial implementation with basic wallet creation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"v1.1.0"})," - Added label support and enhanced validation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"v1.2.0"})," - Improved error handling and security"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"v1.3.0"})," - Added role-based access control"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"v1.4.0"})," - Enhanced encryption and key management"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var l=r(96540);const s={},t=l.createContext(s);function a(e){const n=l.useContext(t);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);