"use strict";(self.webpackChunkring_docs=self.webpackChunkring_docs||[]).push([[6816],{820:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"api/entities/list","title":"List Entities","description":"Overview","source":"@site/docs/en/api/entities/list.md","sourceDirName":"api/entities","slug":"/api/entities/list","permalink":"/ring/docs/api/entities/list","draft":false,"unlisted":false,"editUrl":"https://github.com/connectplatform/ring/ring-docs/tree/main/docs/en/api/entities/list.md","tags":[],"version":"current","lastUpdatedAt":1750331037000,"frontMatter":{"title":"List Entities"},"sidebar":"apiSidebar","previous":{"title":"User Settings Management","permalink":"/ring/docs/api/settings"},"next":{"title":"Create Entity","permalink":"/ring/docs/api/entities/create"}}');var s=t(74848),r=t(28453);const a={title:"List Entities"},o="Entities List API",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Endpoint Details",id:"endpoint-details",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Query Parameters",id:"query-parameters",level:2},{value:"Example Requests",id:"example-requests",level:3},{value:"Response Format",id:"response-format",level:2},{value:"Success Response (200)",id:"success-response-200",level:3},{value:"Empty Response (200)",id:"empty-response-200",level:3},{value:"Error Responses",id:"error-responses",level:3},{value:"Unauthorized (401)",id:"unauthorized-401",level:4},{value:"Forbidden (403)",id:"forbidden-403",level:4},{value:"Internal Server Error (500)",id:"internal-server-error-500",level:4},{value:"Implementation Examples",id:"implementation-examples",level:2},{value:"React Component with Pagination",id:"react-component-with-pagination",level:3},{value:"Custom Hook for Entity Management",id:"custom-hook-for-entity-management",level:3},{value:"Server-Side Rendering (Next.js)",id:"server-side-rendering-nextjs",level:3},{value:"cURL Example",id:"curl-example",level:3},{value:"Business Logic",id:"business-logic",level:2},{value:"Access Control",id:"access-control",level:2},{value:"Visibility Levels",id:"visibility-levels",level:3},{value:"Role-Based Access",id:"role-based-access",level:3},{value:"Performance Optimizations",id:"performance-optimizations",level:2},{value:"Rate Limiting",id:"rate-limiting",level:2},{value:"Database Query Optimization",id:"database-query-optimization",level:2},{value:"Testing",id:"testing",level:2},{value:"Unit Test Example",id:"unit-test-example",level:3},{value:"Related Endpoints",id:"related-endpoints",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"entities-list-api",children:"Entities List API"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"Entities List API"})," allows authenticated users to retrieve a paginated list of entities (organizations and companies) from the Ring Platform. This endpoint supports filtering based on user access levels and provides comprehensive entity information including company details, social links, and visibility settings."]}),"\n",(0,s.jsx)(n.h2,{id:"endpoint-details",children:"Endpoint Details"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"URL"}),": ",(0,s.jsx)(n.code,{children:"/api/entities"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Method"}),": ",(0,s.jsx)(n.code,{children:"GET"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Authentication"}),": Required (NextAuth.js session)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Content-Type"}),": ",(0,s.jsx)(n.code,{children:"application/json"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,s.jsx)(n.p,{children:"This endpoint requires user authentication via NextAuth.js session:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import { getSession } from 'next-auth/react'\n\nconst session = await getSession()\nif (!session) {\n  // Handle unauthenticated state\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"query-parameters",children:"Query Parameters"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"limit"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Number of entities to return (default: 20, max: 100)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"startAfter"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Cursor for pagination - entity ID to start after"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"example-requests",children:"Example Requests"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Get first 20 entities\nGET /api/entities\n\n// Get next 10 entities after a specific entity\nGET /api/entities?limit=10&startAfter=entity123\n\n// Get maximum entities per page\nGET /api/entities?limit=100\n"})}),"\n",(0,s.jsx)(n.h2,{id:"response-format",children:"Response Format"}),"\n",(0,s.jsx)(n.h3,{id:"success-response-200",children:"Success Response (200)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "entities": [\n    {\n      "id": "entity123",\n      "name": "TechCorp AI Solutions",\n      "description": "Leading AI and machine learning solutions provider",\n      "industry": "ai-ml",\n      "founded": 2020,\n      "employeeCount": "50-100",\n      "website": "https://techcorp.ai",\n      "location": {\n        "city": "San Francisco",\n        "country": "USA",\n        "timezone": "America/Los_Angeles"\n      },\n      "socialLinks": {\n        "linkedin": "https://linkedin.com/company/techcorp-ai",\n        "twitter": "https://twitter.com/techcorp_ai",\n        "facebook": null,\n        "instagram": null\n      },\n      "visibility": "public",\n      "certifications": [\n        "ISO 27001",\n        "SOC 2 Type II"\n      ],\n      "partnerships": [\n        "Google Cloud Partner",\n        "AWS Advanced Partner"\n      ],\n      "upcomingEvents": [\n        {\n          "title": "AI Innovation Summit 2024",\n          "date": "2024-03-15T09:00:00Z",\n          "location": "San Francisco, CA"\n        }\n      ],\n      "logo": "https://storage.googleapis.com/ring-platform/logos/entity123.png",\n      "banner": "https://storage.googleapis.com/ring-platform/banners/entity123.jpg",\n      "verified": true,\n      "memberCount": 245,\n      "opportunityCount": 12,\n      "createdAt": "2024-01-15T10:30:00Z",\n      "updatedAt": "2024-01-15T14:22:00Z"\n    }\n  ],\n  "lastVisible": "entity123",\n  "hasMore": true,\n  "totalCount": 1247\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"empty-response-200",children:"Empty Response (200)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "entities": [],\n  "lastVisible": null,\n  "hasMore": false,\n  "totalCount": 0\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"error-responses",children:"Error Responses"}),"\n",(0,s.jsx)(n.h4,{id:"unauthorized-401",children:"Unauthorized (401)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Unauthorized"\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"forbidden-403",children:"Forbidden (403)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Permission denied to access entities"\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"internal-server-error-500",children:"Internal Server Error (500)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Internal Server Error"\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"implementation-examples",children:"Implementation Examples"}),"\n",(0,s.jsx)(n.h3,{id:"react-component-with-pagination",children:"React Component with Pagination"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { useState, useEffect, useCallback } from \'react\'\nimport { useSession } from \'next-auth/react\'\n\ninterface Entity {\n  id: string\n  name: string\n  description: string\n  industry: string\n  website: string\n  logo: string\n  verified: boolean\n  memberCount: number\n  opportunityCount: number\n}\n\ninterface EntitiesResponse {\n  entities: Entity[]\n  lastVisible: string | null\n  hasMore: boolean\n  totalCount: number\n}\n\nfunction EntitiesList() {\n  const { data: session } = useSession()\n  const [entities, setEntities] = useState<Entity[]>([])\n  const [loading, setLoading] = useState(true)\n  const [loadingMore, setLoadingMore] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [lastVisible, setLastVisible] = useState<string | null>(null)\n  const [hasMore, setHasMore] = useState(true)\n\n  const fetchEntities = useCallback(async (reset = false) => {\n    if (!session) return\n\n    if (reset) {\n      setLoading(true)\n      setEntities([])\n      setLastVisible(null)\n    } else {\n      setLoadingMore(true)\n    }\n\n    setError(null)\n\n    try {\n      const params = new URLSearchParams({\n        limit: \'20\'\n      })\n\n      if (!reset && lastVisible) {\n        params.append(\'startAfter\', lastVisible)\n      }\n\n      const response = await fetch(`/api/entities?${params}`)\n      \n      if (!response.ok) {\n        const errorData = await response.json()\n        throw new Error(errorData.error || \'Failed to fetch entities\')\n      }\n\n      const data: EntitiesResponse = await response.json()\n\n      if (reset) {\n        setEntities(data.entities)\n      } else {\n        setEntities(prev => [...prev, ...data.entities])\n      }\n\n      setLastVisible(data.lastVisible)\n      setHasMore(data.hasMore)\n\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \'Unknown error occurred\')\n    } finally {\n      setLoading(false)\n      setLoadingMore(false)\n    }\n  }, [session, lastVisible])\n\n  useEffect(() => {\n    fetchEntities(true)\n  }, [session])\n\n  const handleLoadMore = () => {\n    if (!loadingMore && hasMore) {\n      fetchEntities(false)\n    }\n  }\n\n  if (loading) {\n    return <div className="flex justify-center p-8">Loading entities...</div>\n  }\n\n  if (error) {\n    return (\n      <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">\n        Error: {error}\n      </div>\n    )\n  }\n\n  return (\n    <div className="space-y-6">\n      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">\n        {entities.map((entity) => (\n          <div key={entity.id} className="bg-white border rounded-lg shadow-sm p-6">\n            <div className="flex items-start space-x-4">\n              {entity.logo && (\n                <img\n                  src={entity.logo}\n                  alt={`${entity.name} logo`}\n                  className="w-12 h-12 rounded-lg object-cover"\n                />\n              )}\n              <div className="flex-1 min-w-0">\n                <div className="flex items-center space-x-2">\n                  <h3 className="text-lg font-semibold text-gray-900 truncate">\n                    {entity.name}\n                  </h3>\n                  {entity.verified && (\n                    <span className="flex-shrink-0 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800">\n                      Verified\n                    </span>\n                  )}\n                </div>\n                <p className="text-sm text-gray-500 mt-1 line-clamp-2">\n                  {entity.description}\n                </p>\n                <div className="flex items-center justify-between mt-4 text-sm text-gray-500">\n                  <span>{entity.memberCount} members</span>\n                  <span>{entity.opportunityCount} opportunities</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {hasMore && (\n        <div className="flex justify-center">\n          <button\n            onClick={handleLoadMore}\n            disabled={loadingMore}\n            className="px-6 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:opacity-50"\n          >\n            {loadingMore ? \'Loading...\' : \'Load More\'}\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"custom-hook-for-entity-management",children:"Custom Hook for Entity Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { useState, useEffect, useCallback } from 'react'\nimport { useSession } from 'next-auth/react'\n\nexport function useEntities(initialLimit = 20) {\n  const { data: session } = useSession()\n  const [entities, setEntities] = useState<Entity[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [lastVisible, setLastVisible] = useState<string | null>(null)\n  const [hasMore, setHasMore] = useState(true)\n  const [totalCount, setTotalCount] = useState(0)\n\n  const fetchEntities = useCallback(async (reset = false) => {\n    if (!session) return\n\n    try {\n      const params = new URLSearchParams({\n        limit: initialLimit.toString()\n      })\n\n      if (!reset && lastVisible) {\n        params.append('startAfter', lastVisible)\n      }\n\n      const response = await fetch(`/api/entities?${params}`)\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch entities')\n      }\n\n      const data: EntitiesResponse = await response.json()\n\n      if (reset) {\n        setEntities(data.entities)\n      } else {\n        setEntities(prev => [...prev, ...data.entities])\n      }\n\n      setLastVisible(data.lastVisible)\n      setHasMore(data.hasMore)\n      setTotalCount(data.totalCount)\n\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error')\n    } finally {\n      setLoading(false)\n    }\n  }, [session, initialLimit, lastVisible])\n\n  const loadMore = useCallback(() => {\n    if (hasMore && !loading) {\n      fetchEntities(false)\n    }\n  }, [hasMore, loading, fetchEntities])\n\n  const refresh = useCallback(() => {\n    setLoading(true)\n    setError(null)\n    setLastVisible(null)\n    fetchEntities(true)\n  }, [fetchEntities])\n\n  useEffect(() => {\n    fetchEntities(true)\n  }, [session])\n\n  return {\n    entities,\n    loading,\n    error,\n    hasMore,\n    totalCount,\n    loadMore,\n    refresh\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"server-side-rendering-nextjs",children:"Server-Side Rendering (Next.js)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { GetServerSideProps } from 'next'\nimport { getServerAuthSession } from '@/auth'\n\ninterface EntitiesPageProps {\n  initialEntities: Entity[]\n  initialLastVisible: string | null\n  initialHasMore: boolean\n  totalCount: number\n}\n\nexport default function EntitiesPage({ \n  initialEntities, \n  initialLastVisible, \n  initialHasMore,\n  totalCount \n}: EntitiesPageProps) {\n  const [entities, setEntities] = useState(initialEntities)\n  const [lastVisible, setLastVisible] = useState(initialLastVisible)\n  const [hasMore, setHasMore] = useState(initialHasMore)\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"flex items-center justify-between mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">\n          Entities Directory\n        </h1>\n        <span className=\"text-sm text-gray-500\">\n          {totalCount.toLocaleString()} total entities\n        </span>\n      </div>\n\n      <EntitiesList \n        entities={entities}\n        lastVisible={lastVisible}\n        hasMore={hasMore}\n        onUpdate={setEntities}\n      />\n    </div>\n  )\n}\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  const session = await getServerAuthSession(context)\n  \n  if (!session) {\n    return {\n      redirect: {\n        destination: '/auth/signin',\n        permanent: false,\n      },\n    }\n  }\n\n  try {\n    // Fetch initial entities server-side\n    const response = await fetch(`${process.env.NEXTAUTH_URL}/api/entities?limit=20`, {\n      headers: {\n        'Cookie': context.req.headers.cookie || '',\n      },\n    })\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch entities')\n    }\n\n    const data = await response.json()\n\n    return {\n      props: {\n        initialEntities: data.entities,\n        initialLastVisible: data.lastVisible,\n        initialHasMore: data.hasMore,\n        totalCount: data.totalCount\n      },\n    }\n  } catch (error) {\n    return {\n      props: {\n        initialEntities: [],\n        initialLastVisible: null,\n        initialHasMore: false,\n        totalCount: 0\n      },\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"curl-example",children:"cURL Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Get first page of entities\ncurl -X GET https://ring.ck.ua/api/entities \\\n  -H "Cookie: next-auth.session-token=your-session-token"\n\n# Get specific number of entities\ncurl -X GET "https://ring.ck.ua/api/entities?limit=50" \\\n  -H "Cookie: next-auth.session-token=your-session-token"\n\n# Get next page of entities\ncurl -X GET "https://ring.ck.ua/api/entities?limit=20&startAfter=entity123" \\\n  -H "Cookie: next-auth.session-token=your-session-token"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"business-logic",children:"Business Logic"}),"\n",(0,s.jsx)(n.p,{children:"The endpoint performs the following operations:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Authentication Check"}),": Verifies user session and extracts user role"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Role-Based Filtering"}),": Applies visibility filters based on user access level"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pagination Setup"}),": Configures limit and cursor-based pagination"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Database Query"}),": Fetches entities from Firestore with proper ordering"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Response Formatting"}),": Returns entities with pagination metadata"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"access-control",children:"Access Control"}),"\n",(0,s.jsx)(n.h3,{id:"visibility-levels",children:"Visibility Levels"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Public"}),": Available to all authenticated users"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Subscriber"}),": Available to subscribers and above"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Member"}),": Available to members and above"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Confidential"}),": Available to confidential level and above"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"role-based-access",children:"Role-Based Access"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const getVisibilityFilter = (userRole: UserRole) => {\n  switch (userRole) {\n    case UserRole.ADMIN:\n    case UserRole.CONFIDENTIAL:\n      return ['public', 'subscriber', 'member', 'confidential']\n    case UserRole.MEMBER:\n      return ['public', 'subscriber', 'member']\n    case UserRole.SUBSCRIBER:\n      return ['public', 'subscriber']\n    default:\n      return ['public']\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"performance-optimizations",children:"Performance Optimizations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Firestore Indexing"}),": Entities are indexed by visibility and creation date"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pagination"}),": Cursor-based pagination for efficient large dataset handling"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Caching"}),": Response caching with appropriate cache headers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Field Selection"}),": Only necessary fields are returned to minimize bandwidth"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"User-based"}),": 60 requests per minute per authenticated user"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Global"}),": 1000 requests per minute across all users"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"database-query-optimization",children:"Database Query Optimization"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Optimized Firestore query\nconst entitiesQuery = db\n  .collection('entities')\n  .where('visibility', 'in', visibilityLevels)\n  .orderBy('createdAt', 'desc')\n  .limit(limit)\n\nif (startAfter) {\n  const startDoc = await db.collection('entities').doc(startAfter).get()\n  entitiesQuery = entitiesQuery.startAfter(startDoc)\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,s.jsx)(n.h3,{id:"unit-test-example",children:"Unit Test Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { GET } from '@/app/api/entities/route'\nimport { NextRequest } from 'next/server'\n\njest.mock('@/auth')\njest.mock('@/services/entities/get-entities')\n\ndescribe('/api/entities', () => {\n  it('should return entities successfully', async () => {\n    (getServerAuthSession as jest.Mock).mockResolvedValue({\n      user: { id: 'user123', role: 'member' }\n    })\n\n    const mockEntities = [\n      { id: 'entity1', name: 'Test Entity 1', visibility: 'public' },\n      { id: 'entity2', name: 'Test Entity 2', visibility: 'member' }\n    ]\n\n    (getEntities as jest.Mock).mockResolvedValue({\n      entities: mockEntities,\n      lastVisible: 'entity2'\n    })\n\n    const request = new NextRequest('http://localhost:3000/api/entities')\n    const response = await GET(request)\n    const data = await response.json()\n\n    expect(response.status).toBe(200)\n    expect(data.entities).toHaveLength(2)\n    expect(data.lastVisible).toBe('entity2')\n  })\n\n  it('should handle pagination correctly', async () => {\n    const request = new NextRequest('http://localhost:3000/api/entities?limit=10&startAfter=entity123')\n    const response = await GET(request)\n\n    expect(getEntities).toHaveBeenCalledWith(10, 'entity123')\n  })\n})\n"})}),"\n",(0,s.jsx)(n.h2,{id:"related-endpoints",children:"Related Endpoints"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/entities/create",children:(0,s.jsx)(n.code,{children:"POST /api/entities/create"})})," - Create new entity"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/entities/get-by-id",children:(0,s.jsx)(n.code,{children:"GET /api/entities/[id]"})})," - Get specific entity details"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/entities/update",children:(0,s.jsx)(n.code,{children:"PUT /api/entities/update/[id]"})})," - Update entity information"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/entities/delete",children:(0,s.jsx)(n.code,{children:"DELETE /api/entities/delete/[id]"})})," - Delete entity"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/entities/get-confidential",children:(0,s.jsx)(n.code,{children:"GET /api/confidential/entities"})})," - Get confidential entities"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(96540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);