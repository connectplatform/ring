"use strict";(self.webpackChunkring_docs=self.webpackChunkring_docs||[]).push([[49],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(96540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}},67040:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"api/opportunities/delete","title":"Opportunities Delete API","description":"Overview","source":"@site/docs/ru/api/opportunities/delete.md","sourceDirName":"api/opportunities","slug":"/api/opportunities/delete","permalink":"/ring/ru/api/opportunities/delete","draft":false,"unlisted":false,"editUrl":"https://github.com/connectplatform/ring/ring-docs/tree/main/docs/ru/api/opportunities/delete.md","tags":[],"version":"current","lastUpdatedAt":1750331037000,"frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"Opportunities Update API","permalink":"/ring/ru/api/opportunities/update"},"next":{"title":"Opportunities Upload API","permalink":"/ring/ru/api/opportunities/upload"}}');var r=t(74848),s=t(28453);const o={},l="Opportunities Delete API",a={},d=[{value:"Overview",id:"overview",level:2},{value:"Endpoint Details",id:"endpoint-details",level:2},{value:"Ring Platform Opportunity Deletion",id:"ring-platform-opportunity-deletion",level:2},{value:"Deletion Permissions",id:"deletion-permissions",level:3},{value:"<strong>Permission Levels</strong>",id:"permission-levels",level:4},{value:"<strong>Confidential Opportunity Rules</strong>",id:"confidential-opportunity-rules",level:4},{value:"<strong>Deletion Safeguards</strong>",id:"deletion-safeguards",level:4},{value:"Request Format",id:"request-format",level:2},{value:"URL Parameters",id:"url-parameters",level:3},{value:"Headers",id:"headers",level:3},{value:"Query Parameters",id:"query-parameters",level:3},{value:"Response Format",id:"response-format",level:2},{value:"Success Response (200 OK)",id:"success-response-200-ok",level:3},{value:"Error Responses",id:"error-responses",level:3},{value:"Unauthorized (401)",id:"unauthorized-401",level:4},{value:"Forbidden (403)",id:"forbidden-403",level:4},{value:"Not Found (404)",id:"not-found-404",level:4},{value:"Permission Denied (403)",id:"permission-denied-403",level:4},{value:"Code Examples",id:"code-examples",level:2},{value:"JavaScript/TypeScript",id:"javascripttypescript",level:3},{value:"React Hook for Opportunity Deletion",id:"react-hook-for-opportunity-deletion",level:3},{value:"cURL Example",id:"curl-example",level:3},{value:"Python Example",id:"python-example",level:3},{value:"Deletion Types",id:"deletion-types",level:2},{value:"Soft Deletion (Default)",id:"soft-deletion-default",level:3},{value:"Permanent Deletion",id:"permanent-deletion",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Permission Validation",id:"permission-validation",level:3},{value:"Audit and Compliance",id:"audit-and-compliance",level:3},{value:"Data Protection",id:"data-protection",level:3},{value:"Related Endpoints",id:"related-endpoints",level:2},{value:"Changelog",id:"changelog",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"opportunities-delete-api",children:"Opportunities Delete API"})}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The Opportunities Delete API allows authenticated users to permanently remove opportunities from the Ring Platform. This endpoint implements secure deletion with proper authorization checks and audit logging."}),"\n",(0,r.jsx)(n.h2,{id:"endpoint-details",children:"Endpoint Details"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"URL"}),": ",(0,r.jsx)(n.code,{children:"/api/opportunities/delete/[id]"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Method"}),": ",(0,r.jsx)(n.code,{children:"DELETE"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authentication"}),": Required (Bearer token or session)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authorization"}),": Owner, Admin, or Entity Admin only"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rate Limit"}),": 30 requests per minute per user"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Audit Logging"}),": All deletions are logged for compliance"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"ring-platform-opportunity-deletion",children:"Ring Platform Opportunity Deletion"}),"\n",(0,r.jsx)(n.h3,{id:"deletion-permissions",children:"Deletion Permissions"}),"\n",(0,r.jsx)(n.p,{children:"Ring Platform implements strict permission controls for opportunity deletion:"}),"\n",(0,r.jsx)(n.h4,{id:"permission-levels",children:(0,r.jsx)(n.strong,{children:"Permission Levels"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Owner"}),": User who created the opportunity (full delete access)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Entity Admin"}),": Admin of the entity that owns the opportunity"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Platform Admin"}),": System administrators (full access)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Entity Member"}),": Cannot delete opportunities (read/update only)"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"confidential-opportunity-rules",children:(0,r.jsx)(n.strong,{children:"Confidential Opportunity Rules"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Only ",(0,r.jsx)(n.strong,{children:"CONFIDENTIAL"})," users can delete confidential opportunities"]}),"\n",(0,r.jsx)(n.li,{children:"Enhanced audit logging for confidential opportunity deletions"}),"\n",(0,r.jsx)(n.li,{children:"Additional security validations and approval workflows"}),"\n",(0,r.jsx)(n.li,{children:"Permanent deletion with secure data wiping"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"deletion-safeguards",children:(0,r.jsx)(n.strong,{children:"Deletion Safeguards"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Soft Delete Option"}),": Mark as deleted without permanent removal"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cascade Handling"}),": Related applications and saves are handled appropriately"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Audit Trail"}),": Complete deletion history maintained"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Recovery Window"}),": Optional recovery period for accidental deletions"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"request-format",children:"Request Format"}),"\n",(0,r.jsx)(n.h3,{id:"url-parameters",children:"URL Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"id"})," (required): Unique identifier of the opportunity to delete"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"headers",children:"Headers"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-http",children:"DELETE /api/opportunities/delete/[id]\nAuthorization: Bearer <token>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"query-parameters",children:"Query Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"permanent"})," (optional): Set to ",(0,r.jsx)(n.code,{children:"true"})," for immediate permanent deletion"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"reason"})," (optional): Reason for deletion (for audit purposes)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"response-format",children:"Response Format"}),"\n",(0,r.jsx)(n.h3,{id:"success-response-200-ok",children:"Success Response (200 OK)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "message": "Opportunity deleted successfully",\n  "success": true,\n  "data": {\n    "id": "opp_abc123def456",\n    "title": "Senior Full-Stack Developer",\n    "entityId": "ent_xyz789",\n    "entityName": "TechCorp Solutions",\n    "deletedAt": "2025-01-14T16:45:00Z",\n    "deletedBy": "user_123",\n    "deletionType": "soft",\n    "auditId": "audit_del_789"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"error-responses",children:"Error Responses"}),"\n",(0,r.jsx)(n.h4,{id:"unauthorized-401",children:"Unauthorized (401)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Unauthorized"\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"forbidden-403",children:"Forbidden (403)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Access denied: Forbidden"\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"not-found-404",children:"Not Found (404)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Opportunity not found"\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"permission-denied-403",children:"Permission Denied (403)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "error": "You do not have permission to delete this opportunity"\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,r.jsx)(n.h3,{id:"javascripttypescript",children:"JavaScript/TypeScript"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface OpportunityDeletionResult {\n  message: string;\n  success: boolean;\n  data: {\n    id: string;\n    title: string;\n    entityId: string;\n    entityName: string;\n    deletedAt: string;\n    deletedBy: string;\n    deletionType: 'soft' | 'permanent';\n    auditId: string;\n  };\n}\n\nasync function deleteOpportunity(\n  opportunityId: string,\n  authToken: string,\n  options: {\n    permanent?: boolean;\n    reason?: string;\n  } = {}\n): Promise<OpportunityDeletionResult> {\n  const params = new URLSearchParams();\n  \n  if (options.permanent) {\n    params.append('permanent', 'true');\n  }\n  \n  if (options.reason) {\n    params.append('reason', options.reason);\n  }\n\n  const url = `/api/opportunities/delete/${opportunityId}${params.toString() ? '?' + params.toString() : ''}`;\n\n  const response = await fetch(url, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Bearer ${authToken}`\n    }\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to delete opportunity');\n  }\n\n  return response.json();\n}\n\n// Usage examples\ntry {\n  // Soft delete (default)\n  const softDeleteResult = await deleteOpportunity('opp_abc123', userToken);\n  console.log('Opportunity soft deleted:', softDeleteResult.data.title);\n\n  // Permanent delete with reason\n  const permanentDeleteResult = await deleteOpportunity('opp_def456', userToken, {\n    permanent: true,\n    reason: 'Position filled internally'\n  });\n  console.log('Opportunity permanently deleted:', permanentDeleteResult.data.title);\n\n} catch (error) {\n  console.error('Deletion failed:', error.message);\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"react-hook-for-opportunity-deletion",children:"React Hook for Opportunity Deletion"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'import { useState } from \'react\';\n\ninterface UseOpportunityDeletionResult {\n  deleteOpportunity: (id: string, options?: { permanent?: boolean; reason?: string }) => Promise<void>;\n  isDeleting: boolean;\n  error: string | null;\n  success: boolean;\n}\n\nfunction useOpportunityDeletion(): UseOpportunityDeletionResult {\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState(false);\n\n  const deleteOpportunity = async (\n    id: string, \n    options: { permanent?: boolean; reason?: string } = {}\n  ) => {\n    setIsDeleting(true);\n    setError(null);\n    setSuccess(false);\n\n    try {\n      const token = localStorage.getItem(\'authToken\');\n      if (!token) {\n        throw new Error(\'Authentication required\');\n      }\n\n      const result = await deleteOpportunity(id, token, options);\n      setSuccess(true);\n      \n      // Optional: trigger refresh of opportunity list\n      // onDelete?.(result.data);\n      \n    } catch (err) {\n      setError(err instanceof Error ? err.message : \'Deletion failed\');\n    } finally {\n      setIsDeleting(false);\n    }\n  };\n\n  return { deleteOpportunity, isDeleting, error, success };\n}\n\n// Usage in component\nfunction OpportunityDeleteButton({ opportunityId, onDeleted }: OpportunityDeleteButtonProps) {\n  const { deleteOpportunity, isDeleting, error, success } = useOpportunityDeletion();\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [deleteReason, setDeleteReason] = useState(\'\');\n\n  const handleDelete = async (permanent: boolean = false) => {\n    await deleteOpportunity(opportunityId, {\n      permanent,\n      reason: deleteReason || undefined\n    });\n    \n    if (success) {\n      onDeleted?.(opportunityId);\n      setShowConfirm(false);\n    }\n  };\n\n  return (\n    <>\n      <button \n        onClick={() => setShowConfirm(true)}\n        className="delete-button"\n        disabled={isDeleting}\n      >\n        {isDeleting ? \'Deleting...\' : \'Delete Opportunity\'}\n      </button>\n\n      {showConfirm && (\n        <div className="delete-confirmation-modal">\n          <div className="modal-content">\n            <h3>Delete Opportunity</h3>\n            <p>Are you sure you want to delete this opportunity?</p>\n            \n            <div className="form-group">\n              <label>Reason for deletion (optional):</label>\n              <textarea\n                value={deleteReason}\n                onChange={(e) => setDeleteReason(e.target.value)}\n                placeholder="e.g., Position filled, Requirements changed..."\n              />\n            </div>\n\n            {error && <div className="error-message">{error}</div>}\n\n            <div className="modal-actions">\n              <button \n                onClick={() => handleDelete(false)}\n                className="soft-delete-button"\n                disabled={isDeleting}\n              >\n                Soft Delete\n              </button>\n              <button \n                onClick={() => handleDelete(true)}\n                className="permanent-delete-button"\n                disabled={isDeleting}\n              >\n                Permanent Delete\n              </button>\n              <button \n                onClick={() => setShowConfirm(false)}\n                className="cancel-button"\n                disabled={isDeleting}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"curl-example",children:"cURL Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Soft delete opportunity\ncurl -X DELETE "https://ring.ck.ua/api/opportunities/delete/opp_abc123def456" \\\n  -H "Authorization: Bearer YOUR_AUTH_TOKEN"\n\n# Permanent delete with reason\ncurl -X DELETE "https://ring.ck.ua/api/opportunities/delete/opp_def456ghi789?permanent=true&reason=Position%20filled" \\\n  -H "Authorization: Bearer YOUR_AUTH_TOKEN"\n\n# Expected response\n# {\n#   "message": "Opportunity deleted successfully",\n#   "success": true,\n#   "data": {\n#     "id": "opp_abc123def456",\n#     "title": "Senior Full-Stack Developer",\n#     "deletedAt": "2025-01-14T16:45:00Z",\n#     "deletionType": "soft"\n#   }\n# }\n'})}),"\n",(0,r.jsx)(n.h3,{id:"python-example",children:"Python Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import requests\nfrom typing import Dict, Any, Optional\n\nclass OpportunityDeleter:\n    def __init__(self, base_url: str, auth_token: str):\n        self.base_url = base_url.rstrip(\'/\')\n        self.auth_token = auth_token\n        self.headers = {\n            \'Authorization\': f\'Bearer {auth_token}\'\n        }\n    \n    def delete_opportunity(\n        self, \n        opportunity_id: str, \n        permanent: bool = False,\n        reason: Optional[str] = None\n    ) -> Dict[str, Any]:\n        """Delete an opportunity (soft or permanent)"""\n        url = f"{self.base_url}/api/opportunities/delete/{opportunity_id}"\n        \n        params = {}\n        if permanent:\n            params[\'permanent\'] = \'true\'\n        if reason:\n            params[\'reason\'] = reason\n        \n        response = requests.delete(url, headers=self.headers, params=params)\n        \n        if response.status_code == 200:\n            return response.json()\n        elif response.status_code == 401:\n            raise Exception("Unauthorized - check your authentication token")\n        elif response.status_code == 403:\n            raise Exception("Forbidden - insufficient permissions to delete this opportunity")\n        elif response.status_code == 404:\n            raise Exception("Opportunity not found")\n        else:\n            error_data = response.json()\n            raise Exception(f"Deletion failed: {error_data.get(\'error\', \'Unknown error\')}")\n    \n    def soft_delete(self, opportunity_id: str, reason: Optional[str] = None) -> Dict[str, Any]:\n        """Convenience method for soft deletion"""\n        return self.delete_opportunity(opportunity_id, permanent=False, reason=reason)\n    \n    def permanent_delete(self, opportunity_id: str, reason: Optional[str] = None) -> Dict[str, Any]:\n        """Convenience method for permanent deletion"""\n        return self.delete_opportunity(opportunity_id, permanent=True, reason=reason)\n\n# Usage examples\ndeleter = OpportunityDeleter("https://ring.ck.ua", "your-auth-token")\n\ntry:\n    # Soft delete with reason\n    soft_result = deleter.soft_delete("opp_abc123", "Position requirements changed")\n    print(f"Soft deleted: {soft_result[\'data\'][\'title\']}")\n    print(f"Deletion type: {soft_result[\'data\'][\'deletionType\']}")\n    \n    # Permanent delete\n    permanent_result = deleter.permanent_delete("opp_def456", "Position filled internally")\n    print(f"Permanently deleted: {permanent_result[\'data\'][\'title\']}")\n    \n    # Bulk deletion with error handling\n    opportunity_ids = ["opp_123", "opp_456", "opp_789"]\n    deletion_results = []\n    \n    for opp_id in opportunity_ids:\n        try:\n            result = deleter.soft_delete(opp_id, "Bulk cleanup")\n            deletion_results.append({\n                \'id\': opp_id,\n                \'status\': \'success\',\n                \'title\': result[\'data\'][\'title\']\n            })\n        except Exception as e:\n            deletion_results.append({\n                \'id\': opp_id,\n                \'status\': \'error\',\n                \'error\': str(e)\n            })\n    \n    # Summary\n    successful = [r for r in deletion_results if r[\'status\'] == \'success\']\n    failed = [r for r in deletion_results if r[\'status\'] == \'error\']\n    \n    print(f"Bulk deletion complete: {len(successful)} successful, {len(failed)} failed")\n    \nexcept Exception as e:\n    print(f"Error deleting opportunity: {e}")\n'})}),"\n",(0,r.jsx)(n.h2,{id:"deletion-types",children:"Deletion Types"}),"\n",(0,r.jsx)(n.h3,{id:"soft-deletion-default",children:"Soft Deletion (Default)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Behavior"}),": Marks opportunity as deleted without removing data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Recovery"}),": Can be restored by administrators"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Visibility"}),": Hidden from public listings but preserved in database"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Audit"}),": Full audit trail maintained"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Related Data"}),": Applications and saves are preserved"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"permanent-deletion",children:"Permanent Deletion"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Behavior"}),": Completely removes opportunity and related data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Recovery"}),": Cannot be restored (irreversible)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Visibility"}),": Completely removed from all systems"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Audit"}),": Deletion event logged but data is wiped"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Related Data"}),": Applications and saves are also removed"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,r.jsx)(n.h3,{id:"permission-validation",children:"Permission Validation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ownership Check"}),": Verify user owns the opportunity or has entity admin rights"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Confidential Access"}),": Additional validation for confidential opportunities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Entity Membership"}),": Ensure user belongs to the opportunity's entity"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Admin Override"}),": Platform administrators can delete any opportunity"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"audit-and-compliance",children:"Audit and Compliance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Deletion Logging"}),": All deletions are logged with user, timestamp, and reason"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Retention"}),": Comply with data retention policies and regulations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Recovery Procedures"}),": Documented procedures for data recovery requests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Security Monitoring"}),": Monitor for unusual deletion patterns"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"data-protection",children:"Data Protection"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Secure Wiping"}),": Permanent deletions use secure data wiping techniques"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backup Handling"}),": Ensure deleted data is removed from backups"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Related Data"}),": Handle deletion of related files, images, and attachments"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Privacy Compliance"}),": Ensure deletion meets privacy regulation requirements"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-endpoints",children:"Related Endpoints"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api/opportunities/create",children:"Create Opportunity"})," - Create new opportunities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api/opportunities/update",children:"Update Opportunity"})," - Modify existing opportunities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api/opportunities/get-by-id",children:"Get Opportunity"})," - Retrieve opportunity details"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api/opportunities/list",children:"List Opportunities"})," - Browse and search opportunities"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"changelog",children:"Changelog"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"v1.0.0"})," - Initial implementation with basic deletion functionality"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"v1.1.0"})," - Added soft delete option and audit logging"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"v1.2.0"})," - Enhanced permission system and confidential opportunity support"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"v1.3.0"})," - Improved security measures and compliance features"]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);