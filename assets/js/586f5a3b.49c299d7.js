"use strict";(self.webpackChunkring_docs=self.webpackChunkring_docs||[]).push([[1221],{28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(96540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},86969:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api/entities/get-by-id","title":"Entity Retrieval by ID API","description":"Overview","source":"@site/docs/ru/api/entities/get-by-id.md","sourceDirName":"api/entities","slug":"/api/entities/get-by-id","permalink":"/ring/ru/api/entities/get-by-id","draft":false,"unlisted":false,"editUrl":"https://github.com/connectplatform/ring/ring-docs/tree/main/docs/ru/api/entities/get-by-id.md","tags":[],"version":"current","lastUpdatedAt":1750331037000,"frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"Entity Creation API","permalink":"/ring/ru/api/entities/create"},"next":{"title":"\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u044c","permalink":"/ring/ru/api/entities/update"}}');var s=i(74848),r=i(28453);const o={},a="Entity Retrieval by ID API",l={},d=[{value:"Overview",id:"overview",level:2},{value:"Endpoint Details",id:"endpoint-details",level:2},{value:"Authentication Requirements",id:"authentication-requirements",level:2},{value:"Request Format",id:"request-format",level:2},{value:"URL Parameters",id:"url-parameters",level:3},{value:"Headers",id:"headers",level:3},{value:"Example Request",id:"example-request",level:3},{value:"Response Format",id:"response-format",level:2},{value:"Success Response (200 OK)",id:"success-response-200-ok",level:3},{value:"Error Responses",id:"error-responses",level:2},{value:"401 Unauthorized",id:"401-unauthorized",level:3},{value:"403 Forbidden",id:"403-forbidden",level:3},{value:"404 Not Found",id:"404-not-found",level:3},{value:"500 Internal Server Error",id:"500-internal-server-error",level:3},{value:"Code Examples",id:"code-examples",level:2},{value:"JavaScript/TypeScript",id:"javascripttypescript",level:3},{value:"React Hook Example",id:"react-hook-example",level:3},{value:"cURL Example",id:"curl-example",level:3},{value:"Python Example",id:"python-example",level:3},{value:"Response Schema",id:"response-schema",level:2},{value:"Access Control Rules",id:"access-control-rules",level:2},{value:"Public Entities",id:"public-entities",level:3},{value:"Member Entities",id:"member-entities",level:3},{value:"Confidential Entities",id:"confidential-entities",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Testing Examples",id:"testing-examples",level:2},{value:"Unit Test Example",id:"unit-test-example",level:3},{value:"Related Endpoints",id:"related-endpoints",level:2},{value:"Changelog",id:"changelog",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"entity-retrieval-by-id-api",children:"Entity Retrieval by ID API"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"The Entity Retrieval API allows authenticated users to fetch detailed information about a specific entity using its unique identifier. This endpoint supports role-based access control and respects entity visibility settings."}),"\n",(0,s.jsx)(n.h2,{id:"endpoint-details",children:"Endpoint Details"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"URL"}),": ",(0,s.jsx)(n.code,{children:"/api/entities/[id]"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Method"}),": ",(0,s.jsx)(n.code,{children:"GET"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Authentication"}),": Required (JWT Token)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rate Limit"}),": 120 requests per minute for authenticated users"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Content-Type"}),": ",(0,s.jsx)(n.code,{children:"application/json"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"authentication-requirements",children:"Authentication Requirements"}),"\n",(0,s.jsx)(n.p,{children:"This endpoint requires authentication. Access to entities depends on:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Public entities"}),": Accessible to all authenticated users"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Member entities"}),": Accessible to MEMBER, CONFIDENTIAL, and ADMIN users"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Confidential entities"}),": Accessible only to CONFIDENTIAL and ADMIN users"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"request-format",children:"Request Format"}),"\n",(0,s.jsx)(n.h3,{id:"url-parameters",children:"URL Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"id"})," (string, required): The unique identifier of the entity"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"headers",children:"Headers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"GET /api/entities/{entity_id}\nAuthorization: Bearer <jwt_token>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"example-request",children:"Example Request"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"GET /api/entities/entity_123456789\nAuthorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n"})}),"\n",(0,s.jsx)(n.h2,{id:"response-format",children:"Response Format"}),"\n",(0,s.jsx)(n.h3,{id:"success-response-200-ok",children:"Success Response (200 OK)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "id": "entity_123456789",\n  "name": "TechCorp Solutions",\n  "description": "Leading software development company specializing in AI and blockchain solutions",\n  "website": "https://techcorp.example.com",\n  "email": "contact@techcorp.example.com",\n  "phone": "+380123456789",\n  "address": "123 Innovation Street, Kyiv, Ukraine",\n  "category": "Software Development",\n  "tags": ["AI", "Blockchain", "Web Development", "Mobile Apps"],\n  "visibility": "public",\n  "logo": "https://storage.example.com/logos/techcorp.png",\n  "socialLinks": {\n    "linkedin": "https://linkedin.com/company/techcorp",\n    "twitter": "https://twitter.com/techcorp",\n    "github": "https://github.com/techcorp"\n  },\n  "foundedYear": 2020,\n  "employeeCount": "11-50",\n  "industry": "Information Technology",\n  "location": {\n    "city": "Kyiv",\n    "country": "Ukraine",\n    "coordinates": {\n      "lat": 50.4501,\n      "lng": 30.5234\n    }\n  },\n  "onlineStatus": "online",\n  "lastOnline": "2025-01-14T17:05:00Z",\n  "createdAt": "2025-01-14T10:00:00Z",\n  "updatedAt": "2025-01-14T16:30:00Z",\n  "createdBy": "user_987654321",\n  "verificationStatus": "verified",\n  "metrics": {\n    "viewCount": 1250,\n    "contactCount": 45,\n    "opportunityCount": 12\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"error-responses",children:"Error Responses"}),"\n",(0,s.jsx)(n.h3,{id:"401-unauthorized",children:"401 Unauthorized"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Unauthorized"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"403-forbidden",children:"403 Forbidden"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Access denied"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"404-not-found",children:"404 Not Found"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Entity not found"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"500-internal-server-error",children:"500 Internal Server Error"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Internal Server Error"\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,s.jsx)(n.h3,{id:"javascripttypescript",children:"JavaScript/TypeScript"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"async function getEntityById(id: string): Promise<Entity> {\n  const response = await fetch(`/api/entities/${id}`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to fetch entity');\n  }\n\n  return response.json();\n}\n\n// Usage example\ntry {\n  const entity = await getEntityById('entity_123456789');\n  console.log('Entity details:', entity);\n} catch (error) {\n  console.error('Error fetching entity:', error.message);\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"react-hook-example",children:"React Hook Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { useState, useEffect } from 'react';\n\nfunction useEntity(id: string) {\n  const [entity, setEntity] = useState<Entity | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchEntity() {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const response = await fetch(`/api/entities/${id}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.error);\n        }\n\n        const entityData = await response.json();\n        setEntity(entityData);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Unknown error');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    if (id) {\n      fetchEntity();\n    }\n  }, [id]);\n\n  return { entity, loading, error };\n}\n\n// Usage in component\nfunction EntityProfile({ entityId }: { entityId: string }) {\n  const { entity, loading, error } = useEntity(entityId);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!entity) return <div>Entity not found</div>;\n\n  return (\n    <div>\n      <h1>{entity.name}</h1>\n      <p>{entity.description}</p>\n      {/* Render other entity details */}\n    </div>\n  );\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"curl-example",children:"cURL Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X GET https://ring.ck.ua/api/entities/entity_123456789 \\\n  -H "Authorization: Bearer YOUR_JWT_TOKEN"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"python-example",children:"Python Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests\n\ndef get_entity_by_id(entity_id: str, token: str) -> dict:\n    """Fetch entity details by ID"""\n    url = f"https://ring.ck.ua/api/entities/{entity_id}"\n    headers = {\n        "Authorization": f"Bearer {token}"\n    }\n    \n    response = requests.get(url, headers=headers)\n    \n    if response.status_code == 200:\n        return response.json()\n    elif response.status_code == 404:\n        raise ValueError("Entity not found")\n    elif response.status_code == 403:\n        raise PermissionError("Access denied")\n    else:\n        response.raise_for_status()\n\n# Usage\ntry:\n    entity = get_entity_by_id("entity_123456789", "your_jwt_token")\n    print(f"Entity: {entity[\'name\']}")\nexcept Exception as e:\n    print(f"Error: {e}")\n'})}),"\n",(0,s.jsx)(n.h2,{id:"response-schema",children:"Response Schema"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface Entity {\n  id: string;                     // Unique entity identifier\n  name: string;                   // Entity name\n  description?: string;           // Entity description\n  website?: string;              // Official website URL\n  email?: string;                // Contact email\n  phone?: string;                // Contact phone number\n  address?: string;              // Physical address\n  category: string;              // Entity category\n  tags?: string[];               // Searchable tags\n  visibility: 'public' | 'member' | 'confidential'; // Visibility level\n  logo?: string;                 // Logo URL\n  socialLinks?: {                // Social media links\n    linkedin?: string;\n    twitter?: string;\n    facebook?: string;\n    github?: string;\n  };\n  foundedYear?: number;          // Year founded\n  employeeCount?: string;        // Employee count range\n  industry?: string;             // Industry classification\n  location?: {                   // Geographic location\n    city?: string;\n    country?: string;\n    coordinates?: {\n      lat: number;\n      lng: number;\n    };\n  };\n  onlineStatus: 'online' | 'offline'; // Current online status\n  lastOnline?: string;           // Last online timestamp (ISO 8601)\n  createdAt: string;             // Creation timestamp (ISO 8601)\n  updatedAt: string;             // Last update timestamp (ISO 8601)\n  createdBy: string;             // ID of user who created the entity\n  verificationStatus?: 'pending' | 'verified' | 'rejected'; // Verification status\n  metrics?: {                    // Entity metrics (if available)\n    viewCount: number;\n    contactCount: number;\n    opportunityCount: number;\n  };\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"access-control-rules",children:"Access Control Rules"}),"\n",(0,s.jsx)(n.h3,{id:"public-entities",children:"Public Entities"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Accessible to all authenticated users"}),"\n",(0,s.jsx)(n.li,{children:"Full entity details are returned"}),"\n",(0,s.jsx)(n.li,{children:"No additional permissions required"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"member-entities",children:"Member Entities"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Accessible to users with roles: MEMBER, CONFIDENTIAL, ADMIN"}),"\n",(0,s.jsx)(n.li,{children:"Visitors and Subscribers receive 403 Forbidden"}),"\n",(0,s.jsx)(n.li,{children:"Full entity details are returned to authorized users"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"confidential-entities",children:"Confidential Entities"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Accessible only to users with roles: CONFIDENTIAL, ADMIN"}),"\n",(0,s.jsx)(n.li,{children:"All other users receive 403 Forbidden"}),"\n",(0,s.jsx)(n.li,{children:"May include additional sensitive information"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Role-Based Access Control"}),": Strict enforcement of visibility rules"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Data Sanitization"}),": Sensitive information is filtered based on user role"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Audit Logging"}),": All entity access is logged for security monitoring"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rate Limiting"}),": Prevents abuse with 120 requests per minute limit"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Caching"}),": Entity data is cached for 5 minutes to improve performance"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Database Optimization"}),": Indexed queries for fast entity retrieval"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Lazy Loading"}),": Large fields like descriptions are loaded on demand"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"CDN Integration"}),": Static assets (logos, images) are served via CDN"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"testing-examples",children:"Testing Examples"}),"\n",(0,s.jsx)(n.h3,{id:"unit-test-example",children:"Unit Test Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"describe('GET /api/entities/[id]', () => {\n  it('should return entity for valid ID', async () => {\n    const response = await request(app)\n      .get('/api/entities/entity_123456789')\n      .set('Authorization', `Bearer ${validToken}`)\n      .expect(200);\n\n    expect(response.body).toHaveProperty('id', 'entity_123456789');\n    expect(response.body).toHaveProperty('name');\n  });\n\n  it('should return 404 for non-existent entity', async () => {\n    const response = await request(app)\n      .get('/api/entities/non_existent_id')\n      .set('Authorization', `Bearer ${validToken}`)\n      .expect(404);\n\n    expect(response.body.error).toBe('Entity not found');\n  });\n\n  it('should return 403 for confidential entity without access', async () => {\n    const response = await request(app)\n      .get('/api/entities/confidential_entity_id')\n      .set('Authorization', `Bearer ${memberToken}`)\n      .expect(403);\n\n    expect(response.body.error).toBe('Access denied');\n  });\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"related-endpoints",children:"Related Endpoints"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/entities/create",children:"Create Entity"})," - Create new entity"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/entities/update",children:"Update Entity"})," - Modify existing entity"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/entities/delete",children:"Delete Entity"})," - Remove entity"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/entities/list",children:"List Entities"})," - Browse all entities"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/entities/list",children:"List Entities"})," - Browse and search entities"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"changelog",children:"Changelog"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"v1.0.0"})," - Initial implementation with basic entity retrieval"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"v1.1.0"})," - Added role-based access control"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"v1.2.0"})," - Enhanced error handling and validation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"v1.3.0"})," - Added metrics and verification status"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"v1.4.0"})," - Improved caching and performance optimization"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);