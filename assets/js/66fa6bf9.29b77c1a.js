"use strict";(self.webpackChunkring_docs=self.webpackChunkring_docs||[]).push([[6115],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(96540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}},70472:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"api/wallet/balance","title":"Wallet Balance API","description":"This API endpoint allows authenticated users to retrieve the balance of their associated Ethereum wallet on the Polygon network.","source":"@site/docs/uk/api/wallet/balance.md","sourceDirName":"api/wallet","slug":"/api/wallet/balance","permalink":"/ring/uk/api/wallet/balance","draft":false,"unlisted":false,"editUrl":"https://github.com/connectplatform/ring/ring-docs/tree/main/docs/uk/api/wallet/balance.md","tags":[],"version":"current","lastUpdatedAt":1750331037000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"apiSidebar","previous":{"title":"Comment Likes API","permalink":"/ring/uk/api/comments/likes"},"next":{"title":"List User Wallets API","permalink":"/ring/uk/api/wallet/list"}}');var s=t(74848),r=t(28453);const a={sidebar_position:3},o="Wallet Balance API",l={},d=[{value:"Endpoint",id:"endpoint",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Request",id:"request",level:2},{value:"Response",id:"response",level:2},{value:"Error Responses",id:"error-responses",level:2}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"wallet-balance-api",children:"Wallet Balance API"})}),"\n",(0,s.jsx)(n.p,{children:"This API endpoint allows authenticated users to retrieve the balance of their associated Ethereum wallet on the Polygon network."}),"\n",(0,s.jsx)(n.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)("span",{class:"api-method api-method--get",children:"GET"})," ",(0,s.jsx)(n.code,{children:"/api/wallet/balance"})]}),"\n",(0,s.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,s.jsx)(n.p,{children:"This endpoint requires authentication. Ensure that the user is logged in and has a valid session."}),"\n",(0,s.jsx)(n.h2,{id:"request",children:"Request"}),"\n",(0,s.jsx)(n.p,{children:"This endpoint does not require any parameters in the request body or query string. The user's information is obtained from the authenticated session."}),"\n",(0,s.jsx)(n.h2,{id:"response",children:"Response"}),"\n",(0,s.jsx)(n.p,{children:"The API returns a JSON object with the following structure:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"{\n  address: string;\n  balance: string;\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Where:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"address"})," is the Ethereum wallet address associated with the user."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"balance"})," is the current balance of the wallet in Ether (ETH), formatted as a string."]}),"\n"]}),"\n",(0,s.jsxs)(n.admonition,{title:"Usage Example",type:"tip",children:[(0,s.jsx)(n.p,{children:"Retrieve the wallet balance for the authenticated user:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const response = await fetch('/api/wallet/balance', {\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\nconst data = await response.json();\nconsole.log(data.address); // The user's wallet address\nconsole.log(data.balance); // The current balance in ETH\n"})})]}),"\n",(0,s.jsx)(n.h2,{id:"error-responses",children:"Error Responses"}),"\n",(0,s.jsx)(n.p,{children:"The API may return the following error responses:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"401 Unauthorized"}),": If the user is not authenticated."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"404 Not Found"}),": If the authenticated user does not have an associated wallet."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"500 Internal Server Error"}),": If there's an error fetching the balance from the Polygon network."]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{title:"Implementation Details",type:"note",children:(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["The endpoint first checks if the user is authenticated using the ",(0,s.jsx)(n.code,{children:"auth()"})," function."]}),"\n",(0,s.jsx)(n.li,{children:"It then retrieves the user's data from the Firebase Admin database."}),"\n",(0,s.jsx)(n.li,{children:"If the user has an associated wallet address, it uses the Polygon RPC URL to create an Ethereum provider."}),"\n",(0,s.jsx)(n.li,{children:"The provider is used to fetch the current balance of the wallet."}),"\n",(0,s.jsxs)(n.li,{children:["The balance is formatted from Wei to Ether using ",(0,s.jsx)(n.code,{children:"ethers.formatEther()"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Both the wallet address and formatted balance are returned to the client."}),"\n"]})}),"\n",(0,s.jsx)(n.admonition,{title:"Security Note",type:"caution",children:(0,s.jsxs)(n.p,{children:["Ensure that the ",(0,s.jsx)(n.code,{children:"POLYGON_RPC_URL"})," environment variable is securely stored and not exposed to the client-side code."]})}),"\n",(0,s.jsx)(n.admonition,{title:"Best Practices",type:"info",children:(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Implement proper error handling in your client-side code to manage potential API errors."}),"\n",(0,s.jsx)(n.li,{children:"Consider implementing rate limiting to prevent abuse of this endpoint."}),"\n",(0,s.jsx)(n.li,{children:"Cache the balance results for a short period to reduce load on the Polygon RPC endpoint and improve response times."}),"\n",(0,s.jsx)(n.li,{children:"Monitor the Polygon RPC endpoint for any issues or downtime that might affect your application."}),"\n"]})}),"\n",(0,s.jsx)(n.admonition,{title:"Limitations",type:"warning",children:(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"This API currently only supports checking balances on the Polygon network."}),"\n",(0,s.jsx)(n.li,{children:"The balance is returned in Ether (ETH) and does not include information about other tokens the wallet might hold."}),"\n",(0,s.jsx)(n.li,{children:"The accuracy of the balance depends on the responsiveness and current state of the Polygon network."}),"\n"]})}),"\n",(0,s.jsx)(n.p,{children:"Stay tuned for updates and feel free to provide feedback for improvements!"})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);