"use strict";(self.webpackChunkring_docs=self.webpackChunkring_docs||[]).push([[4357],{28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>l});var t=i(96540);const s={},r=t.createContext(s);function d(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(r.Provider,{value:n},e.children)}},69546:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>d,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"api/entities/update","title":"Update Entity","description":"Overview","source":"@site/docs/en/api/entities/update.md","sourceDirName":"api/entities","slug":"/api/entities/update","permalink":"/ring/docs/api/entities/update","draft":false,"unlisted":false,"editUrl":"https://github.com/connectplatform/ring/ring-docs/tree/main/docs/en/api/entities/update.md","tags":[],"version":"current","lastUpdatedAt":1750331037000,"frontMatter":{"title":"Update Entity"},"sidebar":"apiSidebar","previous":{"title":"Get Entity by ID","permalink":"/ring/docs/api/entities/get-by-id"},"next":{"title":"Delete Entity","permalink":"/ring/docs/api/entities/delete"}}');var s=i(74848),r=i(28453);const d={title:"Update Entity"},l="Entity Update API",a={},o=[{value:"Overview",id:"overview",level:2},{value:"Endpoint",id:"endpoint",level:2},{value:"URL Parameters",id:"url-parameters",level:2},{value:"Request Body",id:"request-body",level:2},{value:"Example Request",id:"example-request",level:2},{value:"Response",id:"response",level:2},{value:"Success (200 OK)",id:"success-200-ok",level:3},{value:"Errors",id:"errors",level:3},{value:"Code Example",id:"code-example",level:2},{value:"Validation Rules",id:"validation-rules",level:2},{value:"Related Endpoints",id:"related-endpoints",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"entity-update-api",children:"Entity Update API"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"Update existing entities with new information and metadata."}),"\n",(0,s.jsx)(n.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"URL"}),": ",(0,s.jsx)(n.code,{children:"/api/entities/update/[id]"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Method"}),": ",(0,s.jsx)(n.code,{children:"PATCH"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Auth"}),": Required (MEMBER+ role)"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"url-parameters",children:"URL Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"id"})," (string, required): Entity ID to update"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"request-body",children:"Request Body"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface UpdateEntityRequest {\n  name?: string;\n  description?: string;\n  website?: string;\n  email?: string;\n  phone?: string;\n  address?: string;\n  category?: string;\n  tags?: string[];\n  visibility?: 'public' | 'member' | 'confidential';\n  logo?: string;\n  // ... other entity fields\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"example-request",children:"Example Request"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "name": "Updated Company Name",\n  "description": "Updated company description",\n  "website": "https://newwebsite.com",\n  "tags": ["updated", "technology", "innovation"]\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"response",children:"Response"}),"\n",(0,s.jsx)(n.h3,{id:"success-200-ok",children:"Success (200 OK)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "message": "Entity updated successfully"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"errors",children:"Errors"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"400"})," - Invalid JSON or update failed"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"401"})," - Unauthorized"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"403"})," - Access denied"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"500"})," - Server error"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"code-example",children:"Code Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"async function updateEntity(id: string, updates: Partial<Entity>) {\n  const response = await fetch(`/api/entities/update/${id}`, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updates)\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error);\n  }\n\n  return response.json();\n}\n\n// Usage\nawait updateEntity('entity_123', {\n  name: 'New Name',\n  description: 'Updated description'\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"validation-rules",children:"Validation Rules"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Only provided fields are updated"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": 1-100 characters if provided"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"email"}),": Valid email format if provided"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"website"}),": Valid URL format if provided"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"visibility"}),": Must match user permissions"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"related-endpoints",children:"Related Endpoints"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/entities/get-by-id",children:"Get Entity"})," - Retrieve entity details"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/entities/create",children:"Create Entity"})," - Create new entity"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/entities/delete",children:"Delete Entity"})," - Remove entity"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);