"use strict";(self.webpackChunkring_docs=self.webpackChunkring_docs||[]).push([[6124],{28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var t=i(96540);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}},66884:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api/entities/get-confidential","title":"Confidential Entities","description":"Overview","source":"@site/docs/ru/api/entities/get-confidential.md","sourceDirName":"api/entities","slug":"/api/entities/get-confidential","permalink":"/ring/ru/api/entities/get-confidential","draft":false,"unlisted":false,"editUrl":"https://github.com/connectplatform/ring/ring-docs/tree/main/docs/ru/api/entities/get-confidential.md","tags":[],"version":"current","lastUpdatedAt":1750331037000,"frontMatter":{"title":"Confidential Entities"},"sidebar":"apiSidebar","previous":{"title":"Entities Upload API","permalink":"/ring/ru/api/entities/upload"},"next":{"title":"API Layer","permalink":"/ring/ru/api/opportunities/list"}}');var s=i(74848),r=i(28453);const l={title:"Confidential Entities"},a="Confidential Entities API",o={},d=[{value:"Overview",id:"overview",level:2},{value:"Endpoint Details",id:"endpoint-details",level:2},{value:"Ring Platform Concepts",id:"ring-platform-concepts",level:2},{value:"What are Confidential Entities?",id:"what-are-confidential-entities",level:3},{value:"Access Control",id:"access-control",level:3},{value:"Query Parameters",id:"query-parameters",level:2},{value:"Supported Sort Fields",id:"supported-sort-fields",level:3},{value:"Supported Filters",id:"supported-filters",level:3},{value:"Request Format",id:"request-format",level:2},{value:"Headers",id:"headers",level:3},{value:"Example Request",id:"example-request",level:3},{value:"Response Format",id:"response-format",level:2},{value:"Success Response (200 OK)",id:"success-response-200-ok",level:3},{value:"Error Responses",id:"error-responses",level:3},{value:"401 Unauthorized",id:"401-unauthorized",level:4},{value:"403 Permission Denied",id:"403-permission-denied",level:4},{value:"500 Internal Server Error",id:"500-internal-server-error",level:4},{value:"Code Examples",id:"code-examples",level:2},{value:"JavaScript/TypeScript",id:"javascripttypescript",level:3},{value:"React Hook Example",id:"react-hook-example",level:3},{value:"cURL Example",id:"curl-example",level:3},{value:"Python Example",id:"python-example",level:3},{value:"Authorization Requirements",id:"authorization-requirements",level:2},{value:"Required Roles",id:"required-roles",level:3},{value:"Role Verification Process",id:"role-verification-process",level:3},{value:"Session Requirements",id:"session-requirements",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Access Control",id:"access-control-1",level:3},{value:"Response Security",id:"response-security",level:3},{value:"Data Protection",id:"data-protection",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Common Error Scenarios",id:"common-error-scenarios",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Pagination",id:"pagination",level:3},{value:"Caching",id:"caching",level:3},{value:"Indexing",id:"indexing",level:3},{value:"Testing Examples",id:"testing-examples",level:2},{value:"Unit Test Example",id:"unit-test-example",level:3},{value:"Related Endpoints",id:"related-endpoints",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"For Developers",id:"for-developers",level:3},{value:"For Administrators",id:"for-administrators",level:3},{value:"For Security",id:"for-security",level:3},{value:"Changelog",id:"changelog",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"confidential-entities-api",children:"Confidential Entities API"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"The Confidential Entities API provides access to restricted entity information within the Ring Platform. This endpoint is reserved for users with CONFIDENTIAL or ADMIN roles and implements strict security controls to protect sensitive organizational data."}),"\n",(0,s.jsx)(n.h2,{id:"endpoint-details",children:"Endpoint Details"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"URL"}),": ",(0,s.jsx)(n.code,{children:"/api/confidential/entities"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Method"}),": ",(0,s.jsx)(n.code,{children:"GET"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Authentication"}),": Required (JWT Token)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Authorization"}),": CONFIDENTIAL or ADMIN role required"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rate Limit"}),": Standard API limits apply"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Caching"}),": No-cache headers enforced for security"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"ring-platform-concepts",children:"Ring Platform Concepts"}),"\n",(0,s.jsx)(n.h3,{id:"what-are-confidential-entities",children:"What are Confidential Entities?"}),"\n",(0,s.jsx)(n.p,{children:"Confidential entities represent organizations with restricted access levels in the Ring Platform:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Enhanced Privacy"}),": Only visible to users with appropriate clearance"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Sensitive Information"}),": May contain classified business data"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Exclusive Access"}),": Limited to CONFIDENTIAL and ADMIN users"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"High-Value Networks"}),": Premium organizations and institutions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Strategic Partnerships"}),": Entities involved in sensitive collaborations"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"access-control",children:"Access Control"}),"\n",(0,s.jsx)(n.p,{children:"The confidential tier implements strict access controls:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Role Verification"}),": CONFIDENTIAL or ADMIN role required"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Session Validation"}),": Active authentication session mandatory"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"No Caching"}),": Responses are never cached for security"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Audit Logging"}),": All access attempts are logged"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"query-parameters",children:"Query Parameters"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"page"})}),(0,s.jsx)(n.td,{children:"integer"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"Page number for pagination"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"limit"})}),(0,s.jsx)(n.td,{children:"integer"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"20"}),(0,s.jsx)(n.td,{children:"Number of entities per page (max 100)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"sort"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsxs)(n.td,{children:["createdAt",":desc"]}),(0,s.jsxs)(n.td,{children:["Sort field and direction (field",":asc","/desc)"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"filter"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"''"}),(0,s.jsx)(n.td,{children:"Filter by entity status"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"startAfter"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"undefined"}),(0,s.jsx)(n.td,{children:"Entity ID for cursor-based pagination"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"supported-sort-fields",children:"Supported Sort Fields"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"createdAt"})," - Creation date"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"updatedAt"})," - Last modification date"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"})," - Entity name"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"addedBy"})," - Creator user ID"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"status"})," - Entity status"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"supported-filters",children:"Supported Filters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"active"})," - Active entities only"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pending"})," - Entities pending approval"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"suspended"})," - Temporarily suspended entities"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"archived"})," - Archived entities"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"request-format",children:"Request Format"}),"\n",(0,s.jsx)(n.h3,{id:"headers",children:"Headers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"GET /api/confidential/entities?page=1&limit=20&sort=createdAt:desc\nAuthorization: Bearer <jwt_token>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"example-request",children:"Example Request"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:"GET /api/confidential/entities?page=1&limit=10&sort=name:asc&filter=active\nAuthorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n"})}),"\n",(0,s.jsx)(n.h2,{id:"response-format",children:"Response Format"}),"\n",(0,s.jsx)(n.h3,{id:"success-response-200-ok",children:"Success Response (200 OK)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "entities": [\n    {\n      "id": "entity_confidential_123",\n      "name": "Strategic Partners Corp",\n      "description": "High-level strategic partnership organization",\n      "industryType": "technology",\n      "foundedYear": 2020,\n      "employeeCount": "51-200",\n      "location": "New York, NY",\n      "isConfidential": true,\n      "status": "active",\n      "addedBy": "user_admin_456",\n      "createdAt": "2024-01-15T10:30:00Z",\n      "updatedAt": "2024-01-20T14:45:00Z",\n      "logoUrl": "https://storage.example.com/logos/strategic-partners.png",\n      "websiteUrl": "https://strategicpartners.example.com",\n      "socialLinks": {\n        "linkedin": "https://linkedin.com/company/strategic-partners",\n        "twitter": "https://twitter.com/strategicpartners"\n      },\n      "certifications": ["ISO-27001", "SOC-2"],\n      "partnerships": ["entity_789", "entity_321"],\n      "memberCount": 15,\n      "opportunityCount": 8\n    }\n  ],\n  "lastVisible": "entity_confidential_123",\n  "totalPages": 5,\n  "totalEntities": 87\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"error-responses",children:"Error Responses"}),"\n",(0,s.jsx)(n.h4,{id:"401-unauthorized",children:"401 Unauthorized"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Unauthorized"\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"403-permission-denied",children:"403 Permission Denied"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Permission denied"\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"500-internal-server-error",children:"500 Internal Server Error"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Internal Server Error"\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,s.jsx)(n.h3,{id:"javascripttypescript",children:"JavaScript/TypeScript"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"interface ConfidentialEntity {\n  id: string;\n  name: string;\n  description: string;\n  industryType: string;\n  isConfidential: true;\n  status: 'active' | 'pending' | 'suspended' | 'archived';\n  addedBy: string;\n  createdAt: string;\n  updatedAt: string;\n  logoUrl?: string;\n  websiteUrl?: string;\n  socialLinks?: {\n    linkedin?: string;\n    twitter?: string;\n    facebook?: string;\n    instagram?: string;\n  };\n  certifications?: string[];\n  partnerships?: string[];\n  memberCount?: number;\n  opportunityCount?: number;\n}\n\ninterface ConfidentialEntitiesResponse {\n  entities: ConfidentialEntity[];\n  lastVisible: string | null;\n  totalPages: number;\n  totalEntities: number;\n}\n\nasync function getConfidentialEntities(\n  page: number = 1,\n  limit: number = 20,\n  sort: string = 'createdAt:desc',\n  filter?: string\n): Promise<ConfidentialEntitiesResponse> {\n  const params = new URLSearchParams({\n    page: page.toString(),\n    limit: limit.toString(),\n    sort,\n    ...(filter && { filter })\n  });\n\n  const response = await fetch(`/api/confidential/entities?${params}`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${getAuthToken()}`\n    }\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Failed to fetch confidential entities');\n  }\n\n  return response.json();\n}\n\n// Usage\ntry {\n  const result = await getConfidentialEntities(1, 10, 'name:asc', 'active');\n  console.log(`Found ${result.totalEntities} confidential entities`);\n  result.entities.forEach(entity => {\n    console.log(`- ${entity.name} (${entity.industryType})`);\n  });\n} catch (error) {\n  console.error('Error fetching confidential entities:', error.message);\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"react-hook-example",children:"React Hook Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { useState, useEffect } from \'react\';\n\ninterface UseConfidentialEntitiesResult {\n  entities: ConfidentialEntity[];\n  loading: boolean;\n  error: string | null;\n  totalPages: number;\n  totalEntities: number;\n  loadMore: () => void;\n  hasMore: boolean;\n  refresh: () => void;\n}\n\nfunction useConfidentialEntities(\n  initialLimit: number = 20,\n  initialSort: string = \'createdAt:desc\'\n): UseConfidentialEntitiesResult {\n  const [entities, setEntities] = useState<ConfidentialEntity[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [totalEntities, setTotalEntities] = useState(0);\n  const [lastVisible, setLastVisible] = useState<string | null>(null);\n\n  const fetchEntities = async (resetPage: boolean = false) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const currentPage = resetPage ? 1 : page;\n      const result = await getConfidentialEntities(\n        currentPage,\n        initialLimit,\n        initialSort\n      );\n\n      if (resetPage) {\n        setEntities(result.entities);\n        setPage(1);\n      } else {\n        setEntities(prev => [...prev, ...result.entities]);\n      }\n\n      setTotalPages(result.totalPages);\n      setTotalEntities(result.totalEntities);\n      setLastVisible(result.lastVisible);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \'Unknown error\');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchEntities(true);\n  }, [initialLimit, initialSort]);\n\n  const loadMore = () => {\n    if (page < totalPages) {\n      setPage(prev => prev + 1);\n      fetchEntities();\n    }\n  };\n\n  const refresh = () => {\n    fetchEntities(true);\n  };\n\n  return {\n    entities,\n    loading,\n    error,\n    totalPages,\n    totalEntities,\n    loadMore,\n    hasMore: page < totalPages,\n    refresh\n  };\n}\n\n// Usage in component\nfunction ConfidentialEntitiesList() {\n  const {\n    entities,\n    loading,\n    error,\n    totalEntities,\n    loadMore,\n    hasMore,\n    refresh\n  } = useConfidentialEntities(10, \'name:asc\');\n\n  if (loading && entities.length === 0) {\n    return <div>Loading confidential entities...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className="text-red-600">\n        Error: {error}\n        <button onClick={refresh} className="ml-2 px-3 py-1 bg-blue-500 text-white rounded">\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className="mb-4">\n        <h2>Confidential Entities ({totalEntities})</h2>\n        <button onClick={refresh} className="px-3 py-1 bg-gray-500 text-white rounded">\n          Refresh\n        </button>\n      </div>\n\n      <div className="grid gap-4">\n        {entities.map(entity => (\n          <div key={entity.id} className="border p-4 rounded-lg bg-gray-50">\n            <div className="flex items-center gap-3 mb-2">\n              {entity.logoUrl && (\n                <img src={entity.logoUrl} alt={entity.name} className="w-12 h-12 rounded" />\n              )}\n              <div>\n                <h3 className="font-semibold">{entity.name}</h3>\n                <span className="text-sm text-gray-600">{entity.industryType}</span>\n              </div>\n              <span className="ml-auto px-2 py-1 bg-red-100 text-red-800 text-xs rounded">\n                CONFIDENTIAL\n              </span>\n            </div>\n            \n            <p className="text-gray-700 mb-3">{entity.description}</p>\n            \n            <div className="flex gap-4 text-sm text-gray-600">\n              <span>\ud83d\udc65 {entity.memberCount} members</span>\n              <span>\ud83c\udfaf {entity.opportunityCount} opportunities</span>\n              <span>\ud83d\udcc5 Founded {entity.foundedYear}</span>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {hasMore && (\n        <button\n          onClick={loadMore}\n          disabled={loading}\n          className="mt-4 px-4 py-2 bg-blue-500 text-white rounded disabled:opacity-50"\n        >\n          {loading ? \'Loading...\' : \'Load More\'}\n        </button>\n      )}\n    </div>\n  );\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"curl-example",children:"cURL Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Get confidential entities with pagination\ncurl -X GET "https://ring.ck.ua/api/confidential/entities?page=1&limit=10&sort=name:asc" \\\n  -H "Authorization: Bearer YOUR_JWT_TOKEN"\n\n# Get active confidential entities only\ncurl -X GET "https://ring.ck.ua/api/confidential/entities?filter=active&limit=20" \\\n  -H "Authorization: Bearer YOUR_JWT_TOKEN"\n\n# Expected response\n# {\n#   "entities": [...],\n#   "lastVisible": "entity_confidential_123",\n#   "totalPages": 5,\n#   "totalEntities": 87\n# }\n'})}),"\n",(0,s.jsx)(n.h3,{id:"python-example",children:"Python Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests\nfrom typing import List, Optional, Dict, Any\n\nclass ConfidentialEntitiesClient:\n    def __init__(self, base_url: str, token: str):\n        self.base_url = base_url\n        self.headers = {"Authorization": f"Bearer {token}"}\n    \n    def get_confidential_entities(\n        self,\n        page: int = 1,\n        limit: int = 20,\n        sort: str = "createdAt:desc",\n        filter_status: Optional[str] = None\n    ) -> Dict[str, Any]:\n        """Fetch confidential entities with pagination"""\n        params = {\n            "page": page,\n            "limit": limit,\n            "sort": sort\n        }\n        \n        if filter_status:\n            params["filter"] = filter_status\n        \n        response = requests.get(\n            f"{self.base_url}/api/confidential/entities",\n            headers=self.headers,\n            params=params\n        )\n        \n        if response.status_code == 401:\n            raise PermissionError("Unauthorized - check your authentication token")\n        elif response.status_code == 403:\n            raise PermissionError("Permission denied - CONFIDENTIAL or ADMIN role required")\n        elif response.status_code != 200:\n            response.raise_for_status()\n        \n        return response.json()\n    \n    def get_all_confidential_entities(\n        self,\n        limit: int = 20,\n        sort: str = "createdAt:desc",\n        filter_status: Optional[str] = None\n    ) -> List[Dict[str, Any]]:\n        """Fetch all confidential entities across all pages"""\n        all_entities = []\n        page = 1\n        \n        while True:\n            result = self.get_confidential_entities(page, limit, sort, filter_status)\n            all_entities.extend(result["entities"])\n            \n            if page >= result["totalPages"]:\n                break\n            \n            page += 1\n        \n        return all_entities\n\n# Usage\nclient = ConfidentialEntitiesClient("https://ring.ck.ua", "your_jwt_token")\n\ntry:\n    # Get first page of confidential entities\n    result = client.get_confidential_entities(page=1, limit=10, sort="name:asc")\n    print(f"Found {result[\'totalEntities\']} confidential entities")\n    \n    for entity in result["entities"]:\n        print(f"- {entity[\'name\']} ({entity[\'industryType\']})")\n    \n    # Get all active confidential entities\n    active_entities = client.get_all_confidential_entities(\n        limit=50,\n        sort="name:asc",\n        filter_status="active"\n    )\n    print(f"\\nFound {len(active_entities)} active confidential entities")\n    \nexcept PermissionError as e:\n    print(f"Access denied: {e}")\nexcept Exception as e:\n    print(f"Error: {e}")\n'})}),"\n",(0,s.jsx)(n.h2,{id:"authorization-requirements",children:"Authorization Requirements"}),"\n",(0,s.jsx)(n.h3,{id:"required-roles",children:"Required Roles"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"CONFIDENTIAL"}),": Premium users with confidential access"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ADMIN"}),": Full platform administrators"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"role-verification-process",children:"Role Verification Process"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Authorization check logic\nfunction hasConfidentialAccess(userRole: UserRole): boolean {\n  return userRole === UserRole.CONFIDENTIAL || userRole === UserRole.ADMIN;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"session-requirements",children:"Session Requirements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Valid JWT token in Authorization header"}),"\n",(0,s.jsx)(n.li,{children:"Active session with appropriate role"}),"\n",(0,s.jsx)(n.li,{children:"Session must not be expired"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,s.jsx)(n.h3,{id:"access-control-1",children:"Access Control"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Strict Role Checking"}),": Only CONFIDENTIAL and ADMIN users allowed"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Session Validation"}),": Active authentication session required"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"No Public Access"}),": No anonymous or guest access permitted"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Audit Logging"}),": All access attempts logged for security monitoring"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"response-security",children:"Response Security"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"No Caching"}),": Cache-Control headers prevent response caching"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Sensitive Data"}),": Contains confidential organizational information"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rate Limiting"}),": Standard API rate limits apply"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"HTTPS Only"}),": Secure transport required in production"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"data-protection",children:"Data Protection"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Confidential entities marked with ",(0,s.jsx)(n.code,{children:"isConfidential: true"})]}),"\n",(0,s.jsx)(n.li,{children:"Enhanced privacy controls for sensitive information"}),"\n",(0,s.jsx)(n.li,{children:"Restricted visibility even within the platform"}),"\n",(0,s.jsx)(n.li,{children:"Regular security audits and access reviews"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.h3,{id:"common-error-scenarios",children:"Common Error Scenarios"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Unauthorized Access (401)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Missing JWT token"}),"\n",(0,s.jsx)(n.li,{children:"Invalid or expired token"}),"\n",(0,s.jsx)(n.li,{children:"Solution: Provide valid authentication"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Permission Denied (403)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"User lacks CONFIDENTIAL or ADMIN role"}),"\n",(0,s.jsx)(n.li,{children:"Session role insufficient"}),"\n",(0,s.jsx)(n.li,{children:"Solution: Contact admin for role upgrade"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Server Error (500)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Database connection issues"}),"\n",(0,s.jsx)(n.li,{children:"Internal service errors"}),"\n",(0,s.jsx)(n.li,{children:"Solution: Retry request or contact support"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,s.jsx)(n.h3,{id:"pagination",children:"Pagination"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Default limit: 20 entities per page"}),"\n",(0,s.jsx)(n.li,{children:"Maximum limit: 100 entities per page"}),"\n",(0,s.jsxs)(n.li,{children:["Cursor-based pagination with ",(0,s.jsx)(n.code,{children:"startAfter"})," parameter"]}),"\n",(0,s.jsx)(n.li,{children:"Total count provided for UI pagination"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"caching",children:"Caching"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"No client-side caching"})," due to sensitivity"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"No CDN caching"})," for security"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Fresh data"})," on every request"]}),"\n",(0,s.jsx)(n.li,{children:"Server-side optimization for performance"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"indexing",children:"Indexing"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Optimized database queries for common filters"}),"\n",(0,s.jsx)(n.li,{children:"Compound indexes for sort combinations"}),"\n",(0,s.jsx)(n.li,{children:"Efficient pagination with Firestore cursors"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"testing-examples",children:"Testing Examples"}),"\n",(0,s.jsx)(n.h3,{id:"unit-test-example",children:"Unit Test Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"describe('GET /api/confidential/entities', () => {\n  it('should return confidential entities for CONFIDENTIAL user', async () => {\n    const response = await request(app)\n      .get('/api/confidential/entities?page=1&limit=10')\n      .set('Authorization', `Bearer ${confidentialUserToken}`)\n      .expect(200);\n\n    expect(response.body).toHaveProperty('entities');\n    expect(response.body).toHaveProperty('totalPages');\n    expect(response.body).toHaveProperty('totalEntities');\n    expect(response.body.entities).toBeInstanceOf(Array);\n\n    // Verify all entities are marked as confidential\n    response.body.entities.forEach(entity => {\n      expect(entity.isConfidential).toBe(true);\n    });\n  });\n\n  it('should return 403 for regular user', async () => {\n    const response = await request(app)\n      .get('/api/confidential/entities')\n      .set('Authorization', `Bearer ${regularUserToken}`)\n      .expect(403);\n\n    expect(response.body.error).toBe('Permission denied');\n  });\n\n  it('should return 401 for unauthenticated request', async () => {\n    const response = await request(app)\n      .get('/api/confidential/entities')\n      .expect(401);\n\n    expect(response.body.error).toBe('Unauthorized');\n  });\n\n  it('should support pagination parameters', async () => {\n    const response = await request(app)\n      .get('/api/confidential/entities?page=2&limit=5&sort=name:asc')\n      .set('Authorization', `Bearer ${adminToken}`)\n      .expect(200);\n\n    expect(response.body.entities.length).toBeLessThanOrEqual(5);\n  });\n\n  it('should support filtering by status', async () => {\n    const response = await request(app)\n      .get('/api/confidential/entities?filter=active')\n      .set('Authorization', `Bearer ${confidentialUserToken}`)\n      .expect(200);\n\n    response.body.entities.forEach(entity => {\n      expect(entity.status).toBe('active');\n    });\n  });\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"related-endpoints",children:"Related Endpoints"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/entities/get-by-id",children:"Entity Details"})," - Get specific entity information"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/entities/list",children:"Regular Entities"})," - Browse public entities"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/opportunities/confidential",children:"Confidential Opportunities"})," - Access confidential opportunities"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/api/profile",children:"User Profile"})," - Check user role and permissions"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"for-developers",children:"For Developers"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Role Verification"}),": Always verify user has appropriate role before making requests"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Error Handling"}),": Implement proper error handling for 401/403 responses"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"No Caching"}),": Respect no-cache headers for security"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pagination"}),": Use proper pagination for large datasets"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Loading States"}),": Show appropriate loading indicators"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"for-administrators",children:"For Administrators"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Access Reviews"}),": Regularly review who has CONFIDENTIAL access"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Audit Monitoring"}),": Monitor access logs for suspicious activity"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Role Management"}),": Carefully manage CONFIDENTIAL role assignments"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Security Training"}),": Ensure team understands confidential data handling"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"for-security",children:"For Security"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"HTTPS Only"}),": Never access over HTTP in production"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Token Management"}),": Secure JWT token storage and transmission"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Session Monitoring"}),": Monitor for unusual access patterns"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Data Classification"}),": Ensure confidential entities are properly marked"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"changelog",children:"Changelog"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"v1.0.0"})," - Initial implementation with basic confidential access"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"v1.1.0"})," - Added pagination and filtering support"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"v1.2.0"})," - Enhanced security with no-cache headers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"v1.3.0"})," - Improved error handling and logging"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"v1.4.0"})," - Added audit logging and access monitoring"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);