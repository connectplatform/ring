"use strict";(self.webpackChunkring_docs=self.webpackChunkring_docs||[]).push([[2483],{28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>c});var s=t(96540);const i={},r=s.createContext(i);function l(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:n},e.children)}},73771:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"api/comments/list","title":"Comments API","description":"Overview","source":"@site/docs/uk/api/comments/list.md","sourceDirName":"api/comments","slug":"/api/comments/list","permalink":"/ring/uk/api/comments/list","draft":false,"unlisted":false,"editUrl":"https://github.com/connectplatform/ring/ring-docs/tree/main/docs/uk/api/comments/list.md","tags":[],"version":"current","lastUpdatedAt":1750331037000,"frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"Notification Preferences API","permalink":"/ring/uk/api/notifications/preferences"},"next":{"title":"Comment Likes API","permalink":"/ring/uk/api/comments/likes"}}');var i=t(74848),r=t(28453);const l={},c="Comments API",d={},a=[{value:"Overview",id:"overview",level:2},{value:"Endpoints",id:"endpoints",level:2},{value:"Get Comments",id:"get-comments",level:3},{value:"Create Comment",id:"create-comment",level:3},{value:"Update Comment",id:"update-comment",level:3},{value:"Delete Comment",id:"delete-comment",level:3},{value:"Authentication",id:"authentication",level:2},{value:"GET /api/comments",id:"get-apicomments",level:2},{value:"Query Parameters",id:"query-parameters",level:3},{value:"Request Example",id:"request-example",level:3},{value:"Response Example",id:"response-example",level:3},{value:"POST /api/comments",id:"post-apicomments",level:2},{value:"Request Body",id:"request-body",level:3},{value:"Request Example",id:"request-example-1",level:3},{value:"Response Example",id:"response-example-1",level:3},{value:"PUT /api/comments",id:"put-apicomments",level:2},{value:"Request Body",id:"request-body-1",level:3},{value:"Request Example",id:"request-example-2",level:3},{value:"Response Example",id:"response-example-2",level:3},{value:"DELETE /api/comments",id:"delete-apicomments",level:2},{value:"Query Parameters",id:"query-parameters-1",level:3},{value:"Request Example",id:"request-example-3",level:3},{value:"Response Example",id:"response-example-3",level:3},{value:"Error Responses",id:"error-responses",level:2},{value:"400 Bad Request",id:"400-bad-request",level:3},{value:"401 Unauthorized",id:"401-unauthorized",level:3},{value:"403 Forbidden",id:"403-forbidden",level:3},{value:"404 Not Found",id:"404-not-found",level:3},{value:"409 Conflict",id:"409-conflict",level:3},{value:"Database Structure",id:"database-structure",level:2},{value:"Comments Collection (Firebase Firestore)",id:"comments-collection-firebase-firestore",level:3},{value:"Target Collections (Updated with comment counts)",id:"target-collections-updated-with-comment-counts",level:3},{value:"Business Logic",id:"business-logic",level:2},{value:"Comment Nesting Rules",id:"comment-nesting-rules",level:3},{value:"Comment Management",id:"comment-management",level:3},{value:"Atomic Operations",id:"atomic-operations",level:3},{value:"Frontend Integration",id:"frontend-integration",level:2},{value:"React 19 with useActionState",id:"react-19-with-useactionstate",level:3},{value:"Server Actions",id:"server-actions",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Performance Optimizations",id:"performance-optimizations",level:2},{value:"Testing",id:"testing",level:2},{value:"Comment Likes Feature \u2764\ufe0f",id:"comment-likes-feature-\ufe0f",level:2},{value:"Comment Likes API",id:"comment-likes-api",level:3},{value:"Database Schema for Likes",id:"database-schema-for-likes",level:3},{value:"Updated Comment Document",id:"updated-comment-document",level:4},{value:"Comment Like Document",id:"comment-like-document",level:4},{value:"Implementation Example",id:"implementation-example",level:3},{value:"Related Endpoints",id:"related-endpoints",level:2},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Basic Comment Thread",id:"basic-comment-thread",level:3},{value:"Changelog",id:"changelog",level:2},{value:"v1.0.0 (Current)",id:"v100-current",level:3}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"comments-api",children:"Comments API"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"The Comments API provides comprehensive commenting functionality for Ring Platform content including news articles, entities, and opportunities. It supports nested comments (replies), CRUD operations, and real-time interactions."}),"\n",(0,i.jsx)(n.h2,{id:"endpoints",children:"Endpoints"}),"\n",(0,i.jsx)(n.h3,{id:"get-comments",children:"Get Comments"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"GET /api/comments\n"})}),"\n",(0,i.jsx)(n.h3,{id:"create-comment",children:"Create Comment"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"POST /api/comments\n"})}),"\n",(0,i.jsx)(n.h3,{id:"update-comment",children:"Update Comment"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"PUT /api/comments\n"})}),"\n",(0,i.jsx)(n.h3,{id:"delete-comment",children:"Delete Comment"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"DELETE /api/comments\n"})}),"\n",(0,i.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Required"}),": Yes - User must be authenticated via NextAuth session for all operations"]}),"\n",(0,i.jsx)(n.h2,{id:"get-apicomments",children:"GET /api/comments"}),"\n",(0,i.jsx)(n.p,{children:"Retrieve comments for a specific target with filtering and pagination support."}),"\n",(0,i.jsx)(n.h3,{id:"query-parameters",children:"Query Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"targetType"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsxs)(n.td,{children:["Type of target: ",(0,i.jsx)(n.code,{children:"'news'"}),", ",(0,i.jsx)(n.code,{children:"'entity'"}),", ",(0,i.jsx)(n.code,{children:"'opportunity'"}),", or ",(0,i.jsx)(n.code,{children:"'comment'"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"targetId"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"ID of the target item"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"page"})}),(0,i.jsx)(n.td,{children:"number"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Page number for pagination (default: 1)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"limit"})}),(0,i.jsx)(n.td,{children:"number"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Number of comments per page (default: 10, max: 50)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"sortBy"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsxs)(n.td,{children:["Sort field: ",(0,i.jsx)(n.code,{children:"'createdAt'"})," or ",(0,i.jsx)(n.code,{children:"'updatedAt'"})," (default: 'createdAt')"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"sortOrder"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsxs)(n.td,{children:["Sort order: ",(0,i.jsx)(n.code,{children:"'asc'"})," or ",(0,i.jsx)(n.code,{children:"'desc'"})," (default: 'desc')"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"level"})}),(0,i.jsx)(n.td,{children:"number"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Comment nesting level filter (0-3)"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"request-example",children:"Request Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl "https://ring.ck.ua/api/comments?targetType=news&targetId=news123&page=1&limit=20" \\\n  -H "Cookie: next-auth.session-token=..."\n'})}),"\n",(0,i.jsx)(n.h3,{id:"response-example",children:"Response Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "success": true,\n  "data": {\n    "comments": [\n      {\n        "id": "comment123",\n        "content": "Great article! Really insightful.",\n        "authorId": "user456",\n        "authorName": "John Doe",\n        "authorAvatar": "https://example.com/avatar.jpg",\n        "targetType": "news",\n        "targetId": "news123",\n        "parentId": null,\n        "level": 0,\n        "replyCount": 2,\n        "createdAt": "2024-01-15T10:30:00Z",\n        "updatedAt": "2024-01-15T10:30:00Z",\n        "replies": [\n          {\n            "id": "comment124",\n            "content": "I agree completely!",\n            "authorId": "user789",\n            "authorName": "Jane Smith",\n            "authorAvatar": "https://example.com/avatar2.jpg",\n            "targetType": "comment",\n            "targetId": "comment123",\n            "parentId": "comment123",\n            "level": 1,\n            "replyCount": 0,\n            "createdAt": "2024-01-15T11:00:00Z",\n            "updatedAt": "2024-01-15T11:00:00Z"\n          }\n        ]\n      }\n    ],\n    "pagination": {\n      "page": 1,\n      "limit": 20,\n      "total": 45,\n      "totalPages": 3,\n      "hasNext": true,\n      "hasPrev": false\n    },\n    "stats": {\n      "totalComments": 45,\n      "totalTopLevel": 30,\n      "totalReplies": 15\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"post-apicomments",children:"POST /api/comments"}),"\n",(0,i.jsx)(n.p,{children:"Create a new comment or reply to an existing comment."}),"\n",(0,i.jsx)(n.h3,{id:"request-body",children:"Request Body"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"content"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"Comment content (1-2000 characters)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"targetType"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsxs)(n.td,{children:["Type: ",(0,i.jsx)(n.code,{children:"'news'"}),", ",(0,i.jsx)(n.code,{children:"'entity'"}),", ",(0,i.jsx)(n.code,{children:"'opportunity'"}),", or ",(0,i.jsx)(n.code,{children:"'comment'"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"targetId"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"ID of the target item"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"parentId"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"ID of parent comment (for replies)"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"request-example-1",children:"Request Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST https://ring.ck.ua/api/comments \\\n  -H "Content-Type: application/json" \\\n  -H "Cookie: next-auth.session-token=..." \\\n  -d \'{\n    "content": "This is a great point! Thanks for sharing.",\n    "targetType": "news",\n    "targetId": "news123",\n    "parentId": "comment456"\n  }\'\n'})}),"\n",(0,i.jsx)(n.h3,{id:"response-example-1",children:"Response Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "success": true,\n  "message": "Comment created successfully",\n  "data": {\n    "id": "comment789",\n    "content": "This is a great point! Thanks for sharing.",\n    "authorId": "user123",\n    "authorName": "Alice Johnson",\n    "authorAvatar": "https://example.com/avatar3.jpg",\n    "targetType": "comment",\n    "targetId": "comment456",\n    "parentId": "comment456",\n    "level": 2,\n    "replyCount": 0,\n    "createdAt": "2024-01-15T12:00:00Z",\n    "updatedAt": "2024-01-15T12:00:00Z"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"put-apicomments",children:"PUT /api/comments"}),"\n",(0,i.jsx)(n.p,{children:"Update an existing comment (only by the original author)."}),"\n",(0,i.jsx)(n.h3,{id:"request-body-1",children:"Request Body"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"id"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"Comment ID to update"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"content"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"Updated comment content (1-2000 characters)"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"request-example-2",children:"Request Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X PUT https://ring.ck.ua/api/comments \\\n  -H "Content-Type: application/json" \\\n  -H "Cookie: next-auth.session-token=..." \\\n  -d \'{\n    "id": "comment789",\n    "content": "This is an updated comment with better wording."\n  }\'\n'})}),"\n",(0,i.jsx)(n.h3,{id:"response-example-2",children:"Response Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "success": true,\n  "message": "Comment updated successfully",\n  "data": {\n    "id": "comment789",\n    "content": "This is an updated comment with better wording.",\n    "updatedAt": "2024-01-15T12:30:00Z"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"delete-apicomments",children:"DELETE /api/comments"}),"\n",(0,i.jsx)(n.p,{children:"Delete a comment (only by the original author or admin)."}),"\n",(0,i.jsx)(n.h3,{id:"query-parameters-1",children:"Query Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"id"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"Comment ID to delete"})]})})]}),"\n",(0,i.jsx)(n.h3,{id:"request-example-3",children:"Request Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X DELETE "https://ring.ck.ua/api/comments?id=comment789" \\\n  -H "Cookie: next-auth.session-token=..."\n'})}),"\n",(0,i.jsx)(n.h3,{id:"response-example-3",children:"Response Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "success": true,\n  "message": "Comment deleted successfully"\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"error-responses",children:"Error Responses"}),"\n",(0,i.jsx)(n.h3,{id:"400-bad-request",children:"400 Bad Request"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "success": false,\n  "error": "Content is required and must be between 1-2000 characters"\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"401-unauthorized",children:"401 Unauthorized"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "success": false,\n  "error": "Authentication required"\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"403-forbidden",children:"403 Forbidden"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "success": false,\n  "error": "You can only edit your own comments"\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"404-not-found",children:"404 Not Found"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "success": false,\n  "error": "Comment not found"\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"409-conflict",children:"409 Conflict"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "success": false,\n  "error": "Maximum nesting level (3) exceeded"\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"database-structure",children:"Database Structure"}),"\n",(0,i.jsx)(n.h3,{id:"comments-collection-firebase-firestore",children:"Comments Collection (Firebase Firestore)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"interface Comment {\n  id: string;              // Auto-generated document ID\n  content: string;         // Comment text (1-2000 chars)\n  authorId: string;        // ID of comment author\n  authorName: string;      // Author's display name\n  authorAvatar?: string;   // Author's avatar URL\n  targetType: 'news' | 'entity' | 'opportunity' | 'comment';\n  targetId: string;        // ID of target item\n  parentId?: string;       // ID of parent comment (for replies)\n  level: number;           // Nesting level (0-3)\n  replyCount: number;      // Number of direct replies\n  createdAt: Timestamp;    // Creation timestamp\n  updatedAt: Timestamp;    // Last update timestamp\n  isDeleted?: boolean;     // Soft delete flag\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"target-collections-updated-with-comment-counts",children:"Target Collections (Updated with comment counts)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// News, entities, and opportunities get updated comment counts\ninterface TargetWithComments {\n  id: string;\n  // ... other fields\n  commentCount: number;    // Total number of comments\n  updatedAt: Timestamp;\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"business-logic",children:"Business Logic"}),"\n",(0,i.jsx)(n.h3,{id:"comment-nesting-rules",children:"Comment Nesting Rules"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Maximum nesting level"}),": 3 levels deep"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Level 0"}),": Top-level comments on content"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Level 1-3"}),": Replies to comments"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reply structure"}),": Each reply increases level by 1"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"comment-management",children:"Comment Management"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Creation"}),": Automatically increments target's comment count"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Deletion"}),": Soft delete to preserve reply structure"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Updates"}),": Only by original author within reasonable time"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Moderation"}),": Admin users can delete any comment"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"atomic-operations",children:"Atomic Operations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Uses Firebase transactions for consistent comment counts"}),"\n",(0,i.jsx)(n.li,{children:"Prevents race conditions during concurrent operations"}),"\n",(0,i.jsx)(n.li,{children:"Maintains data integrity across related collections"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"frontend-integration",children:"Frontend Integration"}),"\n",(0,i.jsx)(n.h3,{id:"react-19-with-useactionstate",children:"React 19 with useActionState"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { useActionState, useOptimistic } from 'react';\nimport { createComment } from '@/app/actions/comments';\n\nfunction CommentForm({ targetType, targetId, parentId = null, onSuccess }) {\n  const [optimisticComments, addOptimisticComment] = useOptimistic(\n    [],\n    (state, newComment) => [...state, { ...newComment, id: 'temp-' + Date.now() }]\n  );\n\n  const [state, formAction, isPending] = useActionState(\n    async (prevState, formData) => {\n      const content = formData.get('content') as string;\n      \n      // Add optimistic comment\n      addOptimisticComment({\n        content,\n        authorName: 'You',\n        createdAt: new Date().toISOString(),\n        level: parentId ? 1 : 0\n      });\n\n      const result = await createComment({\n        content,\n        targetType,\n        targetId,\n        parentId\n      });\n\n      if (result.success) {\n        onSuccess?.(result.data);\n      }\n\n      return result;\n    },\n    { success: false }\n  );\n\n  return (\n    <form action={formAction}>\n      <textarea\n        name=\"content\"\n        placeholder=\"Write a comment...\"\n        maxLength={2000}\n        required\n      />\n      <button type=\"submit\" disabled={isPending}>\n        {isPending ? 'Posting...' : 'Post Comment'}\n      </button>\n      {!state.success && state.error && (\n        <p className=\"error\">{state.error}</p>\n      )}\n    </form>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"server-actions",children:"Server Actions"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// app/actions/comments.ts\nexport async function createComment(data: CommentFormData) {\n  const response = await fetch('/api/comments', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data)\n  });\n  \n  return response.json();\n}\n\nexport async function editComment(id: string, content: string) {\n  const response = await fetch('/api/comments', {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ id, content })\n  });\n  \n  return response.json();\n}\n\nexport async function deleteComment(id: string) {\n  const response = await fetch(`/api/comments?id=${id}`, {\n    method: 'DELETE'\n  });\n  \n  return response.json();\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Authentication"}),": All operations require valid NextAuth session"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Authorization"}),": Users can only edit/delete their own comments"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Content Validation"}),": Strict input validation and sanitization"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rate Limiting"}),": Implement rate limiting for comment creation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Spam Prevention"}),": Content filtering and user reputation system"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"XSS Prevention"}),": Content sanitization before storage and display"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"performance-optimizations",children:"Performance Optimizations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pagination"}),": Efficient pagination for large comment threads"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Indexing"}),": Optimized database indexes for common queries"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Caching"}),": Consider caching frequently accessed comment threads"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Lazy Loading"}),": Load replies on demand to improve initial page load"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Optimistic Updates"}),": Immediate UI feedback while processing"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,i.jsxs)(n.p,{children:["See the ",(0,i.jsx)(n.a,{href:"https://github.com/connectplatform/ring/blob/main/my-docs/notebooks/api-testing/ring-comments-system.ipynb",children:"Comments Testing Notebook"})," for interactive testing examples and comprehensive test scenarios."]}),"\n",(0,i.jsx)(n.h2,{id:"comment-likes-feature-\ufe0f",children:"Comment Likes Feature \u2764\ufe0f"}),"\n",(0,i.jsx)(n.p,{children:"Comments are now fully likable! Each comment includes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Like count"}),": Real-time tracking of likes per comment"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User like status"}),": Track which comments each user has liked"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Optimistic UI"}),": Instant feedback with React 19 useOptimistic"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Analytics"}),": Track engagement with comment interactions"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"comment-likes-api",children:"Comment Likes API"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Method"}),(0,i.jsx)(n.th,{children:"Endpoint"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"POST"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/api/comments/[id]/like"})}),(0,i.jsx)(n.td,{children:"Like/unlike a comment (toggles)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"GET"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/api/comments/[id]/like"})}),(0,i.jsx)(n.td,{children:"Get like status for current user"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"database-schema-for-likes",children:"Database Schema for Likes"}),"\n",(0,i.jsx)(n.h4,{id:"updated-comment-document",children:"Updated Comment Document"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": "comment123",\n  "content": "Great article! Very informative.",\n  "authorId": "user456",\n  "authorName": "John Doe",\n  "authorAvatar": "https://example.com/avatar.jpg",\n  "targetId": "news789",\n  "targetType": "news",\n  "parentId": null,\n  "level": 0,\n  "likes": 15,\n  "replies": 2,\n  "status": "active",\n  "isEdited": false,\n  "isPinned": false,\n  "createdAt": "2024-01-15T10:30:00Z",\n  "updatedAt": "2024-01-15T14:22:00Z",\n  "editedAt": null\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"comment-like-document",children:"Comment Like Document"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": "comment123_user456",\n  "commentId": "comment123",\n  "userId": "user456",\n  "userName": "John Doe",\n  "userAvatar": "https://example.com/avatar.jpg",\n  "createdAt": "2024-01-15T14:22:00Z"\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"implementation-example",children:"Implementation Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { useState } from 'react'\n\nfunction CommentWithLikes({ comment, currentUser }) {\n  const [liked, setLiked] = useState(comment.userLiked)\n  const [likes, setLikes] = useState(comment.likes)\n  const [loading, setLoading] = useState(false)\n\n  const toggleLike = async () => {\n    // Optimistic update\n    setLiked(!liked)\n    setLikes(liked ? likes - 1 : likes + 1)\n    setLoading(true)\n\n    try {\n      const response = await fetch(`/api/comments/${comment.id}/like`, {\n        method: 'POST'\n      })\n      \n      const result = await response.json()\n      setLiked(result.data.liked)\n      setLikes(result.data.likes)\n    } catch (error) {\n      // Revert on error\n      setLiked(liked)\n      setLikes(comment.likes)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"comment\">\n      <p>{comment.content}</p>\n      <div className=\"comment-actions\">\n        <button \n          onClick={toggleLike}\n          disabled={loading}\n          className={liked ? 'liked' : ''}\n        >\n          {liked ? '\u2764\ufe0f' : '\ud83e\udd0d'} {likes}\n        </button>\n        <span>Reply ({comment.replies})</span>\n      </div>\n    </div>\n  )\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"related-endpoints",children:"Related Endpoints"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/ring/uk/api/comments/likes",children:"Comment Likes API"})," - For liking individual comments"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/ring/uk/api/news/likes",children:"News Likes API"})," - For liking news articles"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/ring/uk/api/news/list",children:"News API"})," - For news article management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/ring/uk/api/notifications/list",children:"Notifications API"})," - For comment notifications"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,i.jsx)(n.h3,{id:"basic-comment-thread",children:"Basic Comment Thread"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// Get comments for a news article\nconst response = await fetch(\'/api/comments?targetType=news&targetId=news123\');\nconst { data } = await response.json();\n\n// Display nested comments\nfunction CommentThread({ comments }) {\n  return (\n    <div className="comment-thread">\n      {comments.map(comment => (\n        <div key={comment.id} className={`comment level-${comment.level}`}>\n          <div className="comment-content">\n            <strong>{comment.authorName}</strong>\n            <p>{comment.content}</p>\n            <small>{new Date(comment.createdAt).toLocaleDateString()}</small>\n          </div>\n          {comment.replies && comment.replies.length > 0 && (\n            <div className="replies">\n              <CommentThread comments={comment.replies} />\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"changelog",children:"Changelog"}),"\n",(0,i.jsx)(n.h3,{id:"v100-current",children:"v1.0.0 (Current)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Initial implementation with full CRUD operations"}),"\n",(0,i.jsx)(n.li,{children:"Nested commenting system (3 levels deep)"}),"\n",(0,i.jsx)(n.li,{children:"React 19 optimistic updates support"}),"\n",(0,i.jsx)(n.li,{children:"Firebase Firestore integration"}),"\n",(0,i.jsx)(n.li,{children:"Comprehensive filtering and pagination"}),"\n",(0,i.jsx)(n.li,{children:"Real-time comment counts"}),"\n",(0,i.jsx)(n.li,{children:"Soft delete functionality"}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);