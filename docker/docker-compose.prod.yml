# Ring Platform - Production Docker Compose Override
# Production-specific configurations with SSL, monitoring, and optimization

version: '3.8'

services:
  ring-app:
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:alpine
    container_name: ring-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - ring-nginx-cache:/var/cache/nginx
      - ring-nginx-logs:/var/log/nginx
    networks:
      - ring-network
    depends_on:
      - ring-app
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru --save 900 1 --save 300 10 --save 60 10000
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  mongodb:
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.2'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Log aggregation
  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    container_name: ring-fluentd
    volumes:
      - ./docker/fluentd/fluent.conf:/fluentd/etc/fluent.conf:ro
      - ring-logs:/var/log/ring
    networks:
      - ring-network
    restart: unless-stopped
    profiles:
      - logging

  # Backup service
  backup:
    image: alpine:latest
    container_name: ring-backup
    volumes:
      - ring-mongodb-data:/data/mongodb:ro
      - ring-redis-data:/data/redis:ro
      - ./backups:/backups
    networks:
      - ring-network
    restart: "no"
    profiles:
      - backup
    command: |
      sh -c "
        apk add --no-cache mongodb-tools redis
        while true; do
          echo 'Starting backup...'
          mongodump --host mongodb:27017 --username ring --password ring_password_2024 --authenticationDatabase admin --out /backups/mongodb-$(date +%Y%m%d_%H%M%S)
          redis-cli -h redis --rdb /backups/redis-$(date +%Y%m%d_%H%M%S).rdb
          find /backups -name 'mongodb-*' -mtime +7 -exec rm -rf {} +
          find /backups -name 'redis-*' -mtime +7 -delete
          echo 'Backup completed'
          sleep 86400
        done
      "

volumes:
  ring-nginx-cache:
    driver: local
  ring-nginx-logs:
    driver: local

networks:
  ring-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
