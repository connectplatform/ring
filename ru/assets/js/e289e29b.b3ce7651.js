"use strict";(self.webpackChunkring_docs=self.webpackChunkring_docs||[]).push([[9323],{30461:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"api/set-user-role","title":"User Role Assignment","description":"Overview","source":"@site/docs/api/set-user-role.md","sourceDirName":"api","slug":"/api/set-user-role","permalink":"/ring/ru/docs/api/set-user-role","draft":false,"unlisted":false,"editUrl":"https://github.com/connectplatform/ring/ring-docs/tree/main/docs/api/set-user-role.md","tags":[],"version":"current","lastUpdatedAt":1750255417000,"frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"User Settings Management","permalink":"/ring/ru/docs/api/settings"},"next":{"title":"Admin User Management","permalink":"/ring/ru/docs/api/admin-users"}}');var i=s(74848),t=s(28453);const o={},l="User Role Assignment",a={},d=[{value:"Overview",id:"overview",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Endpoint Details",id:"endpoint-details",level:2},{value:"Request",id:"request",level:2},{value:"Body Parameters",id:"body-parameters",level:3},{value:"Available Roles",id:"available-roles",level:3},{value:"Request Example",id:"request-example",level:3},{value:"Response",id:"response",level:2},{value:"Success Response (200)",id:"success-response-200",level:3},{value:"Code Examples",id:"code-examples",level:2},{value:"JavaScript/TypeScript",id:"javascripttypescript",level:3},{value:"React Component",id:"react-component",level:3},{value:"cURL Example",id:"curl-example",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Unauthorized Access (403)",id:"unauthorized-access-403",level:3},{value:"User Not Found (404)",id:"user-not-found-404",level:3},{value:"Invalid Role (400)",id:"invalid-role-400",level:3},{value:"Cannot Assign Admin Role (400)",id:"cannot-assign-admin-role-400",level:3},{value:"Self-Assignment Restriction (400)",id:"self-assignment-restriction-400",level:3},{value:"Role Hierarchy and Permissions",id:"role-hierarchy-and-permissions",level:2},{value:"Permission Matrix",id:"permission-matrix",level:3},{value:"Role Transition Rules",id:"role-transition-rules",level:3},{value:"Notification System",id:"notification-system",level:2},{value:"Role Change Notifications",id:"role-change-notifications",level:3},{value:"Email Notification",id:"email-notification",level:4},{value:"In-App Notification",id:"in-app-notification",level:4},{value:"Audit and Logging",id:"audit-and-logging",level:2},{value:"Role Change Audit Log",id:"role-change-audit-log",level:3},{value:"Audit Log Example",id:"audit-log-example",level:3},{value:"Security Features",id:"security-features",level:2},{value:"Access Control",id:"access-control",level:3},{value:"Rate Limiting",id:"rate-limiting",level:3},{value:"Validation",id:"validation",level:3},{value:"Related Endpoints",id:"related-endpoints",level:2},{value:"Testing",id:"testing",level:2},{value:"Unit Tests",id:"unit-tests",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"user-role-assignment",children:"User Role Assignment"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"/api/set-user-role"})," endpoint allows authorized users to assign roles to other users. This endpoint is primarily used for role management and user promotion within the Ring Platform hierarchy."]}),"\n",(0,i.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Required"}),": Admin role or specific permissions\n",(0,i.jsx)(n.strong,{children:"Rate Limit"}),": 60 requests per minute for admins, 10 for other authorized users"]}),"\n",(0,i.jsx)(n.h2,{id:"endpoint-details",children:"Endpoint Details"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:"POST /api/set-user-role\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Headers:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:"Authorization: Bearer <session-token>\nContent-Type: application/json\n"})}),"\n",(0,i.jsx)(n.h2,{id:"request",children:"Request"}),"\n",(0,i.jsx)(n.h3,{id:"body-parameters",children:"Body Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"userId"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"Target user ID"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"role"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"New role to assign"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"reason"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Reason for role change"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"notifyUser"})}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Send notification to user (default: true)"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"available-roles",children:"Available Roles"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Role"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Permissions"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"visitor"})}),(0,i.jsx)(n.td,{children:"Basic access"}),(0,i.jsx)(n.td,{children:"View public content only"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"subscriber"})}),(0,i.jsx)(n.td,{children:"Newsletter access"}),(0,i.jsx)(n.td,{children:"Public content + newsletters"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"member"})}),(0,i.jsx)(n.td,{children:"Full platform access"}),(0,i.jsx)(n.td,{children:"All public features + entity/opportunity creation"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"confidential"})}),(0,i.jsx)(n.td,{children:"Premium access"}),(0,i.jsx)(n.td,{children:"Member features + confidential content"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"admin"})}),(0,i.jsx)(n.td,{children:"Administrative access"}),(0,i.jsx)(n.td,{children:"Full platform control"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"request-example",children:"Request Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "userId": "user_123",\n  "role": "member",\n  "reason": "User completed verification process",\n  "notifyUser": true\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"response",children:"Response"}),"\n",(0,i.jsx)(n.h3,{id:"success-response-200",children:"Success Response (200)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "success": true,\n  "message": "User role updated successfully",\n  "data": {\n    "userId": "user_123",\n    "previousRole": "subscriber",\n    "newRole": "member",\n    "updatedBy": "admin_456",\n    "updatedAt": "2024-12-14T16:00:00Z",\n    "reason": "User completed verification process",\n    "notificationSent": true\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,i.jsx)(n.h3,{id:"javascripttypescript",children:"JavaScript/TypeScript"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Role assignment service\nclass RoleService {\n  async assignRole(\n    userId: string, \n    role: string, \n    reason?: string, \n    notifyUser = true\n  ) {\n    try {\n      const response = await fetch('/api/set-user-role', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${this.getSessionToken()}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          role,\n          reason,\n          notifyUser\n        })\n      })\n      \n      if (!response.ok) {\n        const error = await response.json()\n        throw new Error(error.message || 'Failed to assign role')\n      }\n      \n      return await response.json()\n    } catch (error) {\n      console.error('Error assigning role:', error)\n      throw error\n    }\n  }\n  \n  async promoteToMember(userId: string, reason?: string) {\n    return this.assignRole(userId, 'member', reason)\n  }\n  \n  async promoteToConfidential(userId: string, reason?: string) {\n    return this.assignRole(userId, 'confidential', reason)\n  }\n  \n  async demoteToSubscriber(userId: string, reason?: string) {\n    return this.assignRole(userId, 'subscriber', reason)\n  }\n  \n  private getSessionToken(): string {\n    // Implementation to get session token\n    return localStorage.getItem('sessionToken') || ''\n  }\n}\n\n// Usage example\nconst roleService = new RoleService()\n\n// Promote user to member\nawait roleService.promoteToMember(\n  'user_123', \n  'User completed onboarding process'\n)\n\n// Assign confidential role\nawait roleService.assignRole(\n  'user_456',\n  'confidential',\n  'Verified industry professional',\n  true\n)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"react-component",children:"React Component"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { useState } from 'react'\nimport { useSession } from 'next-auth/react'\n\ninterface RoleAssignmentProps {\n  userId: string\n  currentRole: string\n  onRoleChanged?: (newRole: string) => void\n}\n\nexport function RoleAssignment({ \n  userId, \n  currentRole, \n  onRoleChanged \n}: RoleAssignmentProps) {\n  const { data: session } = useSession()\n  const [selectedRole, setSelectedRole] = useState(currentRole)\n  const [reason, setReason] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  \n  const roles = [\n    { value: 'visitor', label: 'Visitor', description: 'Basic access' },\n    { value: 'subscriber', label: 'Subscriber', description: 'Newsletter access' },\n    { value: 'member', label: 'Member', description: 'Full platform access' },\n    { value: 'confidential', label: 'Confidential', description: 'Premium access' },\n    { value: 'admin', label: 'Admin', description: 'Administrative access' }\n  ]\n  \n  const handleRoleChange = async () => {\n    if (selectedRole === currentRole) {\n      setMessage('No change in role')\n      return\n    }\n    \n    try {\n      setLoading(true)\n      setMessage('')\n      \n      const response = await fetch('/api/set-user-role', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          role: selectedRole,\n          reason: reason || `Role changed from ${currentRole} to ${selectedRole}`,\n          notifyUser: true\n        })\n      })\n      \n      if (!response.ok) {\n        const error = await response.json()\n        throw new Error(error.message)\n      }\n      \n      const result = await response.json()\n      setMessage('Role updated successfully')\n      onRoleChanged?.(selectedRole)\n      \n    } catch (error) {\n      setMessage(`Error: ${error.message}`)\n    } finally {\n      setLoading(false)\n    }\n  }\n  \n  // Only show to admins or authorized users\n  if (session?.user?.role !== 'admin') {\n    return <div>Access denied. Admin privileges required.</div>\n  }\n  \n  return (\n    <div className=\"role-assignment\">\n      <h3>Role Assignment</h3>\n      \n      <div className=\"current-role\">\n        <strong>Current Role:</strong> {currentRole}\n      </div>\n      \n      <div className=\"role-selector\">\n        <label htmlFor=\"role-select\">New Role:</label>\n        <select\n          id=\"role-select\"\n          value={selectedRole}\n          onChange={(e) => setSelectedRole(e.target.value)}\n          disabled={loading}\n        >\n          {roles.map(role => (\n            <option key={role.value} value={role.value}>\n              {role.label} - {role.description}\n            </option>\n          ))}\n        </select>\n      </div>\n      \n      <div className=\"reason-input\">\n        <label htmlFor=\"reason\">Reason (optional):</label>\n        <textarea\n          id=\"reason\"\n          value={reason}\n          onChange={(e) => setReason(e.target.value)}\n          placeholder=\"Enter reason for role change...\"\n          disabled={loading}\n          rows={3}\n        />\n      </div>\n      \n      <button\n        onClick={handleRoleChange}\n        disabled={loading || selectedRole === currentRole}\n        className=\"update-role-btn\"\n      >\n        {loading ? 'Updating...' : 'Update Role'}\n      </button>\n      \n      {message && (\n        <div className={`message ${message.includes('Error') ? 'error' : 'success'}`}>\n          {message}\n        </div>\n      )}\n    </div>\n  )\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"curl-example",children:"cURL Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Assign member role\ncurl -X POST "https://ring.ck.ua/api/set-user-role" \\\n  -H "Authorization: Bearer admin-session-token" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "userId": "user_123",\n    "role": "member",\n    "reason": "User completed verification process",\n    "notifyUser": true\n  }\'\n\n# Promote to confidential without notification\ncurl -X POST "https://ring.ck.ua/api/set-user-role" \\\n  -H "Authorization: Bearer admin-session-token" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "userId": "user_456",\n    "role": "confidential",\n    "reason": "Industry professional verification",\n    "notifyUser": false\n  }\'\n'})}),"\n",(0,i.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsx)(n.h3,{id:"unauthorized-access-403",children:"Unauthorized Access (403)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "error": "FORBIDDEN",\n  "message": "Insufficient privileges to assign roles",\n  "code": 403\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"user-not-found-404",children:"User Not Found (404)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "error": "USER_NOT_FOUND",\n  "message": "User with specified ID does not exist",\n  "code": 404\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"invalid-role-400",children:"Invalid Role (400)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "error": "INVALID_ROLE",\n  "message": "Invalid role specified",\n  "code": 400,\n  "validRoles": ["visitor", "subscriber", "member", "confidential", "admin"]\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"cannot-assign-admin-role-400",children:"Cannot Assign Admin Role (400)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "error": "ADMIN_ASSIGNMENT_RESTRICTED",\n  "message": "Admin role assignment requires special authorization",\n  "code": 400\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"self-assignment-restriction-400",children:"Self-Assignment Restriction (400)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "error": "SELF_ASSIGNMENT_DENIED",\n  "message": "Cannot modify your own role",\n  "code": 400\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"role-hierarchy-and-permissions",children:"Role Hierarchy and Permissions"}),"\n",(0,i.jsx)(n.h3,{id:"permission-matrix",children:"Permission Matrix"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Feature"}),(0,i.jsx)(n.th,{children:"Visitor"}),(0,i.jsx)(n.th,{children:"Subscriber"}),(0,i.jsx)(n.th,{children:"Member"}),(0,i.jsx)(n.th,{children:"Confidential"}),(0,i.jsx)(n.th,{children:"Admin"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"View public content"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Receive newsletters"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Create entities"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Create opportunities"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Access confidential content"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u2705"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Admin panel access"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"User management"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u274c"}),(0,i.jsx)(n.td,{children:"\u2705"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"role-transition-rules",children:"Role Transition Rules"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"interface RoleTransition {\n  from: string\n  to: string\n  requiresApproval: boolean\n  autoApprove?: boolean\n}\n\nconst roleTransitions: RoleTransition[] = [\n  // Promotions\n  { from: 'visitor', to: 'subscriber', requiresApproval: false, autoApprove: true },\n  { from: 'subscriber', to: 'member', requiresApproval: true },\n  { from: 'member', to: 'confidential', requiresApproval: true },\n  { from: 'confidential', to: 'admin', requiresApproval: true },\n  \n  // Demotions\n  { from: 'admin', to: 'confidential', requiresApproval: true },\n  { from: 'confidential', to: 'member', requiresApproval: false },\n  { from: 'member', to: 'subscriber', requiresApproval: false },\n  { from: 'subscriber', to: 'visitor', requiresApproval: false }\n]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"notification-system",children:"Notification System"}),"\n",(0,i.jsx)(n.h3,{id:"role-change-notifications",children:"Role Change Notifications"}),"\n",(0,i.jsx)(n.p,{children:"When a user's role is changed, they receive notifications through multiple channels:"}),"\n",(0,i.jsx)(n.h4,{id:"email-notification",children:"Email Notification"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"Subject: Your Ring Platform Role Has Been Updated\n\nDear [User Name],\n\nYour role on Ring Platform has been updated:\n- Previous Role: [Previous Role]\n- New Role: [New Role]\n- Updated By: [Admin Name]\n- Reason: [Reason]\n\nYour new permissions are now active. You can explore your enhanced features by logging into your account.\n\nBest regards,\nRing Platform Team\n"})}),"\n",(0,i.jsx)(n.h4,{id:"in-app-notification",children:"In-App Notification"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "type": "role_change",\n  "title": "Role Updated",\n  "message": "Your role has been updated to [New Role]",\n  "data": {\n    "previousRole": "subscriber",\n    "newRole": "member",\n    "updatedBy": "admin@ring.ck.ua",\n    "reason": "User completed verification process"\n  },\n  "priority": "high",\n  "timestamp": "2024-12-14T16:00:00Z"\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"audit-and-logging",children:"Audit and Logging"}),"\n",(0,i.jsx)(n.h3,{id:"role-change-audit-log",children:"Role Change Audit Log"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"interface RoleChangeAuditLog {\n  id: string\n  userId: string\n  userEmail: string\n  previousRole: string\n  newRole: string\n  changedBy: string\n  changedByEmail: string\n  reason?: string\n  timestamp: string\n  ipAddress: string\n  userAgent: string\n  notificationSent: boolean\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"audit-log-example",children:"Audit Log Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": "audit_role_789",\n  "userId": "user_123",\n  "userEmail": "john.doe@example.com",\n  "previousRole": "subscriber",\n  "newRole": "member",\n  "changedBy": "admin_456",\n  "changedByEmail": "admin@ring.ck.ua",\n  "reason": "User completed verification process",\n  "timestamp": "2024-12-14T16:00:00Z",\n  "ipAddress": "192.168.1.100",\n  "userAgent": "Mozilla/5.0...",\n  "notificationSent": true\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"security-features",children:"Security Features"}),"\n",(0,i.jsx)(n.h3,{id:"access-control",children:"Access Control"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Admin Verification"}),": Only admins can assign most roles"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Self-Assignment Prevention"}),": Users cannot change their own roles"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Admin Role Protection"}),": Admin role assignment requires special authorization"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Audit Trail"}),": All role changes are logged and tracked"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Admin Users"}),": 60 requests per minute"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Other Authorized Users"}),": 10 requests per minute"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"IP-based Limiting"}),": Additional protection against abuse"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"validation",children:"Validation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Role Validation"}),": Only valid roles can be assigned"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User Existence"}),": Target user must exist"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Permission Checks"}),": Assigner must have sufficient privileges"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"related-endpoints",children:"Related Endpoints"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/ring/ru/docs/api/admin-users",children:(0,i.jsx)(n.code,{children:"/api/admin/users/[id]/role"})})," - Admin-specific role management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/ring/ru/docs/api/profile",children:(0,i.jsx)(n.code,{children:"/api/profile"})})," - User profile information"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/ring/ru/docs/api/auth-nextauth",children:(0,i.jsx)(n.code,{children:"/api/auth/[...nextauth]"})})," - Authentication"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/ring/ru/docs/api/info",children:(0,i.jsx)(n.code,{children:"/api/info"})})," - Platform role statistics"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,i.jsx)(n.h3,{id:"unit-tests",children:"Unit Tests"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"describe('Role Assignment API', () => {\n  test('should assign role with admin privileges', async () => {\n    const response = await request(app)\n      .post('/api/set-user-role')\n      .set('Authorization', `Bearer ${adminToken}`)\n      .send({\n        userId: 'user_123',\n        role: 'member',\n        reason: 'Test role assignment'\n      })\n      .expect(200)\n    \n    expect(response.body.success).toBe(true)\n    expect(response.body.data.newRole).toBe('member')\n  })\n  \n  test('should reject non-admin role assignment', async () => {\n    await request(app)\n      .post('/api/set-user-role')\n      .set('Authorization', `Bearer ${memberToken}`)\n      .send({\n        userId: 'user_123',\n        role: 'admin'\n      })\n      .expect(403)\n  })\n  \n  test('should prevent self-role assignment', async () => {\n    await request(app)\n      .post('/api/set-user-role')\n      .set('Authorization', `Bearer ${adminToken}`)\n      .send({\n        userId: 'admin_456', // Same as token owner\n        role: 'member'\n      })\n      .expect(400)\n  })\n})\n"})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Issue"}),': "Insufficient privileges to assign roles"\n',(0,i.jsx)(n.strong,{children:"Solution"}),": Ensure user has admin role or specific permissions"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Issue"}),': "Cannot modify your own role"\n',(0,i.jsx)(n.strong,{children:"Solution"}),": Role self-assignment is prohibited for security"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Issue"}),': "Admin role assignment requires special authorization"\n',(0,i.jsx)(n.strong,{children:"Solution"}),": Admin role assignment has additional security requirements"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Issue"}),': "User not found"\n',(0,i.jsx)(n.strong,{children:"Solution"}),": Verify the target user ID exists in the system"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var r=s(96540);const i={},t=r.createContext(i);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);