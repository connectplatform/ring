"use strict";(self.webpackChunkring_docs=self.webpackChunkring_docs||[]).push([[1942],{4388:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api/opportunities","title":"API Layer","description":"This API endpoint allows you to manage opportunities, including retrieving, creating, updating, and deleting opportunities. The opportunities returned are filtered based on the user\'s role and the visibility settings of each opportunity.","source":"@site/docs/api/opportunities.md","sourceDirName":"api","slug":"/api/opportunities","permalink":"/ring/ru/docs/api/opportunities","draft":false,"unlisted":false,"editUrl":"https://github.com/connectplatform/ring/ring-docs/tree/main/docs/api/opportunities.md","tags":[],"version":"current","lastUpdatedAt":1733486397000,"sidebarPosition":2,"frontMatter":{"title":"API Layer","sidebar_position":2},"sidebar":"apiSidebar","previous":{"title":"Service Layer","permalink":"/ring/ru/docs/services/opportunities"},"next":{"title":"Wallet Balance API","permalink":"/ring/ru/docs/api/wallet-balance"}}');var r=i(4848),s=i(8453);const o={title:"API Layer",sidebar_position:2},l="Opportunities API",a={},d=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Get Opportunities",id:"get-opportunities",level:2},{value:"Endpoint",id:"endpoint",level:3},{value:"Authentication",id:"authentication",level:3},{value:"Request Parameters",id:"request-parameters",level:3},{value:"Response",id:"response",level:3},{value:"Error Responses",id:"error-responses",level:3},{value:"Implementation Details",id:"implementation-details",level:3},{value:"Best Practices",id:"best-practices",level:3},{value:"Security Note",id:"security-note",level:3},{value:"Get Confidential Opportunities",id:"get-confidential-opportunities",level:2},{value:"Endpoint",id:"endpoint-1",level:3},{value:"Authentication",id:"authentication-1",level:3},{value:"Response",id:"response-1",level:3},{value:"Error Responses",id:"error-responses-1",level:3},{value:"Implementation Details",id:"implementation-details-1",level:3},{value:"Get Opportunity By ID",id:"get-opportunity-by-id",level:2},{value:"Endpoint",id:"endpoint-2",level:3},{value:"Authentication",id:"authentication-2",level:3},{value:"Request Parameters",id:"request-parameters-1",level:3},{value:"Response",id:"response-2",level:3},{value:"Error Responses",id:"error-responses-2",level:3},{value:"Implementation Details",id:"implementation-details-2",level:3},{value:"Add Opportunity",id:"add-opportunity",level:2},{value:"Endpoint",id:"endpoint-3",level:3},{value:"Authentication",id:"authentication-3",level:3},{value:"Request Body",id:"request-body",level:3},{value:"Response",id:"response-3",level:3},{value:"Success",id:"success",level:4},{value:"Errors",id:"errors",level:4},{value:"Example",id:"example",level:3},{value:"Update Opportunity",id:"update-opportunity",level:2},{value:"Endpoint",id:"endpoint-4",level:3},{value:"Authentication",id:"authentication-4",level:3},{value:"Request Parameters",id:"request-parameters-2",level:3},{value:"Request Body",id:"request-body-1",level:3},{value:"Response",id:"response-4",level:3},{value:"Success",id:"success-1",level:4},{value:"Errors",id:"errors-1",level:4},{value:"Example",id:"example-1",level:3},{value:"Delete Opportunity",id:"delete-opportunity",level:2},{value:"Endpoint",id:"endpoint-5",level:3},{value:"Authentication",id:"authentication-5",level:3},{value:"Request Parameters",id:"request-parameters-3",level:3},{value:"Response",id:"response-5",level:3},{value:"Success",id:"success-2",level:4},{value:"Errors",id:"errors-2",level:4},{value:"Example",id:"example-2",level:3},{value:"API Implementation",id:"api-implementation",level:2},{value:"Get Opportunities",id:"get-opportunities-1",level:3},{value:"Get Confidential Opportunities",id:"get-confidential-opportunities-1",level:3},{value:"Get Opportunity By ID",id:"get-opportunity-by-id-1",level:3},{value:"Add Opportunity",id:"add-opportunity-1",level:3},{value:"Update Opportunity: API Flow Diagram",id:"update-opportunity-api-flow-diagram",level:3},{value:"Delete Opportunity: API Flow Diagram",id:"delete-opportunity-api-flow-diagram",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"opportunities-api",children:"Opportunities API"})}),"\n",(0,r.jsx)(n.p,{children:"This API endpoint allows you to manage opportunities, including retrieving, creating, updating, and deleting opportunities. The opportunities returned are filtered based on the user's role and the visibility settings of each opportunity."}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#get-opportunities",children:"Get Opportunities"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#endpoint",children:"Endpoint"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#authentication",children:"Authentication"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#request-parameters",children:"Request Parameters"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#response",children:"Response"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#error-responses",children:"Error Responses"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#implementation-details",children:"Implementation Details"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#best-practices",children:"Best Practices"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#security-note",children:"Security Note"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#get-confidential-opportunities",children:"Get Confidential Opportunities"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#endpoint-1",children:"Endpoint"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#authentication-1",children:"Authentication"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#response-1",children:"Response"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#error-responses-1",children:"Error Responses"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#implementation-details-1",children:"Implementation Details"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#get-opportunity-by-id",children:"Get Opportunity By ID"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#endpoint-2",children:"Endpoint"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#authentication-2",children:"Authentication"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#request-parameters-1",children:"Request Parameters"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#response-2",children:"Response"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#error-responses-2",children:"Error Responses"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#implementation-details-2",children:"Implementation Details"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#add-opportunity",children:"Add Opportunity"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#endpoint-3",children:"Endpoint"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#authentication-3",children:"Authentication"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#request-body",children:"Request Body"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#response-3",children:"Response"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#error-responses-3",children:"Error Responses"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#implementation-details-3",children:"Implementation Details"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#update-opportunity",children:"Update Opportunity"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#endpoint-4",children:"Endpoint"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#authentication-4",children:"Authentication"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#request-parameters-2",children:"Request Parameters"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#request-body-1",children:"Request Body"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#response-4",children:"Response"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#error-responses-4",children:"Error Responses"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#implementation-details-4",children:"Implementation Details"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#delete-opportunity",children:"Delete Opportunity"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#endpoint-5",children:"Endpoint"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#authentication-5",children:"Authentication"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#request-parameters-3",children:"Request Parameters"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#response-5",children:"Response"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#error-responses-5",children:"Error Responses"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#implementation-details-5",children:"Implementation Details"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#api-implementation",children:"API Implementation"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"get-opportunities",children:"Get Opportunities"}),"\n",(0,r.jsx)(n.h3,{id:"endpoint",children:"Endpoint"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("span",{class:"api-method api-method--get",children:"GET"})," ",(0,r.jsx)(n.code,{children:"/api/opportunities"})]}),"\n",(0,r.jsx)(n.h3,{id:"authentication",children:"Authentication"}),"\n",(0,r.jsx)(n.p,{children:"This endpoint requires authentication. Ensure that the user is logged in and has a valid session."}),"\n",(0,r.jsx)(n.h3,{id:"request-parameters",children:"Request Parameters"}),"\n",(0,r.jsx)(n.p,{children:"This endpoint does not require any request parameters. The user's role is obtained from the authenticated session."}),"\n",(0,r.jsx)(n.h3,{id:"response",children:"Response"}),"\n",(0,r.jsx)(n.p,{children:"The API returns a JSON array of opportunity objects with the following structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"[\n  {\n    id: string;\n    type: OpportunityType;\n    title: string;\n    isConfidential: boolean;\n    briefDescription: string;\n    fullDescription?: string;\n    createdBy: string;\n    organizationId: string;\n    dateCreated: Timestamp;\n    dateUpdated: Timestamp;\n    expirationDate: Timestamp;\n    status: 'active' | 'closed' | 'expired';\n    category: string;\n    tags: string[];\n    location: string;\n    budget?: {\n      min: number;\n      max: number;\n      currency: string;\n    };\n    requiredSkills: string[];\n    requiredDocuments: string[];\n    attachments: Attachment[];\n    visibility: OpportunityVisibility;\n    contactInfo: {\n      linkedEntity: string;\n      contactAccount: string;\n    };\n  },\n  // ... more opportunities\n]\n"})}),"\n",(0,r.jsxs)(n.admonition,{title:"Usage Example",type:"tip",children:[(0,r.jsx)(n.p,{children:"Fetch opportunities for the authenticated user:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const response = await fetch('/api/opportunities', {\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\nconst opportunities = await response.json();\nconsole.log(opportunities); // Array of opportunity objects\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"error-responses",children:"Error Responses"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"401 Unauthorized"}),": If the user is not authenticated."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"403 Forbidden"}),": If the user doesn't have permission to access opportunities."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"500 Internal Server Error"}),": If there's an unexpected error during the process."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"The endpoint first checks if the user is authenticated using Auth.js v5."}),"\n",(0,r.jsx)(n.li,{children:"It retrieves the user's role from the session."}),"\n",(0,r.jsx)(n.li,{children:"A Firestore query is constructed to fetch active opportunities."}),"\n",(0,r.jsxs)(n.li,{children:["If the user's role is not ",(0,r.jsx)(n.code,{children:"admin"})," or ",(0,r.jsx)(n.code,{children:"confidential"}),", the query is further filtered to only include public opportunities."]}),"\n",(0,r.jsx)(n.li,{children:"The fetched opportunities are processed and returned as a JSON array."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.admonition,{title:"Best Practices",type:"info",children:(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Implement proper error handling in your client-side code to manage potential API errors."}),"\n",(0,r.jsx)(n.li,{children:"Consider implementing pagination for large sets of opportunities to improve performance."}),"\n",(0,r.jsx)(n.li,{children:"Use caching mechanisms to reduce database reads for frequently accessed data."}),"\n",(0,r.jsx)(n.li,{children:"Implement rate limiting to prevent abuse of this endpoint."}),"\n",(0,r.jsx)(n.li,{children:"Regularly audit your access control logic to ensure it aligns with your application's security requirements."}),"\n"]})}),"\n",(0,r.jsx)(n.h3,{id:"security-note",children:"Security Note"}),"\n",(0,r.jsx)(n.admonition,{title:"Security Note",type:"caution",children:(0,r.jsx)(n.p,{children:"Ensure that your Firestore security rules are properly configured to prevent unauthorized access to the opportunities collection. The server-side implementation should be the single source of truth for access control."})}),"\n",(0,r.jsx)(n.h2,{id:"get-confidential-opportunities",children:"Get Confidential Opportunities"}),"\n",(0,r.jsx)(n.h3,{id:"endpoint-1",children:"Endpoint"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("span",{class:"api-method api-method--get",children:"GET"})," ",(0,r.jsx)(n.code,{children:"/api/opportunities/confidential"})]}),"\n",(0,r.jsx)(n.h3,{id:"authentication-1",children:"Authentication"}),"\n",(0,r.jsxs)(n.p,{children:["This endpoint requires authentication and is restricted to users with ",(0,r.jsx)(n.code,{children:"admin"})," or ",(0,r.jsx)(n.code,{children:"confidential"})," roles."]}),"\n",(0,r.jsx)(n.h3,{id:"response-1",children:"Response"}),"\n",(0,r.jsx)(n.p,{children:"The API returns a JSON array of confidential opportunity objects with the following structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"[\n  {\n    id: string;\n    type: OpportunityType;\n    title: string;\n    isConfidential: boolean;\n    briefDescription: string;\n    fullDescription?: string;\n    createdBy: string;\n    organizationId: string;\n    dateCreated: Timestamp;\n    dateUpdated: Timestamp;\n    expirationDate: Timestamp;\n    status: 'active' | 'closed' | 'expired';\n    category: string;\n    tags: string[];\n    location: string;\n    budget?: {\n      min: number;\n      max: number;\n      currency: string;\n    };\n    requiredSkills: string[];\n    requiredDocuments: string[];\n    attachments: Attachment[];\n    visibility: OpportunityVisibility;\n    contactInfo: {\n      linkedEntity: string;\n      contactAccount: string;\n    };\n  },\n  // ... more confidential opportunities\n]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"error-responses-1",children:"Error Responses"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"401 Unauthorized"}),": If the user is not authenticated or does not have the required role."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"500 Internal Server Error"}),": If there's an unexpected error during the process."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"implementation-details-1",children:"Implementation Details"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["The endpoint checks if the user is authenticated and has the required role (",(0,r.jsx)(n.code,{children:"admin"})," or ",(0,r.jsx)(n.code,{children:"confidential"}),")."]}),"\n",(0,r.jsx)(n.li,{children:"It retrieves the confidential opportunities from Firestore."}),"\n",(0,r.jsx)(n.li,{children:"The fetched opportunities are processed and returned as a JSON array."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"get-opportunity-by-id",children:"Get Opportunity By ID"}),"\n",(0,r.jsx)(n.h3,{id:"endpoint-2",children:"Endpoint"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("span",{class:"api-method api-method--get",children:"GET"})," ",(0,r.jsx)(n.code,{children:"/api/opportunities/:id"})]}),"\n",(0,r.jsx)(n.h3,{id:"authentication-2",children:"Authentication"}),"\n",(0,r.jsx)(n.p,{children:"This endpoint requires authentication. Ensure that the user is logged in and has a valid session."}),"\n",(0,r.jsx)(n.h3,{id:"request-parameters-1",children:"Request Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"id"}),": The unique ID of the opportunity to retrieve."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"response-2",children:"Response"}),"\n",(0,r.jsx)(n.p,{children:"The API returns a JSON object of the opportunity with the following structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"{\n  id: string;\n  type: OpportunityType;\n  title: string;\n  isConfidential: boolean;\n  briefDescription: string;\n  fullDescription?: string;\n  createdBy: string;\n  organizationId: string;\n  dateCreated: Timestamp;\n  dateUpdated: Timestamp;\n  expirationDate: Timestamp;\n  status: 'active' | 'closed' | 'expired';\n  category: string;\n  tags: string[];\n  location: string;\n  budget?: {\n    min: number;\n    max: number;\n    currency: string;\n  };\n  requiredSkills: string[];\n  requiredDocuments: string[];\n  attachments: Attachment[];\n  visibility: OpportunityVisibility;\n  contactInfo: {\n    linkedEntity: string;\n    contactAccount: string;\n  };\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"error-responses-2",children:"Error Responses"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"401 Unauthorized"}),": If the user is not authenticated."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"403 Forbidden"}),": If the user doesn't have permission to access the opportunity."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"404 Not Found"}),": If the opportunity does not exist."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"500 Internal Server Error"}),": If there's an unexpected error during the process."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"implementation-details-2",children:"Implementation Details"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"The endpoint checks if the user is authenticated."}),"\n",(0,r.jsx)(n.li,{children:"It retrieves the opportunity from Firestore using the provided ID."}),"\n",(0,r.jsx)(n.li,{children:"It checks if the user has access to view the opportunity based on its confidentiality."}),"\n",(0,r.jsx)(n.li,{children:"The fetched opportunity is processed and returned as a JSON object."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"add-opportunity",children:"Add Opportunity"}),"\n",(0,r.jsx)(n.h3,{id:"endpoint-3",children:"Endpoint"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("span",{class:"api-method api-method--post",children:"POST"})," ",(0,r.jsx)(n.code,{children:"/api/opportunities/add"})]}),"\n",(0,r.jsx)(n.h3,{id:"authentication-3",children:"Authentication"}),"\n",(0,r.jsx)(n.p,{children:"This endpoint requires authentication and enforces role-based access control."}),"\n",(0,r.jsx)(n.h3,{id:"request-body",children:"Request Body"}),"\n",(0,r.jsx)(n.p,{children:"The request body must include the opportunity data in the following format:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "type": "offer",\n  "title": "Project Name",\n  "briefDescription": "A short description of the opportunity",\n  "fullDescription": "A detailed description of the opportunity",\n  "isConfidential": false,\n  "category": "IT & Software",\n  "tags": ["tag1", "tag2"],\n  "location": "Remote",\n  "budget": {\n    "min": 1000,\n    "max": 5000,\n    "currency": "USD"\n  },\n  "requiredSkills": ["Skill1", "Skill2"],\n  "expirationDate": "2024-12-31T23:59:59.000Z",\n  "visibility": "public",\n  "contactInfo": {\n    "linkedEntity": "entityId123",\n    "contactAccount": "userId123"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"response-3",children:"Response"}),"\n",(0,r.jsx)(n.h4,{id:"success",children:"Success"}),"\n",(0,r.jsxs)(n.p,{children:["Returns ",(0,r.jsx)(n.code,{children:"201 Created"})," with the newly created opportunity:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "id": "opportunity123",\n  "title": "Project Name",\n  "briefDescription": "A short description",\n  "...otherOpportunityFields": "..."\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"errors",children:"Errors"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"401 Unauthorized"}),": User is not authenticated."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"403 Forbidden"}),": User lacks required role permissions."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"400 Bad Request"}),": Invalid or missing data fields."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"500 Internal Server Error"}),": An error occurred on the server."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const response = await fetch('/api/opportunities/add', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify(opportunityData)\n});\n\nconst result = await response.json();\nif (response.ok) {\n  console.log('Opportunity created:', result);\n} else {\n  console.error('Error creating opportunity:', result.error);\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"update-opportunity",children:"Update Opportunity"}),"\n",(0,r.jsx)(n.h3,{id:"endpoint-4",children:"Endpoint"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("span",{class:"api-method api-method--put",children:"PUT"})," ",(0,r.jsx)(n.code,{children:"/api/opportunities/update/:id"})]}),"\n",(0,r.jsx)(n.h3,{id:"authentication-4",children:"Authentication"}),"\n",(0,r.jsx)(n.p,{children:"This endpoint requires authentication and enforces role-based access controls."}),"\n",(0,r.jsx)(n.h3,{id:"request-parameters-2",children:"Request Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"id"}),": The unique ID of the opportunity being updated (sent in the URL)."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"request-body-1",children:"Request Body"}),"\n",(0,r.jsx)(n.p,{children:"Provide the fields to update in the opportunity (partial updates are allowed):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "title": "Updated Title",\n  "status": "closed",\n  "expirationDate": "2025-01-01T00:00:00.000Z"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"response-4",children:"Response"}),"\n",(0,r.jsx)(n.h4,{id:"success-1",children:"Success"}),"\n",(0,r.jsxs)(n.p,{children:["Returns ",(0,r.jsx)(n.code,{children:"200 OK"})," with the updated opportunity:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "id": "opportunity123",\n  "title": "Updated Title",\n  "status": "closed",\n  "...otherOpportunityFields": "..."\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"errors-1",children:"Errors"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"401 Unauthorized"}),": User is not authenticated."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"403 Forbidden"}),": User lacks permission for this action."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"404 Not Found"}),": No opportunity exists with the provided ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"500 Internal Server Error"}),": An error occurred on the server."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const response = await fetch('/api/opportunities/update/opportunity123', {\n  method: 'PUT',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({ title: 'Updated Opportunity Title', status: 'closed' })\n});\n\nconst result = await response.json();\nif (response.ok) {\n  console.log('Opportunity updated:', result);\n} else {\n  console.error('Error updating opportunity:', result.error);\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"delete-opportunity",children:"Delete Opportunity"}),"\n",(0,r.jsx)(n.h3,{id:"endpoint-5",children:"Endpoint"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)("span",{class:"api-method api-method--delete",children:"DELETE"})," ",(0,r.jsx)(n.code,{children:"/api/opportunities/delete/:id"})]}),"\n",(0,r.jsx)(n.h3,{id:"authentication-5",children:"Authentication"}),"\n",(0,r.jsx)(n.p,{children:"This endpoint requires authentication and enforces role-based access for opportunity deletion."}),"\n",(0,r.jsx)(n.h3,{id:"request-parameters-3",children:"Request Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"id"}),": The unique ID of the opportunity to delete (sent in the URL)."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"response-5",children:"Response"}),"\n",(0,r.jsx)(n.h4,{id:"success-2",children:"Success"}),"\n",(0,r.jsxs)(n.p,{children:["Returns ",(0,r.jsx)(n.code,{children:"204 No Content"})," to indicate the opportunity was successfully deleted."]}),"\n",(0,r.jsx)(n.h4,{id:"errors-2",children:"Errors"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"401 Unauthorized"}),": User is not authenticated."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"403 Forbidden"}),": User lacks permission to delete the opportunity."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"404 Not Found"}),": Opportunity not found."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"500 Internal Server Error"}),": An error occurred on the server."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-2",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const response = await fetch('/api/opportunities/delete/opportunity123', {\n  method: 'DELETE',\n  headers: {\n    'Authorization': 'Bearer your-access-token'\n  }\n});\n\nif (response.ok) {\n  console.log('Opportunity deleted');\n} else {\n  const error = await response.json();\n  console.error('Error deleting opportunity:', error.message);\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"api-implementation",children:"API Implementation"}),"\n",(0,r.jsx)(n.h3,{id:"get-opportunities-1",children:"Get Opportunities"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant Client\n    participant API as Next.js API\n    participant AuthService\n    participant FirebaseService\n\n    Client->>API: GET /api/opportunities\n    API->>AuthService: auth()\n    AuthService--\x3e>API: session\n\n    alt Session is null\n        API--\x3e>Client: 401 Unauthorized\n    else Session is valid\n        API->>API: Determine userRole\n        API->>FirebaseService: getOpportunities()\n        FirebaseService--\x3e>API: opportunities\n\n        API->>API: Filter opportunities based on userRole\n        alt UserRole is admin or confidential\n            API->>API: Return all opportunities\n        else UserRole is member or subscriber\n            alt Opportunity is confidential and userRole is member or subscriber\n                API--\x3e>Client: Filtered opportunities excluding confidential ones\n            else Opportunity is not confidential\n                API--\x3e>Client: Return non-confidential opportunities\n            end\n        end\n\n        API--\x3e>Client: 200 OK with filtered opportunities\n    end\n\n    Note over Client,API: Error handling\n    API->>API: catch (error)\n    API--\x3e>Client: 500 Internal Server Error"}),"\n",(0,r.jsx)(n.h3,{id:"get-confidential-opportunities-1",children:"Get Confidential Opportunities"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant Client\n    participant API as Next.js API\n    participant AuthService\n    participant FirebaseService\n\n    Client->>API: GET /api/opportunities\n    API->>AuthService: auth()\n    AuthService--\x3e>API: session\n\n    alt Session is null\n        API--\x3e>Client: 401 Unauthorized\n    else Session is valid\n        API->>API: hasConfidentialAccess(session)\n        alt User has confidential access\n            API->>FirebaseService: getOpportunities()\n            FirebaseService--\x3e>API: opportunities\n            API->>API: Filter confidential opportunities\n            API--\x3e>Client: JSON with confidential opportunities\n        else User lacks confidential access\n            API--\x3e>Client: 401 Unauthorized\n        end\n    end\n\n    Note over Client,API: Error handling\n    API->>API: catch (error)\n    API--\x3e>Client: 500 Internal Server Error"}),"\n",(0,r.jsx)(n.h3,{id:"get-opportunity-by-id-1",children:"Get Opportunity By ID"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant Client\n    participant API as Ring API\n    participant AuthService\n    participant FirebaseService\n\n    Client->>API: GET /api/opportunities/:id\n    API->>AuthService: auth()\n    AuthService--\x3e>API: session\n\n    alt Session is null\n        API--\x3e>Client: 401 Unauthorized\n    else Session is valid\n        API->>API: hasConfidentialAccess(session)\n        alt User has confidential access\n            API->>FirebaseService: getOpportunityById(id)\n            alt Opportunity not found\n                FirebaseService--\x3e>API: null\n                API--\x3e>Client: 404 Opportunity not found\n            else Opportunity found\n                FirebaseService--\x3e>API: opportunity\n                API->>API: Check if opportunity.isConfidential && !isConfidential\n                alt Opportunity is confidential and user lacks access\n                    API--\x3e>Client: 401 Unauthorized to view confidential opportunities\n                else Opportunity is not confidential or user has access\n                    API--\x3e>Client: 200 OK with opportunity\n                end\n            end\n        else User lacks confidential access\n            API--\x3e>Client: 401 Unauthorized\n        end\n    end\n\n    Note over Client,API: Error handling\n    API->>API: catch (error)\n    API->>Client: 500 Internal Server Error"}),"\n",(0,r.jsx)(n.h3,{id:"add-opportunity-1",children:"Add Opportunity"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant Client\n    participant API as Ring API\n    participant FirebaseService\n\n    Client->>API: POST /api/opportunities/create\n    API->>API: Parse JSON from request\n    API->>API: Convert date strings to Firestore Timestamps\n\n    API->>FirebaseService: addOpportunity(opportunityData)\n    alt Opportunity successfully added\n        FirebaseService--\x3e>API: opportunityId\n        API--\x3e>Client: 201 Created with opportunityId\n    else Error adding opportunity\n        FirebaseService--\x3e>API: error\n        API--\x3e>Client: 500 Internal Server Error\n    end\n\n    Note over Client,API: Error handling\n    API->>API: catch (error)\n    API->>Client: 500 Internal Server Error"}),"\n",(0,r.jsx)(n.h3,{id:"update-opportunity-api-flow-diagram",children:"Update Opportunity: API Flow Diagram"}),"\n",(0,r.jsx)(n.mermaid,{value:" sequenceDiagram\n    participant Client\n    participant API as Ring API\n    participant AuthService\n    participant FirebaseService\n\n    Client->>API: PUT /api/opportunities/update/:id\n    API->>AuthService: auth()\n    AuthService--\x3e>API: session\n\n    alt Session is null\n        API--\x3e>Client: 401 Unauthorized\n    else Session is valid\n        API->>API: hasConfidentialAccess(session)\n        alt User has confidential access\n            API->>Client: Request JSON body\n            Client--\x3e>API: JSON body\n            API->>API: Check if body.isConfidential && !isConfidential\n            alt Body is confidential and user lacks access\n                API--\x3e>Client: 401 Unauthorized to update confidential opportunities\n            else Body is not confidential or user has access\n                API->>FirebaseService: updateOpportunity(id, body)\n                alt Opportunity not found\n                    FirebaseService--\x3e>API: null\n                    API--\x3e>Client: 404 Opportunity not found\n                else Opportunity found\n                    FirebaseService--\x3e>API: updatedOpportunity\n                    API--\x3e>Client: 200 OK with updatedOpportunity\n                end\n            end\n        else User lacks confidential access\n            API--\x3e>Client: 401 Unauthorized\n        end\n    end\n\n    Note over Client,API: Error handling\n    API->>API: catch (error)\n    API->>Client: 500 Internal Server Error"}),"\n",(0,r.jsx)(n.h3,{id:"delete-opportunity-api-flow-diagram",children:"Delete Opportunity: API Flow Diagram"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant Client\n    participant API as Ring API\n    participant AuthService\n    participant FirebaseService\n\n    Client->>API: DELETE /api/opportunities/:id\n    API->>AuthService: auth()\n    AuthService--\x3e>API: session\n\n    alt Session is null\n        API--\x3e>Client: 401 Unauthorized\n    else Session is valid\n        API->>API: hasConfidentialAccess(session)\n        alt User has confidential access\n            API->>FirebaseService: getOpportunityById(id)\n            alt Opportunity not found\n                FirebaseService--\x3e>API: null\n                API--\x3e>Client: 404 Opportunity not found\n            else Opportunity found\n                FirebaseService--\x3e>API: opportunity\n                alt Opportunity is confidential and user lacks access\n                    API--\x3e>Client: 401 Unauthorized to delete confidential opportunities\n                else Opportunity is not confidential or user has access\n                    API->>FirebaseService: deleteOpportunity(id)\n                    FirebaseService--\x3e>API: Success\n                    API--\x3e>Client: 200 Opportunity deleted successfully\n                end\n            end\n        else User lacks confidential access\n            API--\x3e>Client: 401 Unauthorized\n        end\n    end\n\n    Note over Client,API: Error handling\n    API->>API: catch (error)\n    API->>Client: 500 Internal Server Error"}),"\n",(0,r.jsx)(n.p,{children:"This documentation provides a comprehensive overview of the Opportunities API layer, including detailed information on retrieving, creating, updating, and deleting opportunities, along with role-based access control and data confidentiality."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var t=i(6540);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);