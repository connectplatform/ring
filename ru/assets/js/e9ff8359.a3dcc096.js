"use strict";(self.webpackChunkring_docs=self.webpackChunkring_docs||[]).push([[6816],{5801:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"services/opportunities","title":"Service Layer","description":"This document outlines the various functions and services related to managing opportunities in Firestore. It includes detailed information on creating, fetching, and deleting opportunities, along with role-based access control and data confidentiality.","source":"@site/docs/services/opportunities.md","sourceDirName":"services","slug":"/services/opportunities","permalink":"/ring/ru/docs/services/opportunities","draft":false,"unlisted":false,"editUrl":"https://github.com/connectplatform/ring/ring-docs/tree/main/docs/services/opportunities.md","tags":[],"version":"current","lastUpdatedAt":1733486397000,"sidebarPosition":1,"frontMatter":{"title":"Service Layer","sidebar_position":1},"sidebar":"apiSidebar","previous":{"title":"Delete","permalink":"/ring/ru/docs/api/delete-entity"},"next":{"title":"API Layer","permalink":"/ring/ru/docs/api/opportunities"}}');var r=t(4848),s=t(8453),o=t(1470),l=t(9365);const c={title:"Service Layer",sidebar_position:1},d="Opportunities Service Documentation",a={},p=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Create Opportunity",id:"create-opportunity",level:2},{value:"Function Overview",id:"function-overview",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Input",id:"input",level:4},{value:"Opportunity Object Structure",id:"opportunity-object-structure",level:4},{value:"Response",id:"response",level:3},{value:"Success",id:"success",level:4},{value:"Error",id:"error",level:4},{value:"Implementation Details",id:"implementation-details",level:3},{value:"Steps in the Function",id:"steps-in-the-function",level:4},{value:"Example Usage",id:"example-usage",level:3},{value:"Real-Life Use Cases",id:"real-life-use-cases",level:3},{value:"Recruitment",id:"recruitment",level:4},{value:"Business Collaboration",id:"business-collaboration",level:4},{value:"Confidential Projects",id:"confidential-projects",level:4},{value:"Best Practices",id:"best-practices",level:3},{value:"Get Opportunities",id:"get-opportunities",level:2},{value:"Function Overview",id:"function-overview-1",level:3},{value:"Request Parameters",id:"request-parameters",level:3},{value:"Response",id:"response-1",level:3},{value:"Response Details",id:"response-details",level:4},{value:"Example Usage",id:"example-usage-1",level:3},{value:"Get Confidential Opportunities",id:"get-confidential-opportunities",level:2},{value:"Authentication Requirement",id:"authentication-requirement",level:3},{value:"Function Overview",id:"function-overview-2",level:3},{value:"Response",id:"response-2",level:3},{value:"Response Details",id:"response-details-1",level:4},{value:"Example Usage",id:"example-usage-2",level:3},{value:"Get Opportunity By ID",id:"get-opportunity-by-id",level:2},{value:"Function Overview",id:"function-overview-3",level:3},{value:"Response",id:"response-3",level:3},{value:"Response Details",id:"response-details-2",level:4},{value:"Example Usage",id:"example-usage-3",level:3},{value:"Delete Opportunity",id:"delete-opportunity",level:2},{value:"Function Overview",id:"function-overview-4",level:3},{value:"Example Usage",id:"example-usage-4",level:3},{value:"Service Implementations",id:"service-implementations",level:2},{value:"Create Opportunity",id:"create-opportunity-1",level:3},{value:"Delete Opportunity",id:"delete-opportunity-1",level:3},{value:"Get Confidential Opportunities",id:"get-confidential-opportunities-1",level:3},{value:"Get Opportunities",id:"get-opportunities-1",level:3},{value:"Get Opportunity By ID",id:"get-opportunity-by-id-1",level:3},{value:"Get Opportunities By Slug",id:"get-opportunities-by-slug",level:3},{value:"Error Responses",id:"error-responses",level:3},{value:"Best Practices",id:"best-practices-1",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"opportunities-service-documentation",children:"Opportunities Service Documentation"})}),"\n",(0,r.jsx)(n.p,{children:"This document outlines the various functions and services related to managing opportunities in Firestore. It includes detailed information on creating, fetching, and deleting opportunities, along with role-based access control and data confidentiality."}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#create-opportunity",children:"Create Opportunity"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#function-overview",children:"Function Overview"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#parameters",children:"Parameters"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#response",children:"Response"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#implementation-details",children:"Implementation Details"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#example-usage",children:"Example Usage"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#best-practices",children:"Best Practices"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#real-life-use-cases",children:"Real-Life Use Cases"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#get-opportunities",children:"Get Opportunities"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#function-overview-1",children:"Function Overview"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#request-parameters",children:"Request Parameters"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#response-1",children:"Response"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#example-usage-1",children:"Example Usage"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#get-confidential-opportunities",children:"Get Confidential Opportunities"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#function-overview-2",children:"Function Overview"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#authentication-requirement",children:"Authentication Requirement"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#response-2",children:"Response"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#example-usage-2",children:"Example Usage"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#get-opportunity-by-id",children:"Get Opportunity By ID"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#function-overview-3",children:"Function Overview"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#response-3",children:"Response"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#example-usage-3",children:"Example Usage"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#delete-opportunity",children:"Delete Opportunity"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#function-overview-4",children:"Function Overview"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#example-usage-4",children:"Example Usage"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#service-implementations",children:"Service Implementations"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"create-opportunity",children:"Create Opportunity"}),"\n",(0,r.jsxs)(n.p,{children:["This document outlines the ",(0,r.jsx)(n.code,{children:"createOpportunity"})," function, which allows authenticated users to create new opportunities in Firestore. The function enforces role-based access control and ensures data confidentiality."]}),"\n",(0,r.jsx)(n.h3,{id:"function-overview",children:"Function Overview"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"async function createOpportunity(data: Opportunity): Promise<Opportunity>\n"})}),"\n",(0,r.jsx)(n.p,{children:"Creates a new opportunity in Firestore with validations for user role, confidentiality, and entity association."}),"\n",(0,r.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(n.h4,{id:"input",children:"Input"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"data"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Opportunity"})}),(0,r.jsx)(n.td,{children:"The opportunity data to be created."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"opportunity-object-structure",children:"Opportunity Object Structure"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"id"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Autogenerated unique identifier for the opportunity."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"type"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"OpportunityType"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsxs)(n.td,{children:["Specifies whether the opportunity is an ",(0,r.jsx)(n.code,{children:"offer"})," or a ",(0,r.jsx)(n.code,{children:"request"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"title"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Title of the opportunity."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"isConfidential"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Marks the opportunity as confidential."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"briefDescription"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Short description of the opportunity."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"fullDescription"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Detailed description of the opportunity."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"createdBy"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"ID of the user who created the opportunity."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"organizationId"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"ID of the organization associated with the opportunity."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"dateCreated"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Timestamp"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Autogenerated timestamp for creation date."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"dateUpdated"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Timestamp"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Autogenerated timestamp for last update."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"expirationDate"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Timestamp"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Deadline for the opportunity."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"status"})}),(0,r.jsx)(n.td,{children:"`'active'"}),(0,r.jsx)(n.td,{children:"'closed'"}),(0,r.jsx)(n.td,{children:"'expired'`"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"category"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Category of the opportunity."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"tags"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string[]"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Tags for filtering and searching opportunities."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"location"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Location where the opportunity applies."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"budget"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"{ min: number, max: number, currency: string }"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Budget details for the opportunity."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"requiredSkills"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string[]"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Skills required to qualify for the opportunity."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"requiredDocuments"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string[]"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Documents required to apply for the opportunity."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"attachments"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Attachment[]"})}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"List of file attachments related to the opportunity."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"visibility"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"OpportunityVisibility"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsxs)(n.td,{children:["Defines who can view the opportunity. Options are ",(0,r.jsx)(n.code,{children:"public"}),", ",(0,r.jsx)(n.code,{children:"subscriber"}),", ",(0,r.jsx)(n.code,{children:"member"}),", or ",(0,r.jsx)(n.code,{children:"confidential"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"contactInfo"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"{ linkedEntity: string, contactAccount: string }"})}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Contact information, including linked entity and creator's account."})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"response",children:"Response"}),"\n",(0,r.jsx)(n.h4,{id:"success",children:"Success"}),"\n",(0,r.jsxs)(n.p,{children:["Returns a ",(0,r.jsx)(n.code,{children:"Promise"})," resolving to the newly created opportunity object:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface Opportunity {\n  id: string;\n  type: OpportunityType;\n  title: string;\n  isConfidential: boolean;\n  briefDescription: string;\n  fullDescription?: string;\n  createdBy: string;\n  organizationId: string;\n  dateCreated: Timestamp;\n  dateUpdated: Timestamp;\n  expirationDate: Timestamp;\n  status: 'active' | 'closed' | 'expired';\n  category: string;\n  tags: string[];\n  location: string;\n  budget?: {\n    min: number;\n    max: number;\n    currency: string;\n  };\n  requiredSkills: string[];\n  requiredDocuments: string[];\n  attachments: Attachment[];\n  visibility: OpportunityVisibility;\n  contactInfo: {\n    linkedEntity: string;\n    contactAccount: string;\n  };\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"error",children:"Error"}),"\n",(0,r.jsx)(n.p,{children:"Throws an error if any of the following occur:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Unauthorized access."}),"\n",(0,r.jsx)(n.li,{children:"Invalid user role."}),"\n",(0,r.jsx)(n.li,{children:"Entity does not exist."}),"\n",(0,r.jsx)(n.li,{children:"Confidentiality validation fails."}),"\n",(0,r.jsx)(n.li,{children:"Unauthorized association with an entity."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,r.jsx)(n.h4,{id:"steps-in-the-function",children:"Steps in the Function"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authenticate User"}),": Validates the session using ",(0,r.jsx)(n.code,{children:"auth()"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Role Validation"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Restricts ",(0,r.jsx)(n.code,{children:"VISITOR"})," role from creating opportunities."]}),"\n",(0,r.jsx)(n.li,{children:"Ensures confidentiality rules are enforced."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Entity Validation"}),": Verifies the existence of the associated entity and its confidentiality rules."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authorization Check"}),": Confirms the user creating the opportunity is linked to the associated entity."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Firestore Write"}),": Adds the new opportunity to the Firestore database."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return Response"}),": Returns the newly created opportunity object with its autogenerated ID."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-usage",children:"Example Usage"}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(l.A,{value:"javascript",label:"JavaScript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { createOpportunity } from '@/services/opportunities';\n\nconst opportunityData = {\n  type: 'offer',\n  title: 'Web Development Project',\n  isConfidential: false,\n  briefDescription: 'Looking for a web developer to build an e-commerce site.',\n  fullDescription: 'We need a developer with experience in React and Node.js.',\n  contactInfo: {\n    linkedEntity: 'entity123',\n    contactAccount: 'user456',\n  },\n  category: 'IT & Software',\n  tags: ['web development', 'e-commerce'],\n  location: 'Remote',\n  budget: {\n    min: 1000,\n    max: 5000,\n    currency: 'USD',\n  },\n  requiredSkills: ['React', 'Node.js'],\n  expirationDate: new Date('2024-12-31'),\n  visibility: 'public',\n};\n\ntry {\n  const newOpportunity = await createOpportunity(opportunityData);\n  console.log('Opportunity created:', newOpportunity);\n} catch (error) {\n  console.error('Error creating opportunity:', error);\n}\n"})})}),(0,r.jsx)(l.A,{value:"typescript",label:"TypeScript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { createOpportunity } from '@/services/opportunities';\nimport { Opportunity } from '@/features/opportunities/types';\n\nconst opportunityData: Opportunity = {\n  type: 'offer',\n  title: 'Mobile App Development',\n  isConfidential: true,\n  briefDescription: 'Seeking a developer for a fintech mobile app.',\n  contactInfo: {\n    linkedEntity: 'entity789',\n    contactAccount: 'user123',\n  },\n  category: 'Mobile Development',\n  tags: ['fintech', 'mobile app'],\n  location: 'New York, USA',\n  budget: {\n    min: 2000,\n    max: 10000,\n    currency: 'USD',\n  },\n  requiredSkills: ['Flutter', 'Dart'],\n  expirationDate: new Date('2025-01-15'),\n  visibility: 'member',\n};\n\ntry {\n  const newOpportunity = await createOpportunity(opportunityData);\n  console.log('Opportunity created:', newOpportunity);\n} catch (error) {\n  console.error('Error creating opportunity:', error);\n}\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"real-life-use-cases",children:"Real-Life Use Cases"}),"\n",(0,r.jsx)(n.h4,{id:"recruitment",children:"Recruitment"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scenario"}),": A company posts an opportunity for a software developer role."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use"}),": They specify ",(0,r.jsx)(n.code,{children:"requiredSkills"}),", ",(0,r.jsx)(n.code,{children:"budget"}),", and ",(0,r.jsx)(n.code,{children:"location"})," to attract qualified candidates."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"business-collaboration",children:"Business Collaboration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scenario"}),": A startup seeks collaborators for a joint product launch."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use"}),": They set ",(0,r.jsx)(n.code,{children:"visibility"})," to ",(0,r.jsx)(n.code,{children:"subscriber"})," and share the opportunity with trusted partners."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"confidential-projects",children:"Confidential Projects"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scenario"}),": A research firm offers a high-budget confidential project."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use"}),": They mark the opportunity as ",(0,r.jsx)(n.code,{children:"confidential"})," to restrict access."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.admonition,{title:"Best Practices",type:"tip",children:(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error Handling"}),": Always wrap the function in a ",(0,r.jsx)(n.code,{children:"try-catch"})," block to handle potential errors gracefully."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Validation"}),": Ensure input data conforms to the required structure and types."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Role-Based Access"}),": Enforce role-based access control to ensure only authorized users can create opportunities."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Confidentiality"}),": Respect confidentiality settings and ensure data is only accessible to authorized users."]}),"\n"]})}),"\n",(0,r.jsx)(n.h2,{id:"get-opportunities",children:"Get Opportunities"}),"\n",(0,r.jsx)(n.p,{children:"This service fetches a paginated list of opportunities, respecting the assigned user role and visibility restrictions."}),"\n",(0,r.jsx)(n.h3,{id:"function-overview-1",children:"Function Overview"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"getOpportunities(\n  userRole: UserRole = UserRole.SUBSCRIBER,\n  limit: number = 20,\n  startAfter?: string\n): Promise<{ opportunities: Opportunity[]; lastVisible: string | null }>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"request-parameters",children:"Request Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"userRole"}),": ",(0,r.jsx)(n.em,{children:"(Optional)"})," ",(0,r.jsx)(n.code,{children:"UserRole"}),"\nDefault: ",(0,r.jsx)(n.code,{children:"SUBSCRIBER"}),"\nThe role of the user requesting opportunities. Supports roles like ",(0,r.jsx)(n.code,{children:"ADMIN"}),", ",(0,r.jsx)(n.code,{children:"CONFIDENTIAL"}),", ",(0,r.jsx)(n.code,{children:"MEMBER"}),", etc."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"limit"}),": ",(0,r.jsx)(n.em,{children:"(Optional)"})," ",(0,r.jsx)(n.code,{children:"number"}),"\nDefault: ",(0,r.jsx)(n.code,{children:"20"}),"\nThe maximum number of opportunities to retrieve per request."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"startAfter"}),": ",(0,r.jsx)(n.em,{children:"(Optional)"})," ",(0,r.jsx)(n.code,{children:"string"}),"\nA Firestore document ID specifying where to start the pagination."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"response-1",children:"Response"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"{\n  opportunities: Opportunity[];\n  lastVisible: string | null;\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"response-details",children:"Response Details"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"opportunities"})}),"\nAn array of ",(0,r.jsx)(n.code,{children:"Opportunity"})," objects, including only those visible based on user roles (e.g., ",(0,r.jsx)(n.code,{children:"PUBLIC"}),", ",(0,r.jsx)(n.code,{children:"SUBSCRIBER"}),", or ",(0,r.jsx)(n.code,{children:"CONFIDENTIAL"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"lastVisible"})}),"\nA string containing the ID of the last visible document for pagination purposes. Null if no more documents exist."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-usage-1",children:"Example Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const { opportunities, lastVisible } = await getOpportunities(\n  UserRole.MEMBER,\n  10,\n  'lastDocumentId'\n);\n\nconsole.log(opportunities);  // List of retrieved opportunities\nconsole.log(lastVisible);    // ID of the last visible item\n"})}),"\n",(0,r.jsx)(n.h2,{id:"get-confidential-opportunities",children:"Get Confidential Opportunities"}),"\n",(0,r.jsxs)(n.p,{children:["This service fetches all opportunities marked as confidential. This function is designed specifically for users with roles like ",(0,r.jsx)(n.code,{children:"ADMIN"})," or ",(0,r.jsx)(n.code,{children:"CONFIDENTIAL"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"authentication-requirement",children:"Authentication Requirement"}),"\n",(0,r.jsxs)(n.p,{children:["Only accessible by users assigned the ",(0,r.jsx)(n.code,{children:"ADMIN"})," or ",(0,r.jsx)(n.code,{children:"CONFIDENTIAL"})," roles."]}),"\n",(0,r.jsx)(n.h3,{id:"function-overview-2",children:"Function Overview"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"getConfidentialOpportunities(\n  userRole: UserRole\n): Promise<Opportunity[]>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"response-2",children:"Response"}),"\n",(0,r.jsxs)(n.p,{children:["Returns an array of ",(0,r.jsx)(n.code,{children:"Opportunity"})," objects containing ",(0,r.jsx)(n.code,{children:"isConfidential"})," set to ",(0,r.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"[\n  {\n    id: string;\n    title: string;\n    description: string;\n    type: OpportunityType;\n    visibility: OpportunityVisibility;\n    isConfidential: boolean;  // Always `true` here\n    createdAt: string;\n    // Other Fields...\n  }\n]\n"})}),"\n",(0,r.jsx)(n.h4,{id:"response-details-1",children:"Response Details"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The returned data explicitly focuses on opportunities meant for ",(0,r.jsx)(n.code,{children:"CONFIDENTIAL"})," visibility."]}),"\n",(0,r.jsxs)(n.li,{children:["Includes Firestore document IDs (",(0,r.jsx)(n.code,{children:"id"}),") for each result."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-usage-2",children:"Example Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const confidentialOpportunities = await getConfidentialOpportunities(UserRole.CONFIDENTIAL);\n\nconfidentialOpportunities.forEach(opportunity => {\n  console.log(opportunity.title, opportunity.description);\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"get-opportunity-by-id",children:"Get Opportunity By ID"}),"\n",(0,r.jsxs)(n.p,{children:["Fetches a specific opportunity by its unique Firestore ",(0,r.jsx)(n.code,{children:"document ID"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"function-overview-3",children:"Function Overview"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"getOpportunityById(id: string): Promise<Opportunity | null>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"response-3",children:"Response"}),"\n",(0,r.jsxs)(n.p,{children:["Returns a single ",(0,r.jsx)(n.code,{children:"Opportunity"})," object or ",(0,r.jsx)(n.code,{children:"null"})," if the document doesn't exist."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"{\n  id: string;  // Firestore Document ID\n  title: string;\n  description: string;\n  type: OpportunityType;\n  visibility: OpportunityVisibility;\n  createdAt: string;\n  // Other fields based on opportunities schema\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"response-details-2",children:"Response Details"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The function ensures that each opportunity fetched includes its Firestore ",(0,r.jsx)(n.code,{children:"id"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-usage-3",children:"Example Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const opportunity = await getOpportunityById('documentId123');\n\nif (opportunity) {\n  console.log(opportunity.title, opportunity.description);\n} else {\n  console.error('Opportunity not found');\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"delete-opportunity",children:"Delete Opportunity"}),"\n",(0,r.jsxs)(n.p,{children:["Deletes a specific opportunity by its unique Firestore ",(0,r.jsx)(n.code,{children:"document ID"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"function-overview-4",children:"Function Overview"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"deleteOpportunity(opportunityId: string): Promise<boolean>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"example-usage-4",children:"Example Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const isDeleted = await deleteOpportunity('opportunityId123');\n\nif (isDeleted) {\n  console.log('Opportunity deleted successfully');\n} else {\n  console.error('Failed to delete opportunity');\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"service-implementations",children:"Service Implementations"}),"\n",(0,r.jsx)(n.h3,{id:"create-opportunity-1",children:"Create Opportunity"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { getOpportunitiesCollection, getEntitiesCollection } from '@/lib/firestore-collections';\nimport { Opportunity } from '@/features/opportunities/types';\nimport { auth } from '@/auth'; // Use the Auth.js v5 handler to get the session\nimport { UserRole } from '@/features/auth/types';\n\n/**\n * Create a new Opportunity in Firestore, ensuring confidentiality and role-based rules.\n */\nexport async function createOpportunity(data: Opportunity): Promise<Opportunity> {\n  try {\n    console.log('Services: createOpportunity - Starting creation of new opportunity...');\n\n    // Step 1: Authenticate and get user session\n    const session = await auth(); // Auth.js v5 session handler\n    if (!session || !session.user) {\n      throw new Error('Unauthorized access');\n    }\n\n    const { id: userId, role: userRole } = session.user;\n\n    // Step 2: Validate user role and permissions\n    if (userRole === 'VISITOR') {\n      throw new Error('Access denied. Visitors cannot create opportunities.');\n    }\n\n    if (data.isConfidential && userRole !== 'CONFIDENTIAL' && userRole !== 'ADMIN') {\n      throw new Error('Only CONFIDENTIAL or ADMIN users can create confidential opportunities.');\n    }\n\n    console.log(`Services: createOpportunity - User authenticated with ID ${userId} and role ${userRole}`);\n\n    // Step 3: Firestore setup\n    const opportunitiesCollection = await getOpportunitiesCollection();\n    const entitiesCollection = await getEntitiesCollection();\n\n    // Step 4: Validate the associated Entity\n    const entityId = data.contactInfo.linkedEntity; // Associated entity ID from contactInfo\n    const entityDoc = await entitiesCollection.doc(entityId).get();\n\n    if (!entityDoc.exists) {\n      throw new Error(`Entity with ID ${entityId} not found.`);\n    }\n\n    const entity = entityDoc.data();\n    const isEntityConfidential = entity?.isConfidential || false;\n    const entityAddedBy = entity?.contactAccount; // Use the `contactAccount` field from the entity\n\n    if (data.isConfidential) {\n      // Check if the associated entity is also confidential and created by CONFIDENTIAL or ADMIN\n      if (!isEntityConfidential || (entityAddedBy !== 'CONFIDENTIAL' && entityAddedBy !== 'ADMIN')) {\n        throw new Error(\n          'Confidential opportunities must be linked to confidential entities created by ADMIN or CONFIDENTIAL users.'\n        );\n      }\n    }\n\n    console.log(`Services: createOpportunity - Associated entity validated with ID ${entityId}`);\n\n    // Step 5: Validate opportunity author relation with entity\n    if (data.contactInfo.contactAccount !== userId) {\n      throw new Error('You are not authorized to create an opportunity for this entity.');\n    }\n\n    // Step 6: Add the Opportunity to Firestore\n    const newOpportunityData = {\n      ...data,\n      createdBy: userId,\n      dateCreated: new Date(),\n      dateUpdated: new Date(),\n    };\n\n    const docRef = await opportunitiesCollection.add(newOpportunityData); // Write the opportunity to Firestore\n    const docSnap = await docRef.get();\n    const opportunity = docSnap.data() as Opportunity;\n\n    console.log('Services: createOpportunity - Opportunity created successfully with ID:', docRef.id);\n\n    // Step 7: Remove the `id` field from Firestore data to avoid overwriting ID\n    const { id: firestoreId, ...opportunityWithoutId } = opportunity;\n\n    // Step 8: Return the newly created opportunity with its autogenerated ID\n    return {\n      id: docRef.id,\n      ...opportunityWithoutId, // Spread other fields without overwriting the autogenerated ID\n    };\n  } catch (error) {\n    console.error('Services: createOpportunity - Error creating opportunity:', error);\n    throw error; // Propagate the error to the caller\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"delete-opportunity-1",children:"Delete Opportunity"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { getOpportunitiesCollection } from '@/lib/firestore-collections';\n\nexport async function deleteOpportunity(opportunityId: string): Promise<boolean> {\n  const opportunitiesCollection = getOpportunitiesCollection();\n  try {\n    await opportunitiesCollection.doc(opportunityId).delete();\n    return true;\n  } catch (error) {\n    console.error('Error deleting opportunity:', error);\n    return false;\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"get-confidential-opportunities-1",children:"Get Confidential Opportunities"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { getAdminDb } from '@/lib/firebase-admin-server';\nimport { Opportunity } from '@/features/opportunities/types';\nimport { handleFirestoreError } from '@/lib/errorHandler';\nimport { UserRole } from '@/features/auth/types';\n\n/**\n * Fetch all confidential opportunities, restricted to admin or confidential roles.\n * @param userRole The role of the user requesting the confidential opportunities.\n * @returns An array of confidential opportunities.\n */\nexport async function getConfidentialOpportunities(userRole: UserRole): Promise<Opportunity[]> {\n  try {\n    console.log('Services: getConfidentialOpportunities - Starting with user role:', userRole);\n\n    // Restrict access to admin or confidential users only\n    if (userRole !== 'admin' && userRole !== 'confidential') {\n      console.warn('Services: getConfidentialOpportunities - Access denied for user role:', userRole);\n      return []; // Return an empty array or handle unauthorized access\n    }\n\n    // Initialize Firestore\n    const adminDb = await getAdminDb();\n    const opportunitiesCol = adminDb.collection('opportunities');\n\n    // Query confidential opportunities from Firestore\n    const querySnapshot = await opportunitiesCol\n      .where('isConfidential', '==', true)\n      .get();\n\n    // Map results to Opportunity objects\n    const opportunities = querySnapshot.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    })) as Opportunity[];\n\n    console.log('Services: getConfidentialOpportunities - Retrieved:', opportunities.length, 'opportunities');\n\n    return opportunities;\n  } catch (error) {\n    console.error('Services: getConfidentialOpportunities - Error fetching opportunities:', error);\n    throw handleFirestoreError(error);\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"get-opportunities-1",children:"Get Opportunities"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { getAdminDb } from '@/lib/firebase-admin-server';\nimport {\n  FirestoreDataConverter,\n  QuerySnapshot,\n  Query,\n  Filter, // Importing from firebase-admin\n} from 'firebase-admin/firestore';\nimport { Opportunity, OpportunityType, OpportunityVisibility } from '@/features/opportunities/types';\nimport { UserRole } from '@/features/auth/types';\nimport { opportunityConverter } from '@/lib/converters/opportunity-converter';\nimport { handleFirestoreError } from '@/lib/errorHandler';\n\n/**\n * Fetch a paginated list of opportunities based on user role.\n */\nexport async function getOpportunities(\n  userRole: UserRole = UserRole.SUBSCRIBER,\n  limit: number = 20,\n  startAfter?: string\n): Promise<{ opportunities: Opportunity[]; lastVisible: string | null }> {\n  try {\n    console.log('Services: getOpportunities - Starting...');\n\n    // Access Firestore and initialize collection with converter\n    const adminDb = await getAdminDb();\n    const opportunitiesCol = adminDb\n      .collection('opportunities')\n      .withConverter(opportunityConverter as FirestoreDataConverter<Opportunity>);\n\n    // Build the query based on user role and apply filters\n    let fireQuery: Query<Opportunity> = opportunitiesCol.orderBy('dateCreated', 'desc').limit(limit);\n\n    if (userRole !== 'admin' && userRole !== 'confidential') {\n      // Apply role-based visibility filtering with `Filter`\n      fireQuery = fireQuery.where(\n        Filter.or(\n          Filter.where('visibility', '==', 'public'),\n          Filter.where('visibility', '==', 'subscriber'),\n          Filter.where('visibility', '==', userRole)\n        )\n      );\n    }\n\n    // Handle pagination using `startAfter`\n    if (startAfter) {\n      const startAfterDoc = await opportunitiesCol.doc(startAfter).get();\n      if (startAfterDoc.exists) {\n        fireQuery = fireQuery.startAfter(startAfterDoc);\n      }\n    }\n\n    // Execute the query and process results\n    const querySnapshot: QuerySnapshot<Opportunity> = await fireQuery.get();\n\n    // Map document snapshots to Opportunity objects\n    const opportunities = querySnapshot.docs.map((doc) => ({\n      id: doc.id, // Explicitly add the ID\n      ...doc.data(), // Spread all other document fields\n    }));\n\n    // Get the ID of the last visible document for pagination\n    const lastVisible =\n      querySnapshot.docs.length > 0 ? querySnapshot.docs[querySnapshot.docs.length - 1].id : null;\n\n    console.log('Services: getOpportunities - Retrieved:', opportunities.length, 'opportunities');\n    return { opportunities, lastVisible };\n  } catch (error) {\n    console.error('Services: getOpportunities - Error fetching opportunities:', error);\n    throw handleFirestoreError(error); // Handle Firestore-specific errors\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"get-opportunity-by-id-1",children:"Get Opportunity By ID"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { getAdminDb } from '@/lib/firebase-admin-server';\nimport { Opportunity, OpportunityType, OpportunityVisibility } from '@/features/opportunities/types';\nimport { handleFirestoreError } from '@/lib/errorHandler';\n\n/**\n * Fetch an opportunity by its ID.\n */\nexport async function getOpportunityById(id: string): Promise<Opportunity | null> {\n  try {\n    console.log('Services: getOpportunityById - Fetching opportunity with ID:', id);\n\n    const adminDb = await getAdminDb();\n    const docRef = adminDb.collection('opportunities').doc(id);\n    const docSnap = await docRef.get();\n\n    if (!docSnap.exists) {\n      console.warn('Services: getOpportunityById - No opportunity found with ID:', id);\n      return null; // Return null if the opportunity does not exist\n    }\n\n    const data = docSnap.data();\n    if (data) {\n      const opportunity: Opportunity = {\n        id: docSnap.id, // Add document ID explicitly\n        ...data,\n        type: data.type as OpportunityType,\n        visibility: data.visibility as OpportunityVisibility,\n      };\n      console.log('Services: getOpportunityById - Opportunity retrieved successfully');\n      return opportunity;\n    }\n\n    return null;\n  } catch (error) {\n    console.error('Services: getOpportunityById - Error fetching opportunity:', error);\n    throw handleFirestoreError(error); // Handle Firestore errors with meaningful responses\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"get-opportunities-by-slug",children:"Get Opportunities By Slug"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { getAdminDb } from '@/lib/firebase-admin-server';\nimport { Opportunity } from '@/features/opportunities/types';\nimport { handleFirestoreError } from '@/lib/errorHandler';\n\n/**\n * Fetch opportunities that match specified tags (via slug array).\n */\nexport async function getOpportunitiesBySlug(slugs: string[]): Promise<Opportunity[]> {\n  try {\n    console.log('Services: getOpportunitiesBySlug - Starting with slugs:', slugs);\n\n    const adminDb = await getAdminDb();\n    const opportunitiesCol = adminDb.collection('opportunities');\n\n    // Create query for matching tags\n    const slugQuery = slugs.length\n      ? opportunitiesCol.where('tags', 'array-contains-any', slugs)\n      : opportunitiesCol;\n\n    const opportunitySnapshot = await slugQuery.get();\n\n    // Map and return resulting opportunities\n    const opportunities = opportunitySnapshot.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    })) as Opportunity[];\n\n    console.log(\n      'Services: getOpportunitiesBySlug - Retrieved:',\n      opportunities.length,\n      'opportunities'\n    );\n\n    return opportunities;\n  } catch (error) {\n    console.error('Services: getOpportunitiesBySlug - Error fetching opportunities by slug:', error);\n    throw handleFirestoreError(error); // Handle Firestore-specific errors\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"error-responses",children:"Error Responses"}),"\n",(0,r.jsxs)(n.p,{children:["Both ",(0,r.jsx)(n.code,{children:"getOpportunities"})," and ",(0,r.jsx)(n.code,{children:"getConfidentialOpportunities"})," respond with the following errors:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"403 Forbidden"}),": If users without required roles attempt to access restricted opportunities."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"500 Internal Server Error"}),": For unexpected failures in fetching data from Firestore."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"best-practices-1",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Use Firestore indexes for filtering and efficiency:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-firestore_indexes.json",children:"{\n  fields: [{ fieldPath: 'isConfidential', order: 'ASCENDING' }]\n}\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Leverage pagination for large data sets:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"startAfter"})," with the ",(0,r.jsx)(n.code,{children:"id"})," of documents instead of unnecessary client-side load."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This  documentation provides a comprehensive overview of the opportunities service layer, including detailed information on creating, fetching, and deleting opportunities, along with role-based access control and data confidentiality."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>o});t(6540);var i=t(4164);const r={tabItem:"tabItem_Ymn6"};var s=t(4848);function o(e){let{children:n,hidden:t,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,o),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>O});var i=t(6540),r=t(4164),s=t(3104),o=t(6347),l=t(205),c=t(7485),d=t(1682),a=t(679);function p(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:r}}=e;return{value:n,label:t,attributes:i,default:r}}))}(t);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const r=(0,o.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c.aZ)(s),(0,i.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function j(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=u(e),[o,c]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:s}))),[d,p]=x({queryString:t,groupId:r}),[j,y]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,a.Dv)(t);return[r,(0,i.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),f=(()=>{const e=d??j;return h({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{f&&c(f)}),[f]);return{selectedValue:o,selectValue:(0,i.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),p(e),y(e)}),[p,y,s]),tabValues:s}}var y=t(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(4848);function m(e){let{className:n,block:t,selectedValue:i,selectValue:o,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.a_)(),a=e=>{const n=e.currentTarget,t=c.indexOf(n),r=l[t].value;r!==i&&(d(n),o(r))},p=e=>{let n=null;switch(e.key){case"Enter":a(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>c.push(e),onKeyDown:p,onClick:a,...s,className:(0,r.A)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":i===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:s}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===s));return e?(0,i.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function b(e){const n=j(e);return(0,g.jsxs)("div",{className:(0,r.A)("tabs-container",f.tabList),children:[(0,g.jsx)(m,{...n,...e}),(0,g.jsx)(v,{...n,...e})]})}function O(e){const n=(0,y.A)();return(0,g.jsx)(b,{...e,children:p(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);